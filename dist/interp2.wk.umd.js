!function(b,d){"object"==typeof exports&&"undefined"!=typeof module?module.exports=d(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],d):(b="undefined"!=typeof globalThis?globalThis:b||self).interp2=d(b.worker_threads)}(this,(function(b){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var d={};!function(d,l){d.exports=function(b){var d={};!function(b){var d=Object.prototype.hasOwnProperty,l="~";function Z(){}function m(b,d,l){this.fn=b,this.context=d,this.once=l||!1}function X(b,d,Z,X,G){if("function"!=typeof Z)throw new TypeError("The listener must be a function");var W=new m(Z,X||b,G),c=l?l+d:d;return b._events[c]?b._events[c].fn?b._events[c]=[b._events[c],W]:b._events[c].push(W):(b._events[c]=W,b._eventsCount++),b}function G(b,d){0==--b._eventsCount?b._events=new Z:delete b._events[d]}function W(){this._events=new Z,this._eventsCount=0}Object.create&&(Z.prototype=Object.create(null),(new Z).__proto__||(l=!1)),W.prototype.eventNames=function(){var b,Z,m=[];if(0===this._eventsCount)return m;for(Z in b=this._events)d.call(b,Z)&&m.push(l?Z.slice(1):Z);return Object.getOwnPropertySymbols?m.concat(Object.getOwnPropertySymbols(b)):m},W.prototype.listeners=function(b){var d=l?l+b:b,Z=this._events[d];if(!Z)return[];if(Z.fn)return[Z.fn];for(var m=0,X=Z.length,G=new Array(X);m<X;m++)G[m]=Z[m].fn;return G},W.prototype.listenerCount=function(b){var d=l?l+b:b,Z=this._events[d];return Z?Z.fn?1:Z.length:0},W.prototype.emit=function(b,d,Z,m,X,G){var W=l?l+b:b;if(!this._events[W])return!1;var c,s,K=this._events[W],p=arguments.length;if(K.fn){switch(K.once&&this.removeListener(b,K.fn,void 0,!0),p){case 1:return K.fn.call(K.context),!0;case 2:return K.fn.call(K.context,d),!0;case 3:return K.fn.call(K.context,d,Z),!0;case 4:return K.fn.call(K.context,d,Z,m),!0;case 5:return K.fn.call(K.context,d,Z,m,X),!0;case 6:return K.fn.call(K.context,d,Z,m,X,G),!0}for(s=1,c=new Array(p-1);s<p;s++)c[s-1]=arguments[s];K.fn.apply(K.context,c)}else{var y,i=K.length;for(s=0;s<i;s++)switch(K[s].once&&this.removeListener(b,K[s].fn,void 0,!0),p){case 1:K[s].fn.call(K[s].context);break;case 2:K[s].fn.call(K[s].context,d);break;case 3:K[s].fn.call(K[s].context,d,Z);break;case 4:K[s].fn.call(K[s].context,d,Z,m);break;default:if(!c)for(y=1,c=new Array(p-1);y<p;y++)c[y-1]=arguments[y];K[s].fn.apply(K[s].context,c)}}return!0},W.prototype.on=function(b,d,l){return X(this,b,d,l,!1)},W.prototype.once=function(b,d,l){return X(this,b,d,l,!0)},W.prototype.removeListener=function(b,d,Z,m){var X=l?l+b:b;if(!this._events[X])return this;if(!d)return G(this,X),this;var W=this._events[X];if(W.fn)W.fn!==d||m&&!W.once||Z&&W.context!==Z||G(this,X);else{for(var c=0,s=[],K=W.length;c<K;c++)(W[c].fn!==d||m&&!W[c].once||Z&&W[c].context!==Z)&&s.push(W[c]);s.length?this._events[X]=1===s.length?s[0]:s:G(this,X)}return this},W.prototype.removeAllListeners=function(b){var d;return b?(d=l?l+b:b,this._events[d]&&G(this,d)):(this._events=new Z,this._eventsCount=0),this},W.prototype.off=W.prototype.removeListener,W.prototype.addListener=W.prototype.on,W.prefixed=l,W.EventEmitter=W,b.exports=W}({get exports(){return d},set exports(b){d=b}});var l=d;let Z;return function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;let d=(m="",Buffer.from(m,"base64").toString("utf8"));var m;function X(){let Z=new l,m=function(d){try{return new b.Worker(d,{eval:!0})}catch(b){G(b)}}(d);if(!m)return G("invalid worker"),null;function X(){let b=function(){let b,d,l=new Promise((function(){b=arguments[0],d=arguments[1]}));return l.resolve=b,l.reject=d,l}(),d=function(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,d=[],l="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),Z=l.length;for(let m=0;m<b;m++)d[m]=l[0|Math.random()*Z];return d.join("")}(),l={mode:"call",id:d,fun:"main",input:[...arguments]};return m.postMessage(l),Z.once(d,(d=>{"success"===d.state?b.resolve(d.msg):b.reject(d.msg)})),b}function G(b){Z.emit("error",b)}return m.on("message",(function(b){let d=b,l=d.mode;"emit"!==l&&"return"!==l||("emit"===l&&Z.emit(d.evName,d.msg),"return"===l&&Z.emit(d.id,d))})),m.on("error",G),function(){let b={mode:"init",type:"function",input:[...arguments]};m.postMessage(b)}([...arguments]),Z.main=X,Z.main=X,Z.terminate=function(){m?(m.terminate(),m=void 0):G("worker has been terminated")},Z}Z=async function(){let b=[...arguments],d=X();return await d.main(...b).finally((()=>{d.terminate()}))}}(),Z}(b)}({get exports(){return d},set exports(b){d=b}});var l=d,Z={};!function(b,d){b.exports=function(){const b="function"==typeof atob,d="function"==typeof Buffer,l="function"==typeof TextDecoder?new TextDecoder:void 0,Z=(b=>{let d={};return b.forEach(((b,l)=>d[b]=l)),d})(("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="))),m=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,X=String.fromCharCode.bind(String),G="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):b=>new Uint8Array(Array.prototype.slice.call(b,0)),W=b=>b.replace(/[^A-Za-z0-9\+\/]/g,""),c=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,s=b=>{switch(b.length){case 4:var d=((7&b.charCodeAt(0))<<18|(63&b.charCodeAt(1))<<12|(63&b.charCodeAt(2))<<6|63&b.charCodeAt(3))-65536;return X(55296+(d>>>10))+X(56320+(1023&d));case 3:return X((15&b.charCodeAt(0))<<12|(63&b.charCodeAt(1))<<6|63&b.charCodeAt(2));default:return X((31&b.charCodeAt(0))<<6|63&b.charCodeAt(1))}},K=b=>b.replace(c,s),p=b=>{if(b=b.replace(/\s+/g,""),!m.test(b))throw new TypeError("malformed base64.");b+="==".slice(2-(3&b.length));let d,l,G,W="";for(let m=0;m<b.length;)d=Z[b.charAt(m++)]<<18|Z[b.charAt(m++)]<<12|(l=Z[b.charAt(m++)])<<6|(G=Z[b.charAt(m++)]),W+=64===l?X(d>>16&255):64===G?X(d>>16&255,d>>8&255):X(d>>16&255,d>>8&255,255&d);return W},y=b?b=>atob(W(b)):d?b=>Buffer.from(b,"base64").toString("binary"):p,i=d?b=>G(Buffer.from(b,"base64")):b=>G(y(b).split("").map((b=>b.charCodeAt(0)))),h=d?b=>Buffer.from(b,"base64").toString("utf8"):l?b=>l.decode(i(b)):b=>K(y(b)),u=b=>W(b.replace(/[-_]/g,(b=>"-"==b?"+":"/"))),V=b=>h(u(b)),I=V;var L={};!function(b){var d=Object.prototype.hasOwnProperty,l="~";function Z(){}function m(b,d,l){this.fn=b,this.context=d,this.once=l||!1}function X(b,d,Z,X,G){if("function"!=typeof Z)throw new TypeError("The listener must be a function");var W=new m(Z,X||b,G),c=l?l+d:d;return b._events[c]?b._events[c].fn?b._events[c]=[b._events[c],W]:b._events[c].push(W):(b._events[c]=W,b._eventsCount++),b}function G(b,d){0==--b._eventsCount?b._events=new Z:delete b._events[d]}function W(){this._events=new Z,this._eventsCount=0}Object.create&&(Z.prototype=Object.create(null),(new Z).__proto__||(l=!1)),W.prototype.eventNames=function(){var b,Z,m=[];if(0===this._eventsCount)return m;for(Z in b=this._events)d.call(b,Z)&&m.push(l?Z.slice(1):Z);return Object.getOwnPropertySymbols?m.concat(Object.getOwnPropertySymbols(b)):m},W.prototype.listeners=function(b){var d=l?l+b:b,Z=this._events[d];if(!Z)return[];if(Z.fn)return[Z.fn];for(var m=0,X=Z.length,G=new Array(X);m<X;m++)G[m]=Z[m].fn;return G},W.prototype.listenerCount=function(b){var d=l?l+b:b,Z=this._events[d];return Z?Z.fn?1:Z.length:0},W.prototype.emit=function(b,d,Z,m,X,G){var W=l?l+b:b;if(!this._events[W])return!1;var c,s,K=this._events[W],p=arguments.length;if(K.fn){switch(K.once&&this.removeListener(b,K.fn,void 0,!0),p){case 1:return K.fn.call(K.context),!0;case 2:return K.fn.call(K.context,d),!0;case 3:return K.fn.call(K.context,d,Z),!0;case 4:return K.fn.call(K.context,d,Z,m),!0;case 5:return K.fn.call(K.context,d,Z,m,X),!0;case 6:return K.fn.call(K.context,d,Z,m,X,G),!0}for(s=1,c=new Array(p-1);s<p;s++)c[s-1]=arguments[s];K.fn.apply(K.context,c)}else{var y,i=K.length;for(s=0;s<i;s++)switch(K[s].once&&this.removeListener(b,K[s].fn,void 0,!0),p){case 1:K[s].fn.call(K[s].context);break;case 2:K[s].fn.call(K[s].context,d);break;case 3:K[s].fn.call(K[s].context,d,Z);break;case 4:K[s].fn.call(K[s].context,d,Z,m);break;default:if(!c)for(y=1,c=new Array(p-1);y<p;y++)c[y-1]=arguments[y];K[s].fn.apply(K[s].context,c)}}return!0},W.prototype.on=function(b,d,l){return X(this,b,d,l,!1)},W.prototype.once=function(b,d,l){return X(this,b,d,l,!0)},W.prototype.removeListener=function(b,d,Z,m){var X=l?l+b:b;if(!this._events[X])return this;if(!d)return G(this,X),this;var W=this._events[X];if(W.fn)W.fn!==d||m&&!W.once||Z&&W.context!==Z||G(this,X);else{for(var c=0,s=[],K=W.length;c<K;c++)(W[c].fn!==d||m&&!W[c].once||Z&&W[c].context!==Z)&&s.push(W[c]);s.length?this._events[X]=1===s.length?s[0]:s:G(this,X)}return this},W.prototype.removeAllListeners=function(b){var d;return b?(d=l?l+b:b,this._events[d]&&G(this,d)):(this._events=new Z,this._eventsCount=0),this},W.prototype.off=W.prototype.removeListener,W.prototype.addListener=W.prototype.on,W.prefixed=l,W.EventEmitter=W,b.exports=W}({get exports(){return L},set exports(b){L=b}});var Y=L;let x;return function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;let b=I("");function d(){let d=new Y,l=function(b){try{let d=new Blob([b]),l=window.URL||window.webkitURL;return new Worker(l.createObjectURL(d))}catch(b){m(b)}}(b);if(!l)return m("invalid worker"),null;function Z(){let b=function(){let b,d,l=new Promise((function(){b=arguments[0],d=arguments[1]}));return l.resolve=b,l.reject=d,l}(),Z=function(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,d=[],l="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),Z=l.length;for(let m=0;m<b;m++)d[m]=l[0|Math.random()*Z];return d.join("")}(),m={mode:"call",id:Z,fun:"main",input:[...arguments]};return l.postMessage(m),d.once(Z,(d=>{"success"===d.state?b.resolve(d.msg):b.reject(d.msg)})),b}function m(b){d.emit("error",b)}return l.onmessage=function(b){!function(b){let l=b,Z=l.mode;"emit"!==Z&&"return"!==Z||("emit"===Z&&d.emit(l.evName,l.msg),"return"===Z&&d.emit(l.id,l))}(b.data)},l.onerror=m,function(){let b={mode:"init",type:"function",input:[...arguments]};l.postMessage(b)}([...arguments]),d.main=Z,d.main=Z,d.terminate=function(){l?(l.terminate(),l=void 0):m("worker has been terminated")},d}x=async function(){let b=[...arguments],l=d();return await l.main(...b).finally((()=>{l.terminate()}))}}(),x}()}({get exports(){return Z},set exports(b){Z=b}});var m=Z;let X;return X="undefined"!=typeof window&&void 0!==window.document?m:l,X}));
