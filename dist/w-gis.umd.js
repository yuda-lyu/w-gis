/*!
 * w-gis v1.0.46
 * (c) 2018-2021 yuda-lyu(semisphere)
 * Released under the MIT License.
 */
!function(l,d){"object"==typeof exports&&"undefined"!=typeof module?d(exports,require("@turf/turf")):"function"==typeof define&&define.amd?define(["exports","@turf/turf"],d):d((l="undefined"!=typeof globalThis?globalThis:l||self)["w-gis"]={},l["@turf/turf"])}(this,(function(l,d){"use strict";function b(l){var d=Object.create(null);return l&&Object.keys(l).forEach((function(b){if("default"!==b){var Z=Object.getOwnPropertyDescriptor(l,b);Object.defineProperty(d,b,Z.get?Z:{enumerable:!0,get:function(){return l[b]}})}})),d.default=l,Object.freeze(d)}function Z(l,d){return d.forEach((function(d){d&&"string"!=typeof d&&!Array.isArray(d)&&Object.keys(d).forEach((function(b){if("default"!==b&&!(b in l)){var Z=Object.getOwnPropertyDescriptor(d,b);Object.defineProperty(l,b,Z.get?Z:{enumerable:!0,get:function(){return d[b]}})}}))})),Object.freeze(l)}var c=b(d),m="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function X(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}function u(l){if(l.__esModule)return l;var d=l.default;if("function"==typeof d){var b=function l(){if(this instanceof l){var b=[null];return b.push.apply(b,arguments),new(Function.bind.apply(d,b))}return d.apply(this,arguments)};b.prototype=d.prototype}else b={};return Object.defineProperty(b,"__esModule",{value:!0}),Object.keys(l).forEach((function(d){var Z=Object.getOwnPropertyDescriptor(l,d);Object.defineProperty(b,d,Z.get?Z:{enumerable:!0,get:function(){return l[d]}})})),b}var G=Array.isArray,W="object"==typeof m&&m&&m.Object===Object&&m,t=W,s="object"==typeof self&&self&&self.Object===Object&&self,a=t||s||Function("return this")(),n=a.Symbol,h=n,i=Object.prototype,p=i.hasOwnProperty,y=i.toString,V=h?h.toStringTag:void 0;var o=function(l){var d=p.call(l,V),b=l[V];try{l[V]=void 0;var Z=!0}catch(l){}var c=y.call(l);return Z&&(d?l[V]=b:delete l[V]),c},R=Object.prototype.toString;var L=o,K=function(l){return R.call(l)},e=n?n.toStringTag:void 0;var H=function(l){return null==l?void 0===l?"[object Undefined]":"[object Null]":e&&e in Object(l)?L(l):K(l)};var x=function(l){return null!=l&&"object"==typeof l},S=H,Y=x;var J=function(l){return"symbol"==typeof l||Y(l)&&"[object Symbol]"==S(l)},z=G,v=J,T=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,M=/^\w*$/;var F=function(l,d){if(z(l))return!1;var b=typeof l;return!("number"!=b&&"symbol"!=b&&"boolean"!=b&&null!=l&&!v(l))||(M.test(l)||!T.test(l)||null!=d&&l in Object(d))};var C=function(l){var d=typeof l;return null!=l&&("object"==d||"function"==d)},I=H,g=C;var k,r=function(l){if(!g(l))return!1;var d=I(l);return"[object Function]"==d||"[object GeneratorFunction]"==d||"[object AsyncFunction]"==d||"[object Proxy]"==d},N=a["__core-js_shared__"],P=(k=/[^.]+$/.exec(N&&N.keys&&N.keys.IE_PROTO||""))?"Symbol(src)_1."+k:"";var w=function(l){return!!P&&P in l},B=Function.prototype.toString;var U=function(l){if(null!=l){try{return B.call(l)}catch(l){}try{return l+""}catch(l){}}return""},f=r,j=w,Q=C,E=U,O=/^\[object .+?Constructor\]$/,D=Function.prototype,A=Object.prototype,_=D.toString,q=A.hasOwnProperty,$=RegExp("^"+_.call(q).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var ll=function(l,d){return null==l?void 0:l[d]},dl=function(l){return!(!Q(l)||j(l))&&(f(l)?$:O).test(E(l))},bl=ll;var Zl=function(l,d){var b=bl(l,d);return dl(b)?b:void 0},cl=Zl(Object,"create"),ml=cl;var Xl=function(){this.__data__=ml?ml(null):{},this.size=0};var ul=function(l){var d=this.has(l)&&delete this.__data__[l];return this.size-=d?1:0,d},Gl=cl,Wl=Object.prototype.hasOwnProperty;var tl=function(l){var d=this.__data__;if(Gl){var b=d[l];return"__lodash_hash_undefined__"===b?void 0:b}return Wl.call(d,l)?d[l]:void 0},sl=cl,al=Object.prototype.hasOwnProperty;var nl=cl;var hl=Xl,il=ul,pl=tl,yl=function(l){var d=this.__data__;return sl?void 0!==d[l]:al.call(d,l)},Vl=function(l,d){var b=this.__data__;return this.size+=this.has(l)?0:1,b[l]=nl&&void 0===d?"__lodash_hash_undefined__":d,this};function ol(l){var d=-1,b=null==l?0:l.length;for(this.clear();++d<b;){var Z=l[d];this.set(Z[0],Z[1])}}ol.prototype.clear=hl,ol.prototype.delete=il,ol.prototype.get=pl,ol.prototype.has=yl,ol.prototype.set=Vl;var Rl=ol;var Ll=function(){this.__data__=[],this.size=0};var Kl=function(l,d){return l===d||l!=l&&d!=d},el=Kl;var Hl=function(l,d){for(var b=l.length;b--;)if(el(l[b][0],d))return b;return-1},xl=Hl,Sl=Array.prototype.splice;var Yl=Hl;var Jl=Hl;var zl=Hl;var vl=Ll,Tl=function(l){var d=this.__data__,b=xl(d,l);return!(b<0)&&(b==d.length-1?d.pop():Sl.call(d,b,1),--this.size,!0)},Ml=function(l){var d=this.__data__,b=Yl(d,l);return b<0?void 0:d[b][1]},Fl=function(l){return Jl(this.__data__,l)>-1},Cl=function(l,d){var b=this.__data__,Z=zl(b,l);return Z<0?(++this.size,b.push([l,d])):b[Z][1]=d,this};function Il(l){var d=-1,b=null==l?0:l.length;for(this.clear();++d<b;){var Z=l[d];this.set(Z[0],Z[1])}}Il.prototype.clear=vl,Il.prototype.delete=Tl,Il.prototype.get=Ml,Il.prototype.has=Fl,Il.prototype.set=Cl;var gl=Il,kl=Zl(a,"Map"),rl=Rl,Nl=gl,Pl=kl;var wl=function(l){var d=typeof l;return"string"==d||"number"==d||"symbol"==d||"boolean"==d?"__proto__"!==l:null===l};var Bl=function(l,d){var b=l.__data__;return wl(d)?b["string"==typeof d?"string":"hash"]:b.map},Ul=Bl;var fl=Bl;var jl=Bl;var Ql=Bl;var El=function(l,d){var b=Ql(this,l),Z=b.size;return b.set(l,d),this.size+=b.size==Z?0:1,this},Ol=function(){this.size=0,this.__data__={hash:new rl,map:new(Pl||Nl),string:new rl}},Dl=function(l){var d=Ul(this,l).delete(l);return this.size-=d?1:0,d},Al=function(l){return fl(this,l).get(l)},_l=function(l){return jl(this,l).has(l)},ql=El;function $l(l){var d=-1,b=null==l?0:l.length;for(this.clear();++d<b;){var Z=l[d];this.set(Z[0],Z[1])}}$l.prototype.clear=Ol,$l.prototype.delete=Dl,$l.prototype.get=Al,$l.prototype.has=_l,$l.prototype.set=ql;var ld=$l,dd=ld;function bd(l,d){if("function"!=typeof l||null!=d&&"function"!=typeof d)throw new TypeError("Expected a function");var b=function(){var Z=arguments,c=d?d.apply(this,Z):Z[0],m=b.cache;if(m.has(c))return m.get(c);var X=l.apply(this,Z);return b.cache=m.set(c,X)||m,X};return b.cache=new(bd.Cache||dd),b}bd.Cache=dd;var Zd=bd;var cd=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,md=/\\(\\)?/g,Xd=function(l){var d=Zd(l,(function(l){return 500===b.size&&b.clear(),l})),b=d.cache;return d}((function(l){var d=[];return 46===l.charCodeAt(0)&&d.push(""),l.replace(cd,(function(l,b,Z,c){d.push(Z?c.replace(md,"$1"):b||l)})),d})),ud=Xd;var Gd=function(l,d){for(var b=-1,Z=null==l?0:l.length,c=Array(Z);++b<Z;)c[b]=d(l[b],b,l);return c},Wd=Gd,td=G,sd=J,ad=n?n.prototype:void 0,nd=ad?ad.toString:void 0;var hd=function l(d){if("string"==typeof d)return d;if(td(d))return Wd(d,l)+"";if(sd(d))return nd?nd.call(d):"";var b=d+"";return"0"==b&&1/d==-Infinity?"-0":b},id=hd;var pd=function(l){return null==l?"":id(l)},yd=G,Vd=F,od=ud,Rd=pd;var Ld=function(l,d){return yd(l)?l:Vd(l,d)?[l]:od(Rd(l))},Kd=J;var ed=function(l){if("string"==typeof l||Kd(l))return l;var d=l+"";return"0"==d&&1/l==-Infinity?"-0":d},Hd=Ld,xd=ed;var Sd=function(l,d){for(var b=0,Z=(d=Hd(d,l)).length;null!=l&&b<Z;)l=l[xd(d[b++])];return b&&b==Z?l:void 0},Yd=Sd;var Jd=function(l,d,b){var Z=null==l?void 0:Yd(l,d);return void 0===Z?b:Z};function zd(l){return"[object Array]"===Object.prototype.toString.call(l)}function vd(l){return"[object Object]"===Object.prototype.toString.call(l)}function Td(l){return"[object String]"===Object.prototype.toString.call(l)}function Md(l){return l!=l}function Fd(l){return!!function(l){return"[object Undefined]"===Object.prototype.toString.call(l)}(l)||(!!function(l){return"[object Null]"===Object.prototype.toString.call(l)}(l)||(!!function(l){if(vd(l)){for(let d in l)return!1;return!0}return!1}(l)||(!!function(l){return!(!Td(l)||""!==l)}(l)||(!!function(l){return!!zd(l)&&0===l.length}(l)||!!Md(l)))))}function Cd(l){return!!zd(l)&&(0!==l.length&&(1!==l.length||!Fd(l[0])))}function Id(l){return!(!Td(l)||""===l)}function gd(){return"undefined"!=typeof window&&void 0!==window.document}var kd={},rd={get exports(){return kd},set exports(l){kd=l}};function Nd(l){throw new Error('Could not dynamically require "'+l+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Pd,wd={},Bd={get exports(){return wd},set exports(l){wd=l}},Ud=Object.freeze({__proto__:null,default:{}}),fd=u(Ud);function jd(){return Pd||(Pd=1,function(l,d){var b;l.exports=(b=b||function(l,d){var b;if("undefined"!=typeof window&&window.crypto&&(b=window.crypto),"undefined"!=typeof self&&self.crypto&&(b=self.crypto),"undefined"!=typeof globalThis&&globalThis.crypto&&(b=globalThis.crypto),!b&&"undefined"!=typeof window&&window.msCrypto&&(b=window.msCrypto),!b&&void 0!==m&&m.crypto&&(b=m.crypto),!b)try{b=fd}catch(l){}var Z=function(){if(b){if("function"==typeof b.getRandomValues)try{return b.getRandomValues(new Uint32Array(1))[0]}catch(l){}if("function"==typeof b.randomBytes)try{return b.randomBytes(4).readInt32LE()}catch(l){}}throw new Error("Native crypto module could not be used to get secure random number.")},c=Object.create||function(){function l(){}return function(d){var b;return l.prototype=d,b=new l,l.prototype=null,b}}(),X={},u=X.lib={},G=u.Base={extend:function(l){var d=c(this);return l&&d.mixIn(l),d.hasOwnProperty("init")&&this.init!==d.init||(d.init=function(){d.$super.init.apply(this,arguments)}),d.init.prototype=d,d.$super=this,d},create:function(){var l=this.extend();return l.init.apply(l,arguments),l},init:function(){},mixIn:function(l){for(var d in l)l.hasOwnProperty(d)&&(this[d]=l[d]);l.hasOwnProperty("toString")&&(this.toString=l.toString)},clone:function(){return this.init.prototype.extend(this)}},W=u.WordArray=G.extend({init:function(l,b){l=this.words=l||[],this.sigBytes=b!=d?b:4*l.length},toString:function(l){return(l||s).stringify(this)},concat:function(l){var d=this.words,b=l.words,Z=this.sigBytes,c=l.sigBytes;if(this.clamp(),Z%4)for(var m=0;m<c;m++){var X=b[m>>>2]>>>24-m%4*8&255;d[Z+m>>>2]|=X<<24-(Z+m)%4*8}else for(var u=0;u<c;u+=4)d[Z+u>>>2]=b[u>>>2];return this.sigBytes+=c,this},clamp:function(){var d=this.words,b=this.sigBytes;d[b>>>2]&=4294967295<<32-b%4*8,d.length=l.ceil(b/4)},clone:function(){var l=G.clone.call(this);return l.words=this.words.slice(0),l},random:function(l){for(var d=[],b=0;b<l;b+=4)d.push(Z());return new W.init(d,l)}}),t=X.enc={},s=t.Hex={stringify:function(l){for(var d=l.words,b=l.sigBytes,Z=[],c=0;c<b;c++){var m=d[c>>>2]>>>24-c%4*8&255;Z.push((m>>>4).toString(16)),Z.push((15&m).toString(16))}return Z.join("")},parse:function(l){for(var d=l.length,b=[],Z=0;Z<d;Z+=2)b[Z>>>3]|=parseInt(l.substr(Z,2),16)<<24-Z%8*4;return new W.init(b,d/2)}},a=t.Latin1={stringify:function(l){for(var d=l.words,b=l.sigBytes,Z=[],c=0;c<b;c++){var m=d[c>>>2]>>>24-c%4*8&255;Z.push(String.fromCharCode(m))}return Z.join("")},parse:function(l){for(var d=l.length,b=[],Z=0;Z<d;Z++)b[Z>>>2]|=(255&l.charCodeAt(Z))<<24-Z%4*8;return new W.init(b,d)}},n=t.Utf8={stringify:function(l){try{return decodeURIComponent(escape(a.stringify(l)))}catch(l){throw new Error("Malformed UTF-8 data")}},parse:function(l){return a.parse(unescape(encodeURIComponent(l)))}},h=u.BufferedBlockAlgorithm=G.extend({reset:function(){this._data=new W.init,this._nDataBytes=0},_append:function(l){"string"==typeof l&&(l=n.parse(l)),this._data.concat(l),this._nDataBytes+=l.sigBytes},_process:function(d){var b,Z=this._data,c=Z.words,m=Z.sigBytes,X=this.blockSize,u=m/(4*X),G=(u=d?l.ceil(u):l.max((0|u)-this._minBufferSize,0))*X,t=l.min(4*G,m);if(G){for(var s=0;s<G;s+=X)this._doProcessBlock(c,s);b=c.splice(0,G),Z.sigBytes-=t}return new W.init(b,t)},clone:function(){var l=G.clone.call(this);return l._data=this._data.clone(),l},_minBufferSize:0});u.Hasher=h.extend({cfg:G.extend(),init:function(l){this.cfg=this.cfg.extend(l),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(l){return this._append(l),this._process(),this},finalize:function(l){return l&&this._append(l),this._doFinalize()},blockSize:16,_createHelper:function(l){return function(d,b){return new l.init(b).finalize(d)}},_createHmacHelper:function(l){return function(d,b){return new i.HMAC.init(l,b).finalize(d)}}});var i=X.algo={};return X}(Math),b)}(Bd)),wd}!function(l,d){l.exports=jd().enc.Utf8}(rd);var Qd=kd,Ed={};!function(l,d){var b;l.exports=(b=jd(),function(){var l=b,d=l.lib.WordArray;function Z(l,b,Z){for(var c=[],m=0,X=0;X<b;X++)if(X%4){var u=Z[l.charCodeAt(X-1)]<<X%4*2|Z[l.charCodeAt(X)]>>>6-X%4*2;c[m>>>2]|=u<<24-m%4*8,m++}return d.create(c,m)}l.enc.Base64={stringify:function(l){var d=l.words,b=l.sigBytes,Z=this._map;l.clamp();for(var c=[],m=0;m<b;m+=3)for(var X=(d[m>>>2]>>>24-m%4*8&255)<<16|(d[m+1>>>2]>>>24-(m+1)%4*8&255)<<8|d[m+2>>>2]>>>24-(m+2)%4*8&255,u=0;u<4&&m+.75*u<b;u++)c.push(Z.charAt(X>>>6*(3-u)&63));var G=Z.charAt(64);if(G)for(;c.length%4;)c.push(G);return c.join("")},parse:function(l){var d=l.length,b=this._map,c=this._reverseMap;if(!c){c=this._reverseMap=[];for(var m=0;m<b.length;m++)c[b.charCodeAt(m)]=m}var X=b.charAt(64);if(X){var u=l.indexOf(X);-1!==u&&(d=u)}return Z(l,d,c)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),b.enc.Base64)}({get exports(){return Ed},set exports(l){Ed=l}});var Od=Ed;function Dd(l){let d=!1;if(Id(l))d=!isNaN(Number(l));else if(function(l){return"[object Number]"===Object.prototype.toString.call(l)}(l)){if(Md(l))return!1;d=!0}return d}function Ad(l,d){return!!vd(l)&&(!(!Id(d)&&!Dd(d))&&d in l)}function _d(){return"undefined"!=typeof self?self:gd()?window:"undefined"!=typeof global?global:null}let qd=function(){if(!gd())return null;let l=_d();if(Ad(l,"turf"))return l.turf;let d=l.document.createElement("script");return d.innerHTML=function(l){return Id(l)?Od.parse(l).toString(Qd):""}(""),l.document.getElementsByTagName("head")[0].appendChild(d),l.turf}(),$d=null;$d=gd()?qd:c;var lb=$d,db=gl;var bb=gl,Zb=kl,cb=ld;var mb=gl,Xb=function(){this.__data__=new db,this.size=0},ub=function(l){var d=this.__data__,b=d.delete(l);return this.size=d.size,b},Gb=function(l){return this.__data__.get(l)},Wb=function(l){return this.__data__.has(l)},tb=function(l,d){var b=this.__data__;if(b instanceof bb){var Z=b.__data__;if(!Zb||Z.length<199)return Z.push([l,d]),this.size=++b.size,this;b=this.__data__=new cb(Z)}return b.set(l,d),this.size=b.size,this};function sb(l){var d=this.__data__=new mb(l);this.size=d.size}sb.prototype.clear=Xb,sb.prototype.delete=ub,sb.prototype.get=Gb,sb.prototype.has=Wb,sb.prototype.set=tb;var ab=sb;var nb=ld,hb=function(l){return this.__data__.set(l,"__lodash_hash_undefined__"),this},ib=function(l){return this.__data__.has(l)};function pb(l){var d=-1,b=null==l?0:l.length;for(this.__data__=new nb;++d<b;)this.add(l[d])}pb.prototype.add=pb.prototype.push=hb,pb.prototype.has=ib;var yb=pb,Vb=function(l,d){for(var b=-1,Z=null==l?0:l.length;++b<Z;)if(d(l[b],b,l))return!0;return!1},ob=function(l,d){return l.has(d)};var Rb=function(l,d,b,Z,c,m){var X=1&b,u=l.length,G=d.length;if(u!=G&&!(X&&G>u))return!1;var W=m.get(l),t=m.get(d);if(W&&t)return W==d&&t==l;var s=-1,a=!0,n=2&b?new yb:void 0;for(m.set(l,d),m.set(d,l);++s<u;){var h=l[s],i=d[s];if(Z)var p=X?Z(i,h,s,d,l,m):Z(h,i,s,l,d,m);if(void 0!==p){if(p)continue;a=!1;break}if(n){if(!Vb(d,(function(l,d){if(!ob(n,d)&&(h===l||c(h,l,b,Z,m)))return n.push(d)}))){a=!1;break}}else if(h!==i&&!c(h,i,b,Z,m)){a=!1;break}}return m.delete(l),m.delete(d),a},Lb=a.Uint8Array;var Kb=function(l){var d=-1,b=Array(l.size);return l.forEach((function(l,Z){b[++d]=[Z,l]})),b};var eb=Lb,Hb=Kl,xb=Rb,Sb=Kb,Yb=function(l){var d=-1,b=Array(l.size);return l.forEach((function(l){b[++d]=l})),b},Jb=n?n.prototype:void 0,zb=Jb?Jb.valueOf:void 0;var vb=function(l,d,b,Z,c,m,X){switch(b){case"[object DataView]":if(l.byteLength!=d.byteLength||l.byteOffset!=d.byteOffset)return!1;l=l.buffer,d=d.buffer;case"[object ArrayBuffer]":return!(l.byteLength!=d.byteLength||!m(new eb(l),new eb(d)));case"[object Boolean]":case"[object Date]":case"[object Number]":return Hb(+l,+d);case"[object Error]":return l.name==d.name&&l.message==d.message;case"[object RegExp]":case"[object String]":return l==d+"";case"[object Map]":var u=Sb;case"[object Set]":var G=1&Z;if(u||(u=Yb),l.size!=d.size&&!G)return!1;var W=X.get(l);if(W)return W==d;Z|=2,X.set(l,d);var t=xb(u(l),u(d),Z,c,m,X);return X.delete(l),t;case"[object Symbol]":if(zb)return zb.call(l)==zb.call(d)}return!1};var Tb=function(l,d){for(var b=-1,Z=d.length,c=l.length;++b<Z;)l[c+b]=d[b];return l},Mb=Tb,Fb=G;var Cb=function(l,d,b){var Z=d(l);return Fb(l)?Z:Mb(Z,b(l))};var Ib=function(l,d){for(var b=-1,Z=null==l?0:l.length,c=0,m=[];++b<Z;){var X=l[b];d(X,b,l)&&(m[c++]=X)}return m};var gb=function(){return[]},kb=Ib,rb=gb,Nb=Object.prototype.propertyIsEnumerable,Pb=Object.getOwnPropertySymbols,wb=Pb?function(l){return null==l?[]:(l=Object(l),kb(Pb(l),(function(d){return Nb.call(l,d)})))}:rb,Bb=wb;var Ub=function(l,d){for(var b=-1,Z=Array(l);++b<l;)Z[b]=d(b);return Z},fb=H,jb=x;var Qb=function(l){return jb(l)&&"[object Arguments]"==fb(l)},Eb=x,Ob=Object.prototype,Db=Ob.hasOwnProperty,Ab=Ob.propertyIsEnumerable,_b=Qb(function(){return arguments}())?Qb:function(l){return Eb(l)&&Db.call(l,"callee")&&!Ab.call(l,"callee")},qb=_b,$b={};var lZ=function(){return!1};!function(l,d){var b=a,Z=lZ,c=d&&!d.nodeType&&d,m=c&&l&&!l.nodeType&&l,X=m&&m.exports===c?b.Buffer:void 0,u=(X?X.isBuffer:void 0)||Z;l.exports=u}({get exports(){return $b},set exports(l){$b=l}},$b);var dZ=/^(?:0|[1-9]\d*)$/;var bZ=function(l,d){var b=typeof l;return!!(d=null==d?9007199254740991:d)&&("number"==b||"symbol"!=b&&dZ.test(l))&&l>-1&&l%1==0&&l<d};var ZZ=function(l){return"number"==typeof l&&l>-1&&l%1==0&&l<=9007199254740991},cZ=H,mZ=ZZ,XZ=x,uZ={};uZ["[object Float32Array]"]=uZ["[object Float64Array]"]=uZ["[object Int8Array]"]=uZ["[object Int16Array]"]=uZ["[object Int32Array]"]=uZ["[object Uint8Array]"]=uZ["[object Uint8ClampedArray]"]=uZ["[object Uint16Array]"]=uZ["[object Uint32Array]"]=!0,uZ["[object Arguments]"]=uZ["[object Array]"]=uZ["[object ArrayBuffer]"]=uZ["[object Boolean]"]=uZ["[object DataView]"]=uZ["[object Date]"]=uZ["[object Error]"]=uZ["[object Function]"]=uZ["[object Map]"]=uZ["[object Number]"]=uZ["[object Object]"]=uZ["[object RegExp]"]=uZ["[object Set]"]=uZ["[object String]"]=uZ["[object WeakMap]"]=!1;var GZ=function(l){return XZ(l)&&mZ(l.length)&&!!uZ[cZ(l)]};var WZ=function(l){return function(d){return l(d)}},tZ={};!function(l,d){var b=W,Z=d&&!d.nodeType&&d,c=Z&&l&&!l.nodeType&&l,m=c&&c.exports===Z&&b.process,X=function(){try{var l=c&&c.require&&c.require("util").types;return l||m&&m.binding&&m.binding("util")}catch(l){}}();l.exports=X}({get exports(){return tZ},set exports(l){tZ=l}},tZ);var sZ=GZ,aZ=WZ,nZ=tZ&&tZ.isTypedArray,hZ=nZ?aZ(nZ):sZ,iZ=Ub,pZ=qb,yZ=G,VZ=$b,oZ=bZ,RZ=hZ,LZ=Object.prototype.hasOwnProperty;var KZ=function(l,d){var b=yZ(l),Z=!b&&pZ(l),c=!b&&!Z&&VZ(l),m=!b&&!Z&&!c&&RZ(l),X=b||Z||c||m,u=X?iZ(l.length,String):[],G=u.length;for(var W in l)!d&&!LZ.call(l,W)||X&&("length"==W||c&&("offset"==W||"parent"==W)||m&&("buffer"==W||"byteLength"==W||"byteOffset"==W)||oZ(W,G))||u.push(W);return u},eZ=Object.prototype;var HZ=function(l){var d=l&&l.constructor;return l===("function"==typeof d&&d.prototype||eZ)};var xZ=function(l,d){return function(b){return l(d(b))}},SZ=xZ(Object.keys,Object),YZ=HZ,JZ=SZ,zZ=Object.prototype.hasOwnProperty;var vZ=function(l){if(!YZ(l))return JZ(l);var d=[];for(var b in Object(l))zZ.call(l,b)&&"constructor"!=b&&d.push(b);return d},TZ=r,MZ=ZZ;var FZ=function(l){return null!=l&&MZ(l.length)&&!TZ(l)},CZ=KZ,IZ=vZ,gZ=FZ;var kZ=function(l){return gZ(l)?CZ(l):IZ(l)},rZ=Cb,NZ=Bb,PZ=kZ;var wZ=function(l){return rZ(l,PZ,NZ)},BZ=wZ,UZ=Object.prototype.hasOwnProperty;var fZ=function(l,d,b,Z,c,m){var X=1&b,u=BZ(l),G=u.length;if(G!=BZ(d).length&&!X)return!1;for(var W=G;W--;){var t=u[W];if(!(X?t in d:UZ.call(d,t)))return!1}var s=m.get(l),a=m.get(d);if(s&&a)return s==d&&a==l;var n=!0;m.set(l,d),m.set(d,l);for(var h=X;++W<G;){var i=l[t=u[W]],p=d[t];if(Z)var y=X?Z(p,i,t,d,l,m):Z(i,p,t,l,d,m);if(!(void 0===y?i===p||c(i,p,b,Z,m):y)){n=!1;break}h||(h="constructor"==t)}if(n&&!h){var V=l.constructor,o=d.constructor;V==o||!("constructor"in l)||!("constructor"in d)||"function"==typeof V&&V instanceof V&&"function"==typeof o&&o instanceof o||(n=!1)}return m.delete(l),m.delete(d),n},jZ=Zl(a,"DataView"),QZ=kl,EZ=Zl(a,"Promise"),OZ=Zl(a,"Set"),DZ=Zl(a,"WeakMap"),AZ=H,_Z=U,qZ="[object Map]",$Z="[object Promise]",lc="[object Set]",dc="[object WeakMap]",bc="[object DataView]",Zc=_Z(jZ),cc=_Z(QZ),mc=_Z(EZ),Xc=_Z(OZ),uc=_Z(DZ),Gc=AZ;(jZ&&Gc(new jZ(new ArrayBuffer(1)))!=bc||QZ&&Gc(new QZ)!=qZ||EZ&&Gc(EZ.resolve())!=$Z||OZ&&Gc(new OZ)!=lc||DZ&&Gc(new DZ)!=dc)&&(Gc=function(l){var d=AZ(l),b="[object Object]"==d?l.constructor:void 0,Z=b?_Z(b):"";if(Z)switch(Z){case Zc:return bc;case cc:return qZ;case mc:return $Z;case Xc:return lc;case uc:return dc}return d});var Wc=Gc,tc=ab,sc=Rb,ac=vb,nc=fZ,hc=Wc,ic=G,pc=$b,yc=hZ,Vc="[object Arguments]",oc="[object Array]",Rc="[object Object]",Lc=Object.prototype.hasOwnProperty;var Kc=function(l,d,b,Z,c,m){var X=ic(l),u=ic(d),G=X?oc:hc(l),W=u?oc:hc(d),t=(G=G==Vc?Rc:G)==Rc,s=(W=W==Vc?Rc:W)==Rc,a=G==W;if(a&&pc(l)){if(!pc(d))return!1;X=!0,t=!1}if(a&&!t)return m||(m=new tc),X||yc(l)?sc(l,d,b,Z,c,m):ac(l,d,G,b,Z,c,m);if(!(1&b)){var n=t&&Lc.call(l,"__wrapped__"),h=s&&Lc.call(d,"__wrapped__");if(n||h){var i=n?l.value():l,p=h?d.value():d;return m||(m=new tc),c(i,p,b,Z,m)}}return!!a&&(m||(m=new tc),nc(l,d,b,Z,c,m))},ec=Kc,Hc=x;var xc=function l(d,b,Z,c,m){return d===b||(null==d||null==b||!Hc(d)&&!Hc(b)?d!=d&&b!=b:ec(d,b,Z,c,l,m))},Sc=ab,Yc=xc;var Jc=function(l,d,b,Z){var c=b.length,m=c,X=!Z;if(null==l)return!m;for(l=Object(l);c--;){var u=b[c];if(X&&u[2]?u[1]!==l[u[0]]:!(u[0]in l))return!1}for(;++c<m;){var G=(u=b[c])[0],W=l[G],t=u[1];if(X&&u[2]){if(void 0===W&&!(G in l))return!1}else{var s=new Sc;if(Z)var a=Z(W,t,G,l,d,s);if(!(void 0===a?Yc(t,W,3,Z,s):a))return!1}}return!0},zc=C;var vc=function(l){return l==l&&!zc(l)},Tc=vc,Mc=kZ;var Fc=function(l){for(var d=Mc(l),b=d.length;b--;){var Z=d[b],c=l[Z];d[b]=[Z,c,Tc(c)]}return d};var Cc=function(l,d){return function(b){return null!=b&&(b[l]===d&&(void 0!==d||l in Object(b)))}},Ic=Jc,gc=Fc,kc=Cc;var rc=function(l){var d=gc(l);return 1==d.length&&d[0][2]?kc(d[0][0],d[0][1]):function(b){return b===l||Ic(b,l,d)}};var Nc=function(l,d){return null!=l&&d in Object(l)},Pc=Ld,wc=qb,Bc=G,Uc=bZ,fc=ZZ,jc=ed;var Qc=function(l,d,b){for(var Z=-1,c=(d=Pc(d,l)).length,m=!1;++Z<c;){var X=jc(d[Z]);if(!(m=null!=l&&b(l,X)))break;l=l[X]}return m||++Z!=c?m:!!(c=null==l?0:l.length)&&fc(c)&&Uc(X,c)&&(Bc(l)||wc(l))},Ec=Nc,Oc=Qc;var Dc=function(l,d){return null!=l&&Oc(l,d,Ec)},Ac=xc,_c=Jd,qc=Dc,$c=F,lm=vc,dm=Cc,bm=ed;var Zm=function(l,d){return $c(l)&&lm(d)?dm(bm(l),d):function(b){var Z=_c(b,l);return void 0===Z&&Z===d?qc(b,l):Ac(d,Z,3)}};var cm=function(l){return l};var mm=function(l){return function(d){return null==d?void 0:d[l]}},Xm=Sd;var um=function(l){return function(d){return Xm(d,l)}},Gm=mm,Wm=um,tm=F,sm=ed;var am=rc,nm=Zm,hm=cm,im=G,pm=function(l){return tm(l)?Gm(sm(l)):Wm(l)};var ym=function(l){return"function"==typeof l?l:null==l?hm:"object"==typeof l?im(l)?nm(l[0],l[1]):am(l):pm(l)};var Vm=function(l){return function(d,b,Z){for(var c=-1,m=Object(d),X=Z(d),u=X.length;u--;){var G=X[l?u:++c];if(!1===b(m[G],G,m))break}return d}},om=Vm(),Rm=kZ;var Lm=function(l,d){return l&&om(l,d,Rm)},Km=FZ;var em=function(l,d){return function(b,Z){if(null==b)return b;if(!Km(b))return l(b,Z);for(var c=b.length,m=d?c:-1,X=Object(b);(d?m--:++m<c)&&!1!==Z(X[m],m,X););return b}}(Lm),Hm=em,xm=FZ;var Sm=function(l,d){var b=-1,Z=xm(l)?Array(l.length):[];return Hm(l,(function(l,c,m){Z[++b]=d(l,c,m)})),Z},Ym=Gd,Jm=ym,zm=Sm,vm=G;var Tm=function(l,d){return(vm(l)?Ym:zm)(l,Jm(d))},Mm=H,Fm=G,Cm=x;var Im=function(l){return"string"==typeof l||!Fm(l)&&Cm(l)&&"[object String]"==Mm(l)},gm=mm("length"),km=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");var rm=function(l){return km.test(l)},Nm="\\ud800-\\udfff",Pm="["+Nm+"]",wm="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",Bm="\\ud83c[\\udffb-\\udfff]",Um="[^"+Nm+"]",fm="(?:\\ud83c[\\udde6-\\uddff]){2}",jm="[\\ud800-\\udbff][\\udc00-\\udfff]",Qm="(?:"+wm+"|"+Bm+")"+"?",Em="[\\ufe0e\\ufe0f]?",Om=Em+Qm+("(?:\\u200d(?:"+[Um,fm,jm].join("|")+")"+Em+Qm+")*"),Dm="(?:"+[Um+wm+"?",wm,fm,jm,Pm].join("|")+")",Am=RegExp(Bm+"(?="+Bm+")|"+Dm+Om,"g");var _m=function(l){for(var d=Am.lastIndex=0;Am.test(l);)++d;return d},qm=gm,$m=rm,lX=_m;var dX=function(l){return $m(l)?lX(l):qm(l)},bX=vZ,ZX=Wc,cX=FZ,mX=Im,XX=dX;var uX=function(l){if(null==l)return 0;if(cX(l))return mX(l)?XX(l):l.length;var d=ZX(l);return"[object Map]"==d||"[object Set]"==d?l.size:bX(l).length};function GX(l){let d=uX(Jd(l,"0",null)),b=uX(Jd(l,"0.0",null));return 2===uX(Jd(l,"0.0.0",null))?3:2===b?2:2===d?1:0===d?0:(console.log("invalid point depth",l),null)}function WX(l){let d=Jd(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},"supposeType");"polygons"!==d&&"ringStrings"!==d&&(d="polygons");let b=GX(l);return 3===b?l:2===b?"polygons"===d?Tm(l,(l=>[l])):[l]:1===b?[[l]]:0===b?[]:l}var tX=xc;var sX=function(l,d){return tX(l,d)};function aX(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cd(l)?(l=WX(l,d),l=Tm(l,(l=>l=Tm(l,(l=>{let d=uX(l)-1,b=l[0],Z=l[d];return sX(b,Z)||l.push(b),l}))))):null}var nX={};var hX=function(l,d){for(var b=-1,Z=null==l?0:l.length;++b<Z&&!1!==d(l[b],b,l););return l},iX=cm;var pX=hX,yX=em,VX=function(l){return"function"==typeof l?l:iX},oX=G;var RX=function(l,d){return(oX(l)?pX:yX)(l,VX(d))};!function(l){l.exports=RX}({get exports(){return nX},set exports(l){nX=l}});var LX=X(nX);function KX(l){let d=Jd(l,"geometry.geometries",[]),b=[];return LX(d,(l=>{"Polygon"===l.type?b.push(l.coordinates):"MultiPolygon"===l.type&&LX(l.coordinates,(l=>{b.push(l)}))})),b}function eX(l){let d=Jd(l,"geometry.type",""),b=Jd(l,"geometry.coordinates",[]);return"Polygon"===d?[b]:"MultiPolygon"===d?b:"GeometryCollection"===d?KX(l):[]}function HX(l){return HX="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(l){return typeof l}:function(l){return l&&"function"==typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":typeof l},HX(l)}function xX(l){var d=function(l,d){if("object"!==HX(l)||null===l)return l;var b=l[Symbol.toPrimitive];if(void 0!==b){var Z=b.call(l,d||"default");if("object"!==HX(Z))return Z;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===d?String:Number)(l)}(l,"string");return"symbol"===HX(d)?d:String(d)}function SX(l,d,b){return(d=xX(d))in l?Object.defineProperty(l,d,{value:b,enumerable:!0,configurable:!0,writable:!0}):l[d]=b,l}var YX=J;var JX=function(l,d,b){for(var Z=-1,c=l.length;++Z<c;){var m=l[Z],X=d(m);if(null!=X&&(void 0===u?X==X&&!YX(X):b(X,u)))var u=X,G=m}return G};var zX=JX,vX=function(l,d){return l<d},TX=cm;var MX=function(l){return l&&l.length?zX(l,TX,vX):void 0};var FX=JX,CX=function(l,d){return l>d},IX=cm;var gX=function(l){return l&&l.length?FX(l,IX,CX):void 0};var kX=function(l,d,b){var Z=-1,c=l.length;d<0&&(d=-d>c?0:c+d),(b=b>c?c:b)<0&&(b+=c),c=d>b?0:b-d>>>0,d>>>=0;for(var m=Array(c);++Z<c;)m[Z]=l[Z+d];return m},rX=/\s/;var NX=function(l){for(var d=l.length;d--&&rX.test(l.charAt(d)););return d},PX=NX,wX=/^\s+/;var BX=function(l){return l?l.slice(0,PX(l)+1).replace(wX,""):l},UX=BX,fX=C,jX=J,QX=/^[-+]0x[0-9a-f]+$/i,EX=/^0b[01]+$/i,OX=/^0o[0-7]+$/i,DX=parseInt;var AX=function(l){if("number"==typeof l)return l;if(jX(l))return NaN;if(fX(l)){var d="function"==typeof l.valueOf?l.valueOf():l;l=fX(d)?d+"":d}if("string"!=typeof l)return 0===l?l:+l;l=UX(l);var b=EX.test(l);return b||OX.test(l)?DX(l.slice(2),b?2:8):QX.test(l)?NaN:+l},_X=AX,qX=1/0;var $X=function(l){return l?(l=_X(l))===qX||l===-1/0?17976931348623157e292*(l<0?-1:1):l==l?l:0:0===l?l:0},lu=$X;var du=function(l){var d=lu(l),b=d%1;return d==d?b?d-b:d:0},bu=kX,Zu=du;var cu=function(l,d,b){return l&&l.length?(d=b||void 0===d?1:Zu(d),bu(l,0,d<0?0:d)):[]},mu=Zl,Xu=function(){try{var l=mu(Object,"defineProperty");return l({},"",{}),l}catch(l){}}(),uu=Xu;var Gu=function(l,d,b){"__proto__"==d&&uu?uu(l,d,{configurable:!0,enumerable:!0,value:b,writable:!0}):l[d]=b},Wu=Gu,tu=Kl,su=Object.prototype.hasOwnProperty;var au=function(l,d,b){var Z=l[d];su.call(l,d)&&tu(Z,b)&&(void 0!==b||d in l)||Wu(l,d,b)},nu=au,hu=Gu;var iu=function(l,d,b,Z){var c=!b;b||(b={});for(var m=-1,X=d.length;++m<X;){var u=d[m],G=Z?Z(b[u],l[u],u,b,l):void 0;void 0===G&&(G=l[u]),c?hu(b,u,G):nu(b,u,G)}return b},pu=iu,yu=kZ;var Vu=function(l,d){return l&&pu(d,yu(d),l)};var ou=function(l){var d=[];if(null!=l)for(var b in Object(l))d.push(b);return d},Ru=C,Lu=HZ,Ku=ou,eu=Object.prototype.hasOwnProperty;var Hu=function(l){if(!Ru(l))return Ku(l);var d=Lu(l),b=[];for(var Z in l)("constructor"!=Z||!d&&eu.call(l,Z))&&b.push(Z);return b},xu=KZ,Su=Hu,Yu=FZ;var Ju=function(l){return Yu(l)?xu(l,!0):Su(l)},zu=iu,vu=Ju;var Tu=function(l,d){return l&&zu(d,vu(d),l)},Mu={};!function(l,d){var b=a,Z=d&&!d.nodeType&&d,c=Z&&l&&!l.nodeType&&l,m=c&&c.exports===Z?b.Buffer:void 0,X=m?m.allocUnsafe:void 0;l.exports=function(l,d){if(d)return l.slice();var b=l.length,Z=X?X(b):new l.constructor(b);return l.copy(Z),Z}}({get exports(){return Mu},set exports(l){Mu=l}},Mu);var Fu=function(l,d){var b=-1,Z=l.length;for(d||(d=Array(Z));++b<Z;)d[b]=l[b];return d},Cu=iu,Iu=Bb;var gu=function(l,d){return Cu(l,Iu(l),d)},ku=xZ(Object.getPrototypeOf,Object),ru=Tb,Nu=ku,Pu=Bb,wu=gb,Bu=Object.getOwnPropertySymbols?function(l){for(var d=[];l;)ru(d,Pu(l)),l=Nu(l);return d}:wu,Uu=iu,fu=Bu;var ju=function(l,d){return Uu(l,fu(l),d)},Qu=Cb,Eu=Bu,Ou=Ju;var Du=function(l){return Qu(l,Ou,Eu)},Au=Object.prototype.hasOwnProperty;var _u=function(l){var d=l.length,b=new l.constructor(d);return d&&"string"==typeof l[0]&&Au.call(l,"index")&&(b.index=l.index,b.input=l.input),b},qu=Lb;var $u=function(l){var d=new l.constructor(l.byteLength);return new qu(d).set(new qu(l)),d},lG=$u;var dG=function(l,d){var b=d?lG(l.buffer):l.buffer;return new l.constructor(b,l.byteOffset,l.byteLength)},bG=/\w*$/;var ZG=function(l){var d=new l.constructor(l.source,bG.exec(l));return d.lastIndex=l.lastIndex,d},cG=n?n.prototype:void 0,mG=cG?cG.valueOf:void 0;var XG=$u;var uG=$u,GG=dG,WG=ZG,tG=function(l){return mG?Object(mG.call(l)):{}},sG=function(l,d){var b=d?XG(l.buffer):l.buffer;return new l.constructor(b,l.byteOffset,l.length)};var aG=function(l,d,b){var Z=l.constructor;switch(d){case"[object ArrayBuffer]":return uG(l);case"[object Boolean]":case"[object Date]":return new Z(+l);case"[object DataView]":return GG(l,b);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return sG(l,b);case"[object Map]":case"[object Set]":return new Z;case"[object Number]":case"[object String]":return new Z(l);case"[object RegExp]":return WG(l);case"[object Symbol]":return tG(l)}},nG=C,hG=Object.create,iG=function(){function l(){}return function(d){if(!nG(d))return{};if(hG)return hG(d);l.prototype=d;var b=new l;return l.prototype=void 0,b}}(),pG=iG,yG=ku,VG=HZ;var oG=function(l){return"function"!=typeof l.constructor||VG(l)?{}:pG(yG(l))},RG=Wc,LG=x;var KG=function(l){return LG(l)&&"[object Map]"==RG(l)},eG=WZ,HG=tZ&&tZ.isMap,xG=HG?eG(HG):KG,SG=Wc,YG=x;var JG=function(l){return YG(l)&&"[object Set]"==SG(l)},zG=WZ,vG=tZ&&tZ.isSet,TG=vG?zG(vG):JG,MG=ab,FG=hX,CG=au,IG=Vu,gG=Tu,kG=Mu,rG=Fu,NG=gu,PG=ju,wG=wZ,BG=Du,UG=Wc,fG=_u,jG=aG,QG=oG,EG=G,OG=$b,DG=xG,AG=C,_G=TG,qG=kZ,$G=Ju,lW="[object Arguments]",dW="[object Function]",bW="[object Object]",ZW={};ZW[lW]=ZW["[object Array]"]=ZW["[object ArrayBuffer]"]=ZW["[object DataView]"]=ZW["[object Boolean]"]=ZW["[object Date]"]=ZW["[object Float32Array]"]=ZW["[object Float64Array]"]=ZW["[object Int8Array]"]=ZW["[object Int16Array]"]=ZW["[object Int32Array]"]=ZW["[object Map]"]=ZW["[object Number]"]=ZW[bW]=ZW["[object RegExp]"]=ZW["[object Set]"]=ZW["[object String]"]=ZW["[object Symbol]"]=ZW["[object Uint8Array]"]=ZW["[object Uint8ClampedArray]"]=ZW["[object Uint16Array]"]=ZW["[object Uint32Array]"]=!0,ZW["[object Error]"]=ZW[dW]=ZW["[object WeakMap]"]=!1;var cW=function l(d,b,Z,c,m,X){var u,G=1&b,W=2&b,t=4&b;if(Z&&(u=m?Z(d,c,m,X):Z(d)),void 0!==u)return u;if(!AG(d))return d;var s=EG(d);if(s){if(u=fG(d),!G)return rG(d,u)}else{var a=UG(d),n=a==dW||"[object GeneratorFunction]"==a;if(OG(d))return kG(d,G);if(a==bW||a==lW||n&&!m){if(u=W||n?{}:QG(d),!G)return W?PG(d,gG(u,d)):NG(d,IG(u,d))}else{if(!ZW[a])return m?d:{};u=jG(d,a,G)}}X||(X=new MG);var h=X.get(d);if(h)return h;X.set(d,u),_G(d)?d.forEach((function(c){u.add(l(c,b,Z,c,d,X))})):DG(d)&&d.forEach((function(c,m){u.set(m,l(c,b,Z,m,d,X))}));var i=s?void 0:(t?W?BG:wG:W?$G:qG)(d);return FG(i||d,(function(c,m){i&&(c=d[m=c]),CG(u,m,l(c,b,Z,m,d,X))})),u},mW=cW;var XW=function(l){return mW(l,5)};function uW(l){let d=Object.prototype.toString.call(l);return"[object Function]"===d||"[object AsyncFunction]"===d}function GW(l){if(!Dd(l))return 0;return $X(l)}function WW(l){if(!Dd(l))return!1;return GW(l)>0}var tW=H,sW=x;var aW=function(l){return!0===l||!1===l||sW(l)&&"[object Boolean]"==tW(l)};function nW(l){return aW(l)}function hW(l){if(vd(l)){for(let d in l)return!0;return!1}return!1}var iW=kX;var pW=function(l,d,b){var Z=l.length;return b=void 0===b?Z:b,!d&&b>=Z?l:iW(l,d,b)};var yW=function(l,d,b,Z){for(var c=l.length,m=b+(Z?1:-1);Z?m--:++m<c;)if(d(l[m],m,l))return m;return-1},VW=function(l){return l!=l},oW=function(l,d,b){for(var Z=b-1,c=l.length;++Z<c;)if(l[Z]===d)return Z;return-1};var RW=function(l,d,b){return d==d?oW(l,d,b):yW(l,VW,b)},LW=RW;var KW=function(l,d){for(var b=l.length;b--&&LW(d,l[b],0)>-1;);return b},eW=RW;var HW=function(l,d){for(var b=-1,Z=l.length;++b<Z&&eW(d,l[b],0)>-1;);return b};var xW=function(l){return l.split("")},SW="\\ud800-\\udfff",YW="["+SW+"]",JW="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",zW="\\ud83c[\\udffb-\\udfff]",vW="[^"+SW+"]",TW="(?:\\ud83c[\\udde6-\\uddff]){2}",MW="[\\ud800-\\udbff][\\udc00-\\udfff]",FW="(?:"+JW+"|"+zW+")"+"?",CW="[\\ufe0e\\ufe0f]?",IW=CW+FW+("(?:\\u200d(?:"+[vW,TW,MW].join("|")+")"+CW+FW+")*"),gW="(?:"+[vW+JW+"?",JW,TW,MW,YW].join("|")+")",kW=RegExp(zW+"(?="+zW+")|"+gW+IW,"g");var rW=function(l){return l.match(kW)||[]},NW=xW,PW=rm,wW=rW;var BW=function(l){return PW(l)?wW(l):NW(l)},UW=hd,fW=BX,jW=pW,QW=KW,EW=HW,OW=BW,DW=pd;var AW=function(l,d,b){if((l=DW(l))&&(b||void 0===d))return fW(l);if(!l||!(d=UW(d)))return l;var Z=OW(l),c=OW(d),m=EW(Z,c),X=QW(Z,c)+1;return jW(Z,m,X).join("")},_W=du,qW=AX,$W=pd,lt=a.isFinite,dt=Math.min;var bt=function(l){var d=Math[l];return function(l,b){if(l=qW(l),(b=null==b?0:dt(_W(b),292))&&lt(l)){var Z=($W(l)+"e").split("e"),c=d(Z[0]+"e"+(+Z[1]+b));return+((Z=($W(c)+"e").split("e"))[0]+"e"+(+Z[1]-b))}return d(l)}},Zt=bt("round"),ct=qb,mt=G,Xt=n?n.isConcatSpreadable:void 0;var ut=Tb,Gt=function(l){return mt(l)||ct(l)||!!(Xt&&l&&l[Xt])};var Wt=function l(d,b,Z,c,m){var X=-1,u=d.length;for(Z||(Z=Gt),m||(m=[]);++X<u;){var G=d[X];b>0&&Z(G)?b>1?l(G,b-1,Z,c,m):ut(m,G):c||(m[m.length]=G)}return m};var tt=J;var st=function(l,d){if(l!==d){var b=void 0!==l,Z=null===l,c=l==l,m=tt(l),X=void 0!==d,u=null===d,G=d==d,W=tt(d);if(!u&&!W&&!m&&l>d||m&&X&&G&&!u&&!W||Z&&X&&G||!b&&G||!c)return 1;if(!Z&&!m&&!W&&l<d||W&&b&&c&&!Z&&!m||u&&b&&c||!X&&c||!G)return-1}return 0};var at=function(l,d,b){for(var Z=-1,c=l.criteria,m=d.criteria,X=c.length,u=b.length;++Z<X;){var G=st(c[Z],m[Z]);if(G)return Z>=u?G:G*("desc"==b[Z]?-1:1)}return l.index-d.index},nt=Gd,ht=Sd,it=ym,pt=Sm,yt=function(l,d){var b=l.length;for(l.sort(d);b--;)l[b]=l[b].value;return l},Vt=WZ,ot=at,Rt=cm,Lt=G;var Kt=function(l,d,b){d=d.length?nt(d,(function(l){return Lt(l)?function(d){return ht(d,1===l.length?l[0]:l)}:l})):[Rt];var Z=-1;d=nt(d,Vt(it));var c=pt(l,(function(l,b,c){return{criteria:nt(d,(function(d){return d(l)})),index:++Z,value:l}}));return yt(c,(function(l,d){return ot(l,d,b)}))};var et=function(l,d,b){switch(b.length){case 0:return l.call(d);case 1:return l.call(d,b[0]);case 2:return l.call(d,b[0],b[1]);case 3:return l.call(d,b[0],b[1],b[2])}return l.apply(d,b)},Ht=Math.max;var xt=function(l,d,b){return d=Ht(void 0===d?l.length-1:d,0),function(){for(var Z=arguments,c=-1,m=Ht(Z.length-d,0),X=Array(m);++c<m;)X[c]=Z[d+c];c=-1;for(var u=Array(d+1);++c<d;)u[c]=Z[c];return u[d]=b(X),et(l,this,u)}};var St=function(l){return function(){return l}},Yt=Xu,Jt=Yt?function(l,d){return Yt(l,"toString",{configurable:!0,enumerable:!1,value:St(d),writable:!0})}:cm,zt=Jt,vt=Date.now;var Tt=function(l){var d=0,b=0;return function(){var Z=vt(),c=16-(Z-b);if(b=Z,c>0){if(++d>=800)return arguments[0]}else d=0;return l.apply(void 0,arguments)}},Mt=Tt(zt),Ft=cm,Ct=xt,It=Mt;var gt=function(l,d){return It(Ct(l,d,Ft),l+"")},kt=Kl,rt=FZ,Nt=bZ,Pt=C;var wt=function(l,d,b){if(!Pt(b))return!1;var Z=typeof d;return!!("number"==Z?rt(b)&&Nt(d,b.length):"string"==Z&&d in b)&&kt(b[d],l)},Bt=Wt,Ut=Kt,ft=wt,jt=gt((function(l,d){if(null==l)return[];var b=d.length;return b>1&&ft(l,d[0],d[1])?d=[]:b>2&&ft(d[0],d[1],d[2])&&(d=[d[0]]),Ut(l,Bt(d,1),[])})),Qt=pd;var Et=function(l){return Qt(l).toLowerCase()},Ot=pd;var Dt=function(l){return Ot(l).toUpperCase()},At=du;var _t=function(l){return"number"==typeof l&&l==At(l)};function qt(l){return!!Dd(l)&&(l=GW(l),_t(l))}function $t(l){if(!Dd(l))return 0;l=GW(l);let d=Zt(l);return"0"===String(d)?0:d}function ls(l){if(!qt(l))return!1;return $t(l)>=0}function ds(l,d){return Id(l)&&ls(d)?0===(d=$t(d))?"":l.substring(0,d):""}function bs(l,d){return Id(l)&&ls(d)?0===(d=$t(d))?l:function(l,d){if(!Id(l))return"";if(!ls(d))return"";if(0===(d=$t(d)))return"";let b=l.length-d;return b<0&&(b=0),l.substr(b,d)}(l,l.length-d):""}function Zs(l,d,b){if(!Id(l))return"";if(!Id(d))return"";if(!Td(b))return"";let Z=new RegExp(d,"g");return String(l).replace(Z,b)}function cs(l,d){if(!Id(l))return[];if(!Id(d))return[];let b=function(l,d){return Id(l)&&Id(d)?l.split(d):[]}(l,d);b=Tm(b,AW);let Z=[];return LX(b,(function(l){Id(l)&&Z.push(l)})),Z}function ms(l){if(!Id(l)&&!Dd(l)&&!J(l))return"";let d="";try{d=String(l)}catch(l){}try{d=l.toString()}catch(l){}return d}function Xs(l){if(!qt(l))return!1;return $t(l)>0}function us(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Id(l)&&ls(d)?(b=Xs(b)?$t(b):1,l.substring(d,d+b)):""}let Gs={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function Ws(l){return ss(l,1)}function ts(l){return ss(l,360)}function ss(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(l.indexOf("%")>=0){if(!Dd(l=Zs(l,"%","")))throw new Error("invalid color: value is not a number");l=GW(l)/100}else{if(!Dd(l))throw new Error("invalid color: value is not a number");l=GW(l)/d}if(l>1)throw new Error("invalid color: value > 1");if(l<0)throw new Error("invalid color: value < 0");return l}function as(l){if(!Dd(l))throw new Error("invalid color: value is not a number");if((l=GW(l))>1)throw new Error("invalid color: value > 1");if(l<0)throw new Error("invalid color: value < 0");return l}function ns(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"rgba";if(!zd(l))throw new Error("invalid colors array");let b=Jd(l,0,0),Z=Jd(l,1,0),c=Jd(l,2,0),m=Jd(l,3,1);if(d=d.split(""),4!==uX(d))throw new Error("tar.length !== 4");return{[Jd(d,0)]:b,[Jd(d,1)]:Z,[Jd(d,2)]:c,[Jd(d,3)]:m}}function hs(l){l=bs(l,1);let d=uX(l);if(2===d)l=`${l}${l}${l}ff`;else if(3===d){let d=us(l,0,1),b=us(l,1,1),Z=us(l,2,1);l=`${d}${d}${b}${b}${Z}${Z}ff`}else if(6===d)l=`${l}ff`;else if(8!==d)throw new Error("invalid hex color");function b(l){if(2!==uX(l))throw new Error("hex.length of color is not equal to 2");if(!Dd(l=parseInt(l,16)))throw new Error("invalid hex of color");return(l=GW(l))/255}return{r:b(us(l,0,2)),g:b(us(l,2,2)),b:b(us(l,4,2)),a:b(us(l,6,2))}}function is(l){return l=ns(l=Tm(l,((l,d)=>d<=2?ss(l,255):3===d?as(l):null)),"rgba")}function ps(l){return l=Hs(l=ns(l=Tm(l,((l,d)=>0===d?ts(l):1===d||2===d?Ws(l):3===d?as(l):null)),"hsla"))}function ys(l){return l=xs(l=ns(l=Tm(l,((l,d)=>0===d?ts(l):1===d||2===d?Ws(l):3===d?as(l):null)),"hsva"))}function Vs(l){if("transparent"===l)return{r:0,g:0,b:0,a:0};if(function(l){return Ad(Gs,l)}(l))return hs(l=`#${Gs[l]}`);if(function(l){return"#"===ds(l,1)&&(!!/[0-9A-Fa-f]{2}/g.test(l)||(!!/[0-9A-Fa-f]{3}/g.test(l)||(!!/[0-9A-Fa-f]{6}/g.test(l)||!!/[0-9A-Fa-f]{8}/g.test(l))))}(l))return hs(l);if(function(l){return"rgb"===ds(l,3)||"rgba"===ds(l,4)}(l))return function(l){return l=Zs(l,"rgba",""),l=Zs(l,"rgb",""),is(cs(l=Zs(l=l.replace(/[()]/g,""),","," ")," "))}(l);if(function(l){return"hsl"===ds(l,3)||"hsla"===ds(l,4)}(l))return function(l){return l=Zs(l,"hsla",""),l=Zs(l,"hsl",""),ps(cs(l=Zs(l=l.replace(/[()]/g,""),","," ")," "))}(l);if(function(l){return"hsv"===ds(l,3)||"hsva"===ds(l,4)}(l))return function(l){return l=Zs(l,"hsva",""),l=Zs(l,"hsv",""),ys(cs(l=Zs(l=l.replace(/[()]/g,""),","," ")," "))}(l);throw new Error("format of color string is not hex-color, name-color, rgba, hsla, hsva")}function os(l,d){return!!Ad(l,d=Et(d))||!!Ad(l,d=Dt(d))}function Rs(l,d,b){let Z;return Z=Jd(l,d,null),null!==Z?Z:(d=Dt(d),Z=Jd(l,d,null),null!==Z?Z:b)}function Ls(l){if(function(l){let d=os(l,"r"),b=os(l,"g"),Z=os(l,"b");return d&&b&&Z}(l))return function(l){let d=[Rs(l,"r",null),Rs(l,"g",null),Rs(l,"b",null),Rs(l,"a",1)];return d=Tm(d,ms),is(d)}(l);if(function(l){let d=os(l,"h"),b=os(l,"s"),Z=os(l,"l");return d&&b&&Z}(l))return function(l){let d=[Rs(l,"h",null),Rs(l,"s",null),Rs(l,"l",null),Rs(l,"a",1)];return d=Tm(d,ms),ps(d)}(l);if(function(l){let d=os(l,"h"),b=os(l,"s"),Z=os(l,"v");return d&&b&&Z}(l))return function(l){let d=[Rs(l,"h",null),Rs(l,"s",null),Rs(l,"v",null),Rs(l,"a",1)];return d=Tm(d,ms),ys(d)}(l);throw new Error("color object is not one of rgba, hsla, hsva")}function Ks(l){let d,b,Z=l.r,c=l.g,m=l.b,X=Math.max(Z,c,m),u=Math.min(Z,c,m),G=(X+u)/2;if(X===u)d=b=0;else{let l=X-u;switch(b=G>.5?l/(2-X-u):l/(X+u),X){case Z:d=(c-m)/l+(c<m?6:0);break;case c:d=(m-Z)/l+2;break;case m:d=(Z-c)/l+4}d/=6}return{h:d,s:b,l:G,a:l.a}}function es(l){let d,b,Z=l.r,c=l.g,m=l.b,X=Math.max(Z,c,m),u=Math.min(Z,c,m),G=X,W=X-u;if(b=0===X?0:W/X,X===u)d=0;else{switch(X){case Z:d=(c-m)/W+(c<m?6:0);break;case c:d=(m-Z)/W+2;break;case m:d=(Z-c)/W+4}d/=6}return{h:d,s:b,v:G,a:l.a}}function Hs(l){let d,b,Z,c=l.h,m=l.s,X=l.l;function u(l,d,b){return b<0&&(b+=1),b>1&&(b-=1),b<1/6?l+6*(d-l)*b:b<.5?d:b<2/3?l+(d-l)*(2/3-b)*6:l}if(0===m)d=b=Z=X;else{let l=X<.5?X*(1+m):X+m-X*m,G=2*X-l;d=u(G,l,c+1/3),b=u(G,l,c),Z=u(G,l,c-1/3)}return{r:d,g:b,b:Z,a:l.a}}function xs(l){let d,b,Z,c=l.h,m=l.s,X=l.v,u=Math.floor(6*c),G=6*c-u,W=X*(1-m),t=X*(1-G*m),s=X*(1-(1-G)*m);switch(u%6){case 0:d=X,b=s,Z=W;break;case 1:d=t,b=X,Z=W;break;case 2:d=W,b=X,Z=s;break;case 3:d=W,b=t,Z=X;break;case 4:d=s,b=W,Z=X;break;case 5:d=X,b=W,Z=t}return{r:d,g:b,b:Z,a:l.a}}function Ss(l){let d=Math.round(255*l).toString(16);if(1===uX(d))return`0${d}`;if(2===uX(d))return d;throw new Error("invalid value")}function Ys(l){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],b=l.r,Z=l.g,c=l.b,m=l.a,X=`${Ss(b)}${Ss(Z)}${Ss(c)}`;return d&&(X=`${X}${Ss(m)}`),X}function Js(l){return Math.min(1,Math.max(0,l))}function zs(l,d){if(!Id(d))throw new Error("fmtOutput is not a string");if(!Wa[d])throw console.log(`fmtOutput must be [${kZ(Wa)}]`),new Error("invalid fmtOutput");return l=Wa[d](l)}function vs(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"toRgbString";if(d<0||d>1)throw new Error("amount < 0 or > 1");let Z=Ks(l);return Z.h+=d,Z.h=Z.h%1,zs(Hs(Z),b)}function Ts(l,d,b,Z){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"toRgbString";if(d<0||d>1)throw new Error("w1 < 0 or > 1");if(Z<0||Z>1)throw new Error("w1 < 0 or > 1");return zs({r:l.r*d+b.r*Z,g:l.g*d+b.g*Z,b:l.b*d+b.b*Z,a:l.a*d+b.a*Z},c)}function Ms(l){return`${Zt(100*l,1)}%`}function Fs(l){return Zt(l,0)}function Cs(l){return Zt(l,3)}function Is(l){return{r:Fs(255*l.r),g:Fs(255*l.g),b:Fs(255*l.b)}}function gs(l){return`rgb(${Fs(255*l.r)}, ${Fs(255*l.g)}, ${Fs(255*l.b)})`}function ks(l){return{r:Fs(255*l.r),g:Fs(255*l.g),b:Fs(255*l.b),a:Cs(l.a)}}function rs(l){return`rgba(${Fs(255*l.r)}, ${Fs(255*l.g)}, ${Fs(255*l.b)}, ${Cs(l.a)})`}function Ns(l){let d=Ks(l);return{h:Fs(360*d.h),s:Cs(d.s),l:Cs(d.l)}}function Ps(l){let d=Ks(l);return`hsl(${Fs(360*d.h)}, ${Cs(d.s)}, ${Cs(d.l)})`}function ws(l){let d=Ks(l);return{h:Fs(360*d.h),s:Cs(d.s),l:Cs(d.l),a:Cs(d.a)}}function Bs(l){let d=Ks(l);return`hsla(${Fs(360*d.h)}, ${Cs(d.s)}, ${Cs(d.l)}, ${Cs(d.a)})`}function Us(l){let d=es(l);return{h:Fs(360*d.h),s:Cs(d.s),v:Cs(d.v)}}function fs(l){let d=es(l);return`hsv(${Fs(360*d.h)}, ${Cs(d.s)}, ${Cs(d.v)})`}function js(l){let d=es(l);return{h:Fs(360*d.h),s:Cs(d.s),v:Cs(d.v),a:Cs(d.a)}}function Qs(l){let d=es(l);return`hsva(${Fs(360*d.h)}, ${Cs(d.s)}, ${Cs(d.v)}, ${Cs(d.a)})`}function Es(l){return{r:Ms(l.r),g:Ms(l.g),b:Ms(l.b)}}function Os(l){return`rgb(${Ms(l.r)}, ${Ms(l.g)}, ${Ms(l.b)})`}function Ds(l){return{r:Ms(l.r),g:Ms(l.g),b:Ms(l.b),a:Cs(l.a)}}function As(l){return`rgba(${Ms(l.r)}, ${Ms(l.g)}, ${Ms(l.b)}, ${Cs(l.a)})`}function _s(l){let d=Ks(l);return{h:Fs(360*d.h),s:Ms(d.s),l:Ms(d.l)}}function qs(l){let d=Ks(l);return`hsl(${Fs(360*d.h)}, ${Ms(d.s)}, ${Ms(d.l)})`}function $s(l){let d=Ks(l);return{h:Fs(360*d.h),s:Ms(d.s),l:Ms(d.l),a:Cs(d.a)}}function la(l){let d=Ks(l);return`hsla(${Fs(360*d.h)}, ${Ms(d.s)}, ${Ms(d.l)}, ${Cs(d.a)})`}function da(l){let d=es(l);return{h:Fs(360*d.h),s:Ms(d.s),v:Ms(d.v)}}function ba(l){let d=es(l);return`hsv(${Fs(360*d.h)}, ${Ms(d.s)}, ${Ms(d.v)})`}function Za(l){let d=es(l);return{h:Fs(360*d.h),s:Ms(d.s),v:Ms(d.v),a:Cs(d.a)}}function ca(l){let d=es(l);return`hsva(${Fs(360*d.h)}, ${Ms(d.s)}, ${Ms(d.v)}, ${Cs(d.a)})`}function ma(l){let d=function(l){return Ys(l,!1)}(l);return`#${d}`}function Xa(l){return`#${Ys(l)}`}function ua(l){let d=null,b=null,Z=null;if(Id(l))d=Et(AW(l));else{if(!hW(l))throw console.log("color=",l),new Error("color is not a string or an object");b=l}if(null!==d)try{Z=Vs(d)}catch(l){throw console.log(l),new Error(`can not parse color: ${d}`)}else if(null!==b)try{Z=Ls(b)}catch(l){throw console.log(l),new Error(`can not parse color: ${JSON.stringify(b)}`)}return Z}function Ga(l){if(!hW(l))return console.log("gradient is not an effective object"),l=>`rgb(${255*(l=Math.min(Math.max(l,0),1))},${255*l},${255*l})`;let d=[];return LX(l,((l,b)=>{d.push([GW(b),ks(ua(l)),l])})),d=jt(d,0),function(l){let b=null;for(let Z=1;Z<d.length;Z++){let c=d[Z-1][0],m=d[Z-1][1],X=d[Z][0],u=d[Z][1];if(c<=l&&X>=l){let d=(X-l)/(X-c),Z=(l-c)/(X-c);b=Ts(ua(m),d,ua(u),Z,"toRgbaString");break}}return b}}let Wa={toRgb:Is,toRgbString:gs,toRgba:ks,toRgbaString:rs,toHsl:Ns,toHslString:Ps,toHsla:ws,toHslaString:Bs,toHsv:Us,toHsvString:fs,toHsva:js,toHsvaString:Qs,toRgbP:Es,toRgbPString:Os,toRgbaP:Ds,toRgbaPString:As,toHslP:_s,toHslPString:qs,toHslaP:$s,toHslaPString:la,toHsvP:da,toHsvPString:ba,toHsvaP:Za,toHsvaPString:ca,toHexString:ma,toHex8String:Xa};var ta=function(){let l={toRgb:l=>Is(ua(l)),toRgbString:l=>gs(ua(l)),toRgba:l=>ks(ua(l)),toRgbaString:l=>rs(ua(l)),toHsl:l=>Ns(ua(l)),toHslString:l=>Ps(ua(l)),toHsla:l=>ws(ua(l)),toHslaString:l=>Bs(ua(l)),toHsv:l=>Us(ua(l)),toHsvString:l=>fs(ua(l)),toHsva:l=>js(ua(l)),toHsvaString:l=>Qs(ua(l)),toRgbP:l=>Es(ua(l)),toRgbPString:l=>Os(ua(l)),toRgbaP:l=>Ds(ua(l)),toRgbaPString:l=>As(ua(l)),toHslP:l=>_s(ua(l)),toHslPString:l=>qs(ua(l)),toHslaP:l=>$s(ua(l)),toHslaPString:l=>la(ua(l)),toHsvP:l=>da(ua(l)),toHsvPString:l=>ba(ua(l)),toHsvaP:l=>Za(ua(l)),toHsvaPString:l=>ca(ua(l)),toHexString:l=>ma(ua(l)),toHex8String:l=>Xa(ua(l)),modSaturate:(l,d,b)=>function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"toRgbString";if(d<0||d>1)throw new Error("amount < 0 or > 1");let Z=Ks(l);return Z.s+=d,Z.s=Js(Z.s),zs(Hs(Z),b)}(ua(l),d,b),modGrey:(l,d)=>function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"toRgbString",b=Ks(l);return b.s=0,zs(Hs(b),d)}(ua(l),d),modLighten:(l,d,b)=>function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"toRgbString";if(d<0||d>1)throw new Error("amount < 0 or > 1");let Z=Ks(l);return Z.l+=d,Z.l=Js(Z.l),zs(Hs(Z),b)}(ua(l),d,b),modBrighten:(l,d,b)=>function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"toRgbString";if(d<0||d>1)throw new Error("amount < 0 or > 1");return l.r+=d,l.r=Js(l.r),l.g+=d,l.g=Js(l.g),l.b+=d,l.b=Js(l.b),zs(l,b)}(ua(l),d,b),modHue:(l,d,b)=>vs(ua(l),d,b),modComplement:(l,d)=>function(l){return vs(l,.5,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"toRgbString")}(ua(l),d),spreadHue:(l,d,b)=>function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"toRgbString";if(!qt(d))throw new Error("num is not an integer");if((d=$t(d))<=1)return[l];let Z=Ks(l),c=1/d,m=[];for(let l=0;l<d;l++)m.push(zs(Hs(Z),b)),Z.h+=c,Z.h=Z.h%1;return m}(ua(l),d,b),spreadMonochromatic:(l,d,b)=>function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"toRgbString";if(!qt(d))throw new Error("num is not an integer");if((d=$t(d))<=1)return[l];let Z=es(l);Z.s=1,Z.l=1;let c=1/d,m=[];for(let l=0;l<d;l++)m.push(zs(xs(Z),b)),Z.h-=c,Z.l-=c;return m}(ua(l),d,b),mix:(l,d,b,Z,c)=>Ts(ua(l),d,ua(b),Z,c),getBrightness:l=>function(l){if(1!==l.a)throw new Error("alpha of color can not be equal to 1");return(299*l.r+587*l.g+114*l.b)/1e3}(ua(l)),getLuminance:l=>function(l){if(1!==l.a)throw new Error("alpha of color can not be equal to 1");let d,b,Z,c=l.r,m=l.g,X=l.b;return d=c<=.03928?c/12.92:Math.pow((c+.055)/1.055,2.4),b=m<=.03928?m/12.92:Math.pow((m+.055)/1.055,2.4),Z=X<=.03928?X/12.92:Math.pow((X+.055)/1.055,2.4),.2126*d+.7152*b+.0722*Z}(ua(l)),interp:Ga};return l}();const sa=134217729,aa=33306690738754706e-32;function na(l,d,b,Z,c){let m,X,u,G,W=d[0],t=Z[0],s=0,a=0;t>W==t>-W?(m=W,W=d[++s]):(m=t,t=Z[++a]);let n=0;if(s<l&&a<b)for(t>W==t>-W?(X=W+m,u=m-(X-W),W=d[++s]):(X=t+m,u=m-(X-t),t=Z[++a]),m=X,0!==u&&(c[n++]=u);s<l&&a<b;)t>W==t>-W?(X=m+W,G=X-m,u=m-(X-G)+(W-G),W=d[++s]):(X=m+t,G=X-m,u=m-(X-G)+(t-G),t=Z[++a]),m=X,0!==u&&(c[n++]=u);for(;s<l;)X=m+W,G=X-m,u=m-(X-G)+(W-G),W=d[++s],m=X,0!==u&&(c[n++]=u);for(;a<b;)X=m+t,G=X-m,u=m-(X-G)+(t-G),t=Z[++a],m=X,0!==u&&(c[n++]=u);return 0===m&&0!==n||(c[n++]=m),n}function ha(l){return new Float64Array(l)}const ia=22204460492503146e-32,pa=11093356479670487e-47,ya=ha(4),Va=ha(8),oa=ha(12),Ra=ha(16),La=ha(4);function Ka(l,d,b,Z,c,m){const X=(d-m)*(b-c),u=(l-c)*(Z-m),G=X-u;if(0===X||0===u||X>0!=u>0)return G;const W=Math.abs(X+u);return Math.abs(G)>=33306690738754716e-32*W?G:-function(l,d,b,Z,c,m,X){let u,G,W,t,s,a,n,h,i,p,y,V,o,R,L,K,e,H;const x=l-c,S=b-c,Y=d-m,J=Z-m;R=x*J,a=sa*x,n=a-(a-x),h=x-n,a=sa*J,i=a-(a-J),p=J-i,L=h*p-(R-n*i-h*i-n*p),K=Y*S,a=sa*Y,n=a-(a-Y),h=Y-n,a=sa*S,i=a-(a-S),p=S-i,e=h*p-(K-n*i-h*i-n*p),y=L-e,s=L-y,ya[0]=L-(y+s)+(s-e),V=R+y,s=V-R,o=R-(V-s)+(y-s),y=o-K,s=o-y,ya[1]=o-(y+s)+(s-K),H=V+y,s=H-V,ya[2]=V-(H-s)+(y-s),ya[3]=H;let z=function(l,d){let b=d[0];for(let Z=1;Z<l;Z++)b+=d[Z];return b}(4,ya),v=ia*X;if(z>=v||-z>=v)return z;if(s=l-x,u=l-(x+s)+(s-c),s=b-S,W=b-(S+s)+(s-c),s=d-Y,G=d-(Y+s)+(s-m),s=Z-J,t=Z-(J+s)+(s-m),0===u&&0===G&&0===W&&0===t)return z;if(v=pa*X+aa*Math.abs(z),z+=x*t+J*u-(Y*W+S*G),z>=v||-z>=v)return z;R=u*J,a=sa*u,n=a-(a-u),h=u-n,a=sa*J,i=a-(a-J),p=J-i,L=h*p-(R-n*i-h*i-n*p),K=G*S,a=sa*G,n=a-(a-G),h=G-n,a=sa*S,i=a-(a-S),p=S-i,e=h*p-(K-n*i-h*i-n*p),y=L-e,s=L-y,La[0]=L-(y+s)+(s-e),V=R+y,s=V-R,o=R-(V-s)+(y-s),y=o-K,s=o-y,La[1]=o-(y+s)+(s-K),H=V+y,s=H-V,La[2]=V-(H-s)+(y-s),La[3]=H;const T=na(4,ya,4,La,Va);R=x*t,a=sa*x,n=a-(a-x),h=x-n,a=sa*t,i=a-(a-t),p=t-i,L=h*p-(R-n*i-h*i-n*p),K=Y*W,a=sa*Y,n=a-(a-Y),h=Y-n,a=sa*W,i=a-(a-W),p=W-i,e=h*p-(K-n*i-h*i-n*p),y=L-e,s=L-y,La[0]=L-(y+s)+(s-e),V=R+y,s=V-R,o=R-(V-s)+(y-s),y=o-K,s=o-y,La[1]=o-(y+s)+(s-K),H=V+y,s=H-V,La[2]=V-(H-s)+(y-s),La[3]=H;const M=na(T,Va,4,La,oa);R=u*t,a=sa*u,n=a-(a-u),h=u-n,a=sa*t,i=a-(a-t),p=t-i,L=h*p-(R-n*i-h*i-n*p),K=G*W,a=sa*G,n=a-(a-G),h=G-n,a=sa*W,i=a-(a-W),p=W-i,e=h*p-(K-n*i-h*i-n*p),y=L-e,s=L-y,La[0]=L-(y+s)+(s-e),V=R+y,s=V-R,o=R-(V-s)+(y-s),y=o-K,s=o-y,La[1]=o-(y+s)+(s-K),H=V+y,s=H-V,La[2]=V-(H-s)+(y-s),La[3]=H;const F=na(M,oa,4,La,Ra);return Ra[F-1]}(l,d,b,Z,c,m,W)}const ea=Math.pow(2,-52),Ha=new Uint32Array(512);class xa{static from(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ta,b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ma;const Z=l.length,c=new Float64Array(2*Z);for(let m=0;m<Z;m++){const Z=l[m];c[2*m]=d(Z),c[2*m+1]=b(Z)}return new xa(c)}constructor(l){const d=l.length>>1;if(d>0&&"number"!=typeof l[0])throw new Error("Expected coords to contain numbers.");this.coords=l;const b=Math.max(2*d-5,0);this._triangles=new Uint32Array(3*b),this._halfedges=new Int32Array(3*b),this._hashSize=Math.ceil(Math.sqrt(d)),this._hullPrev=new Uint32Array(d),this._hullNext=new Uint32Array(d),this._hullTri=new Uint32Array(d),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(d),this._dists=new Float64Array(d),this.update()}update(){const{coords:l,_hullPrev:d,_hullNext:b,_hullTri:Z,_hullHash:c}=this,m=l.length>>1;let X=1/0,u=1/0,G=-1/0,W=-1/0;for(let d=0;d<m;d++){const b=l[2*d],Z=l[2*d+1];b<X&&(X=b),Z<u&&(u=Z),b>G&&(G=b),Z>W&&(W=Z),this._ids[d]=d}const t=(X+G)/2,s=(u+W)/2;let a,n,h,i=1/0;for(let d=0;d<m;d++){const b=Sa(t,s,l[2*d],l[2*d+1]);b<i&&(a=d,i=b)}const p=l[2*a],y=l[2*a+1];i=1/0;for(let d=0;d<m;d++){if(d===a)continue;const b=Sa(p,y,l[2*d],l[2*d+1]);b<i&&b>0&&(n=d,i=b)}let V=l[2*n],o=l[2*n+1],R=1/0;for(let d=0;d<m;d++){if(d===a||d===n)continue;const b=Ja(p,y,V,o,l[2*d],l[2*d+1]);b<R&&(h=d,R=b)}let L=l[2*h],K=l[2*h+1];if(R===1/0){for(let d=0;d<m;d++)this._dists[d]=l[2*d]-l[0]||l[2*d+1]-l[1];za(this._ids,this._dists,0,m-1);const d=new Uint32Array(m);let b=0;for(let l=0,Z=-1/0;l<m;l++){const c=this._ids[l];this._dists[c]>Z&&(d[b++]=c,Z=this._dists[c])}return this.hull=d.subarray(0,b),this.triangles=new Uint32Array(0),void(this.halfedges=new Uint32Array(0))}if(Ka(p,y,V,o,L,K)<0){const l=n,d=V,b=o;n=h,V=L,o=K,h=l,L=d,K=b}const e=function(l,d,b,Z,c,m){const X=b-l,u=Z-d,G=c-l,W=m-d,t=X*X+u*u,s=G*G+W*W,a=.5/(X*W-u*G);return{x:l+(W*t-u*s)*a,y:d+(X*s-G*t)*a}}(p,y,V,o,L,K);this._cx=e.x,this._cy=e.y;for(let d=0;d<m;d++)this._dists[d]=Sa(l[2*d],l[2*d+1],e.x,e.y);za(this._ids,this._dists,0,m-1),this._hullStart=a;let H=3;b[a]=d[h]=n,b[n]=d[a]=h,b[h]=d[n]=a,Z[a]=0,Z[n]=1,Z[h]=2,c.fill(-1),c[this._hashKey(p,y)]=a,c[this._hashKey(V,o)]=n,c[this._hashKey(L,K)]=h,this.trianglesLen=0,this._addTriangle(a,n,h,-1,-1,-1);for(let m,X,u=0;u<this._ids.length;u++){const G=this._ids[u],W=l[2*G],t=l[2*G+1];if(u>0&&Math.abs(W-m)<=ea&&Math.abs(t-X)<=ea)continue;if(m=W,X=t,G===a||G===n||G===h)continue;let s=0;for(let l=0,d=this._hashKey(W,t);l<this._hashSize&&(s=c[(d+l)%this._hashSize],-1===s||s===b[s]);l++);s=d[s];let i,p=s;for(;i=b[p],Ka(W,t,l[2*p],l[2*p+1],l[2*i],l[2*i+1])>=0;)if(p=i,p===s){p=-1;break}if(-1===p)continue;let y=this._addTriangle(p,G,b[p],-1,-1,Z[p]);Z[G]=this._legalize(y+2),Z[p]=y,H++;let V=b[p];for(;i=b[V],Ka(W,t,l[2*V],l[2*V+1],l[2*i],l[2*i+1])<0;)y=this._addTriangle(V,G,i,Z[G],-1,Z[V]),Z[G]=this._legalize(y+2),b[V]=V,H--,V=i;if(p===s)for(;i=d[p],Ka(W,t,l[2*i],l[2*i+1],l[2*p],l[2*p+1])<0;)y=this._addTriangle(i,G,p,-1,Z[p],Z[i]),this._legalize(y+2),Z[i]=y,b[p]=p,H--,p=i;this._hullStart=d[G]=p,b[p]=d[V]=G,b[G]=V,c[this._hashKey(W,t)]=G,c[this._hashKey(l[2*p],l[2*p+1])]=p}this.hull=new Uint32Array(H);for(let l=0,d=this._hullStart;l<H;l++)this.hull[l]=d,d=b[d];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(l,d){return Math.floor(function(l,d){const b=l/(Math.abs(l)+Math.abs(d));return(d>0?3-b:1+b)/4}(l-this._cx,d-this._cy)*this._hashSize)%this._hashSize}_legalize(l){const{_triangles:d,_halfedges:b,coords:Z}=this;let c=0,m=0;for(;;){const X=b[l],u=l-l%3;if(m=u+(l+2)%3,-1===X){if(0===c)break;l=Ha[--c];continue}const G=X-X%3,W=u+(l+1)%3,t=G+(X+2)%3,s=d[m],a=d[l],n=d[W],h=d[t];if(Ya(Z[2*s],Z[2*s+1],Z[2*a],Z[2*a+1],Z[2*n],Z[2*n+1],Z[2*h],Z[2*h+1])){d[l]=h,d[X]=s;const Z=b[t];if(-1===Z){let d=this._hullStart;do{if(this._hullTri[d]===t){this._hullTri[d]=l;break}d=this._hullPrev[d]}while(d!==this._hullStart)}this._link(l,Z),this._link(X,b[m]),this._link(m,t);const u=G+(X+1)%3;c<Ha.length&&(Ha[c++]=u)}else{if(0===c)break;l=Ha[--c]}}return m}_link(l,d){this._halfedges[l]=d,-1!==d&&(this._halfedges[d]=l)}_addTriangle(l,d,b,Z,c,m){const X=this.trianglesLen;return this._triangles[X]=l,this._triangles[X+1]=d,this._triangles[X+2]=b,this._link(X,Z),this._link(X+1,c),this._link(X+2,m),this.trianglesLen+=3,X}}function Sa(l,d,b,Z){const c=l-b,m=d-Z;return c*c+m*m}function Ya(l,d,b,Z,c,m,X,u){const G=l-X,W=d-u,t=b-X,s=Z-u,a=c-X,n=m-u,h=t*t+s*s,i=a*a+n*n;return G*(s*i-h*n)-W*(t*i-h*a)+(G*G+W*W)*(t*n-s*a)<0}function Ja(l,d,b,Z,c,m){const X=b-l,u=Z-d,G=c-l,W=m-d,t=X*X+u*u,s=G*G+W*W,a=.5/(X*W-u*G),n=(W*t-u*s)*a,h=(X*s-G*t)*a;return n*n+h*h}function za(l,d,b,Z){if(Z-b<=20)for(let c=b+1;c<=Z;c++){const Z=l[c],m=d[Z];let X=c-1;for(;X>=b&&d[l[X]]>m;)l[X+1]=l[X--];l[X+1]=Z}else{let c=b+1,m=Z;va(l,b+Z>>1,c),d[l[b]]>d[l[Z]]&&va(l,b,Z),d[l[c]]>d[l[Z]]&&va(l,c,Z),d[l[b]]>d[l[c]]&&va(l,b,c);const X=l[c],u=d[X];for(;;){do{c++}while(d[l[c]]<u);do{m--}while(d[l[m]]>u);if(m<c)break;va(l,c,m)}l[b+1]=l[m],l[m]=X,Z-c+1>=m-b?(za(l,d,c,Z),za(l,d,b,m-1)):(za(l,d,b,m-1),za(l,d,c,Z))}}function va(l,d,b){const Z=l[d];l[d]=l[b],l[b]=Z}function Ta(l){return l[0]}function Ma(l){return l[1]}const Fa=1e-6;class Ca{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(l,d){this._+=`M${this._x0=this._x1=+l},${this._y0=this._y1=+d}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(l,d){this._+=`L${this._x1=+l},${this._y1=+d}`}arc(l,d,b){const Z=(l=+l)+(b=+b),c=d=+d;if(b<0)throw new Error("negative radius");null===this._x1?this._+=`M${Z},${c}`:(Math.abs(this._x1-Z)>Fa||Math.abs(this._y1-c)>Fa)&&(this._+="L"+Z+","+c),b&&(this._+=`A${b},${b},0,1,1,${l-b},${d}A${b},${b},0,1,1,${this._x1=Z},${this._y1=c}`)}rect(l,d,b,Z){this._+=`M${this._x0=this._x1=+l},${this._y0=this._y1=+d}h${+b}v${+Z}h${-b}Z`}value(){return this._||null}}class Ia{constructor(){this._=[]}moveTo(l,d){this._.push([l,d])}closePath(){this._.push(this._[0].slice())}lineTo(l,d){this._.push([l,d])}value(){return this._.length?this._:null}}class ga{constructor(l){let[d,b,Z,c]=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[0,0,960,500];if(!((Z=+Z)>=(d=+d)&&(c=+c)>=(b=+b)))throw new Error("invalid bounds");this.delaunay=l,this._circumcenters=new Float64Array(2*l.points.length),this.vectors=new Float64Array(2*l.points.length),this.xmax=Z,this.xmin=d,this.ymax=c,this.ymin=b,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:l,hull:d,triangles:b},vectors:Z}=this;let c,m;const X=this.circumcenters=this._circumcenters.subarray(0,b.length/3*2);for(let Z,u,G=0,W=0,t=b.length;G<t;G+=3,W+=2){const t=2*b[G],s=2*b[G+1],a=2*b[G+2],n=l[t],h=l[t+1],i=l[s],p=l[s+1],y=l[a],V=l[a+1],o=i-n,R=p-h,L=y-n,K=V-h,e=2*(o*K-R*L);if(Math.abs(e)<1e-9){if(void 0===c){c=m=0;for(const b of d)c+=l[2*b],m+=l[2*b+1];c/=d.length,m/=d.length}const b=1e9*Math.sign((c-n)*K-(m-h)*L);Z=(n+y)/2-b*K,u=(h+V)/2+b*L}else{const l=1/e,d=o*o+R*R,b=L*L+K*K;Z=n+(K*d-R*b)*l,u=h+(o*b-L*d)*l}X[W]=Z,X[W+1]=u}let u,G,W,t=d[d.length-1],s=4*t,a=l[2*t],n=l[2*t+1];Z.fill(0);for(let b=0;b<d.length;++b)t=d[b],u=s,G=a,W=n,s=4*t,a=l[2*t],n=l[2*t+1],Z[u+2]=Z[s]=W-n,Z[u+3]=Z[s+1]=a-G}render(l){const d=null==l?l=new Ca:void 0,{delaunay:{halfedges:b,inedges:Z,hull:c},circumcenters:m,vectors:X}=this;if(c.length<=1)return null;for(let d=0,Z=b.length;d<Z;++d){const Z=b[d];if(Z<d)continue;const c=2*Math.floor(d/3),X=2*Math.floor(Z/3),u=m[c],G=m[c+1],W=m[X],t=m[X+1];this._renderSegment(u,G,W,t,l)}let u,G=c[c.length-1];for(let d=0;d<c.length;++d){u=G,G=c[d];const b=2*Math.floor(Z[G]/3),W=m[b],t=m[b+1],s=4*u,a=this._project(W,t,X[s+2],X[s+3]);a&&this._renderSegment(W,t,a[0],a[1],l)}return d&&d.value()}renderBounds(l){const d=null==l?l=new Ca:void 0;return l.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),d&&d.value()}renderCell(l,d){const b=null==d?d=new Ca:void 0,Z=this._clip(l);if(null===Z||!Z.length)return;d.moveTo(Z[0],Z[1]);let c=Z.length;for(;Z[0]===Z[c-2]&&Z[1]===Z[c-1]&&c>1;)c-=2;for(let l=2;l<c;l+=2)Z[l]===Z[l-2]&&Z[l+1]===Z[l-1]||d.lineTo(Z[l],Z[l+1]);return d.closePath(),b&&b.value()}*cellPolygons(){const{delaunay:{points:l}}=this;for(let d=0,b=l.length/2;d<b;++d){const l=this.cellPolygon(d);l&&(l.index=d,yield l)}}cellPolygon(l){const d=new Ia;return this.renderCell(l,d),d.value()}_renderSegment(l,d,b,Z,c){let m;const X=this._regioncode(l,d),u=this._regioncode(b,Z);0===X&&0===u?(c.moveTo(l,d),c.lineTo(b,Z)):(m=this._clipSegment(l,d,b,Z,X,u))&&(c.moveTo(m[0],m[1]),c.lineTo(m[2],m[3]))}contains(l,d,b){return(d=+d)==d&&(b=+b)==b&&this.delaunay._step(l,d,b)===l}*neighbors(l){const d=this._clip(l);if(d)for(const b of this.delaunay.neighbors(l)){const l=this._clip(b);if(l)l:for(let Z=0,c=d.length;Z<c;Z+=2)for(let m=0,X=l.length;m<X;m+=2)if(d[Z]===l[m]&&d[Z+1]===l[m+1]&&d[(Z+2)%c]===l[(m+X-2)%X]&&d[(Z+3)%c]===l[(m+X-1)%X]){yield b;break l}}}_cell(l){const{circumcenters:d,delaunay:{inedges:b,halfedges:Z,triangles:c}}=this,m=b[l];if(-1===m)return null;const X=[];let u=m;do{const b=Math.floor(u/3);if(X.push(d[2*b],d[2*b+1]),u=u%3==2?u-2:u+1,c[u]!==l)break;u=Z[u]}while(u!==m&&-1!==u);return X}_clip(l){if(0===l&&1===this.delaunay.hull.length)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const d=this._cell(l);if(null===d)return null;const{vectors:b}=this,Z=4*l;return this._simplify(b[Z]||b[Z+1]?this._clipInfinite(l,d,b[Z],b[Z+1],b[Z+2],b[Z+3]):this._clipFinite(l,d))}_clipFinite(l,d){const b=d.length;let Z,c,m,X,u=null,G=d[b-2],W=d[b-1],t=this._regioncode(G,W),s=0;for(let a=0;a<b;a+=2)if(Z=G,c=W,G=d[a],W=d[a+1],m=t,t=this._regioncode(G,W),0===m&&0===t)X=s,s=0,u?u.push(G,W):u=[G,W];else{let d,b,a,n,h;if(0===m){if(null===(d=this._clipSegment(Z,c,G,W,m,t)))continue;[b,a,n,h]=d}else{if(null===(d=this._clipSegment(G,W,Z,c,t,m)))continue;[n,h,b,a]=d,X=s,s=this._edgecode(b,a),X&&s&&this._edge(l,X,s,u,u.length),u?u.push(b,a):u=[b,a]}X=s,s=this._edgecode(n,h),X&&s&&this._edge(l,X,s,u,u.length),u?u.push(n,h):u=[n,h]}if(u)X=s,s=this._edgecode(u[0],u[1]),X&&s&&this._edge(l,X,s,u,u.length);else if(this.contains(l,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return u}_clipSegment(l,d,b,Z,c,m){const X=c<m;for(X&&([l,d,b,Z,c,m]=[b,Z,l,d,m,c]);;){if(0===c&&0===m)return X?[b,Z,l,d]:[l,d,b,Z];if(c&m)return null;let u,G,W=c||m;8&W?(u=l+(b-l)*(this.ymax-d)/(Z-d),G=this.ymax):4&W?(u=l+(b-l)*(this.ymin-d)/(Z-d),G=this.ymin):2&W?(G=d+(Z-d)*(this.xmax-l)/(b-l),u=this.xmax):(G=d+(Z-d)*(this.xmin-l)/(b-l),u=this.xmin),c?(l=u,d=G,c=this._regioncode(l,d)):(b=u,Z=G,m=this._regioncode(b,Z))}}_clipInfinite(l,d,b,Z,c,m){let X,u=Array.from(d);if((X=this._project(u[0],u[1],b,Z))&&u.unshift(X[0],X[1]),(X=this._project(u[u.length-2],u[u.length-1],c,m))&&u.push(X[0],X[1]),u=this._clipFinite(l,u))for(let d,b=0,Z=u.length,c=this._edgecode(u[Z-2],u[Z-1]);b<Z;b+=2)d=c,c=this._edgecode(u[b],u[b+1]),d&&c&&(b=this._edge(l,d,c,u,b),Z=u.length);else this.contains(l,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(u=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return u}_edge(l,d,b,Z,c){for(;d!==b;){let b,m;switch(d){case 5:d=4;continue;case 4:d=6,b=this.xmax,m=this.ymin;break;case 6:d=2;continue;case 2:d=10,b=this.xmax,m=this.ymax;break;case 10:d=8;continue;case 8:d=9,b=this.xmin,m=this.ymax;break;case 9:d=1;continue;case 1:d=5,b=this.xmin,m=this.ymin}Z[c]===b&&Z[c+1]===m||!this.contains(l,b,m)||(Z.splice(c,0,b,m),c+=2)}return c}_project(l,d,b,Z){let c,m,X,u=1/0;if(Z<0){if(d<=this.ymin)return null;(c=(this.ymin-d)/Z)<u&&(X=this.ymin,m=l+(u=c)*b)}else if(Z>0){if(d>=this.ymax)return null;(c=(this.ymax-d)/Z)<u&&(X=this.ymax,m=l+(u=c)*b)}if(b>0){if(l>=this.xmax)return null;(c=(this.xmax-l)/b)<u&&(m=this.xmax,X=d+(u=c)*Z)}else if(b<0){if(l<=this.xmin)return null;(c=(this.xmin-l)/b)<u&&(m=this.xmin,X=d+(u=c)*Z)}return[m,X]}_edgecode(l,d){return(l===this.xmin?1:l===this.xmax?2:0)|(d===this.ymin?4:d===this.ymax?8:0)}_regioncode(l,d){return(l<this.xmin?1:l>this.xmax?2:0)|(d<this.ymin?4:d>this.ymax?8:0)}_simplify(l){if(l&&l.length>4){for(let d=0;d<l.length;d+=2){const b=(d+2)%l.length,Z=(d+4)%l.length;(l[d]===l[b]&&l[b]===l[Z]||l[d+1]===l[b+1]&&l[b+1]===l[Z+1])&&(l.splice(b,2),d-=2)}l.length||(l=null)}return l}}const ka=2*Math.PI,ra=Math.pow;function Na(l){return l[0]}function Pa(l){return l[1]}function wa(l,d,b){return[l+Math.sin(l+d)*b,d+Math.cos(l-d)*b]}class Ba{static from(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Na,b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Pa,Z=arguments.length>3?arguments[3]:void 0;return new Ba("length"in l?function(l,d,b,Z){const c=l.length,m=new Float64Array(2*c);for(let X=0;X<c;++X){const c=l[X];m[2*X]=d.call(Z,c,X,l),m[2*X+1]=b.call(Z,c,X,l)}return m}(l,d,b,Z):Float64Array.from(function*(l,d,b,Z){let c=0;for(const m of l)yield d.call(Z,m,c,l),yield b.call(Z,m,c,l),++c}(l,d,b,Z)))}constructor(l){this._delaunator=new xa(l),this.inedges=new Int32Array(l.length/2),this._hullIndex=new Int32Array(l.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const l=this._delaunator,d=this.points;if(l.hull&&l.hull.length>2&&function(l){const{triangles:d,coords:b}=l;for(let l=0;l<d.length;l+=3){const Z=2*d[l],c=2*d[l+1],m=2*d[l+2];if((b[m]-b[Z])*(b[c+1]-b[Z+1])-(b[c]-b[Z])*(b[m+1]-b[Z+1])>1e-10)return!1}return!0}(l)){this.collinear=Int32Array.from({length:d.length/2},((l,d)=>d)).sort(((l,b)=>d[2*l]-d[2*b]||d[2*l+1]-d[2*b+1]));const l=this.collinear[0],b=this.collinear[this.collinear.length-1],Z=[d[2*l],d[2*l+1],d[2*b],d[2*b+1]],c=1e-8*Math.hypot(Z[3]-Z[1],Z[2]-Z[0]);for(let l=0,b=d.length/2;l<b;++l){const b=wa(d[2*l],d[2*l+1],c);d[2*l]=b[0],d[2*l+1]=b[1]}this._delaunator=new xa(d)}else delete this.collinear;const b=this.halfedges=this._delaunator.halfedges,Z=this.hull=this._delaunator.hull,c=this.triangles=this._delaunator.triangles,m=this.inedges.fill(-1),X=this._hullIndex.fill(-1);for(let l=0,d=b.length;l<d;++l){const d=c[l%3==2?l-2:l+1];-1!==b[l]&&-1!==m[d]||(m[d]=l)}for(let l=0,d=Z.length;l<d;++l)X[Z[l]]=l;Z.length<=2&&Z.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=Z[0],m[Z[0]]=1,2===Z.length&&(m[Z[1]]=0,this.triangles[1]=Z[1],this.triangles[2]=Z[1]))}voronoi(l){return new ga(this,l)}*neighbors(l){const{inedges:d,hull:b,_hullIndex:Z,halfedges:c,triangles:m,collinear:X}=this;if(X){const d=X.indexOf(l);return d>0&&(yield X[d-1]),void(d<X.length-1&&(yield X[d+1]))}const u=d[l];if(-1===u)return;let G=u,W=-1;do{if(yield W=m[G],G=G%3==2?G-2:G+1,m[G]!==l)return;if(G=c[G],-1===G){const d=b[(Z[l]+1)%b.length];return void(d!==W&&(yield d))}}while(G!==u)}find(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if((l=+l)!=l||(d=+d)!=d)return-1;const Z=b;let c;for(;(c=this._step(b,l,d))>=0&&c!==b&&c!==Z;)b=c;return c}_step(l,d,b){const{inedges:Z,hull:c,_hullIndex:m,halfedges:X,triangles:u,points:G}=this;if(-1===Z[l]||!G.length)return(l+1)%(G.length>>1);let W=l,t=ra(d-G[2*l],2)+ra(b-G[2*l+1],2);const s=Z[l];let a=s;do{let Z=u[a];const s=ra(d-G[2*Z],2)+ra(b-G[2*Z+1],2);if(s<t&&(t=s,W=Z),a=a%3==2?a-2:a+1,u[a]!==l)break;if(a=X[a],-1===a){if(a=c[(m[l]+1)%c.length],a!==Z&&ra(d-G[2*a],2)+ra(b-G[2*a+1],2)<t)return a;break}}while(a!==s);return W}render(l){const d=null==l?l=new Ca:void 0,{points:b,halfedges:Z,triangles:c}=this;for(let d=0,m=Z.length;d<m;++d){const m=Z[d];if(m<d)continue;const X=2*c[d],u=2*c[m];l.moveTo(b[X],b[X+1]),l.lineTo(b[u],b[u+1])}return this.renderHull(l),d&&d.value()}renderPoints(l,d){void 0!==d||l&&"function"==typeof l.moveTo||(d=l,l=null),d=null==d?2:+d;const b=null==l?l=new Ca:void 0,{points:Z}=this;for(let b=0,c=Z.length;b<c;b+=2){const c=Z[b],m=Z[b+1];l.moveTo(c+d,m),l.arc(c,m,d,0,ka)}return b&&b.value()}renderHull(l){const d=null==l?l=new Ca:void 0,{hull:b,points:Z}=this,c=2*b[0],m=b.length;l.moveTo(Z[c],Z[c+1]);for(let d=1;d<m;++d){const c=2*b[d];l.lineTo(Z[c],Z[c+1])}return l.closePath(),d&&d.value()}hullPolygon(){const l=new Ia;return this.renderHull(l),l.value()}renderTriangle(l,d){const b=null==d?d=new Ca:void 0,{points:Z,triangles:c}=this,m=2*c[l*=3],X=2*c[l+1],u=2*c[l+2];return d.moveTo(Z[m],Z[m+1]),d.lineTo(Z[X],Z[X+1]),d.lineTo(Z[u],Z[u+1]),d.closePath(),b&&b.value()}*trianglePolygons(){const{triangles:l}=this;for(let d=0,b=l.length/3;d<b;++d)yield this.trianglePolygon(d)}trianglePolygon(l){const d=new Ia;return this.renderTriangle(l,d),d.value()}}function Ua(l,d){return null==l||null==d?NaN:l<d?-1:l>d?1:l>=d?0:NaN}function fa(l,d){return null==l||null==d?NaN:d<l?-1:d>l?1:d>=l?0:NaN}function ja(l){let d,b,Z;function c(l,Z){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:l.length;if(c<m){if(0!==d(Z,Z))return m;do{const d=c+m>>>1;b(l[d],Z)<0?c=d+1:m=d}while(c<m)}return c}return 2!==l.length?(d=Ua,b=(d,b)=>Ua(l(d),b),Z=(d,b)=>l(d)-b):(d=l===Ua||l===fa?l:Qa,b=l,Z=l),{left:c,center:function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const m=c(l,d,b,(arguments.length>3&&void 0!==arguments[3]?arguments[3]:l.length)-1);return m>b&&Z(l[m-1],d)>-Z(l[m],d)?m-1:m},right:function(l,Z){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:l.length;if(c<m){if(0!==d(Z,Z))return m;do{const d=c+m>>>1;b(l[d],Z)<=0?c=d+1:m=d}while(c<m)}return c}}}function Qa(){return 0}const Ea=ja(Ua).right;ja((function(l){return null===l?NaN:+l})).center;var Oa=Ea;const Da=Math.sqrt(50),Aa=Math.sqrt(10),_a=Math.sqrt(2);function qa(l,d,b){const Z=(d-l)/Math.max(0,b),c=Math.floor(Math.log10(Z)),m=Z/Math.pow(10,c),X=m>=Da?10:m>=Aa?5:m>=_a?2:1;let u,G,W;return c<0?(W=Math.pow(10,-c)/X,u=Math.round(l*W),G=Math.round(d*W),u/W<l&&++u,G/W>d&&--G,W=-W):(W=Math.pow(10,c)*X,u=Math.round(l/W),G=Math.round(d/W),u*W<l&&++u,G*W>d&&--G),G<u&&.5<=b&&b<2?qa(l,d,2*b):[u,G,W]}function $a(l,d,b){return qa(l=+l,d=+d,b=+b)[2]}function ln(l,d){switch(arguments.length){case 0:break;case 1:this.range(l);break;default:this.range(d).domain(l)}return this}function dn(l,d,b){l.prototype=d.prototype=b,b.constructor=l}function bn(l,d){var b=Object.create(l.prototype);for(var Z in d)b[Z]=d[Z];return b}function Zn(){}var cn=.7,mn=1/cn,Xn="\\s*([+-]?\\d+)\\s*",un="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",Gn="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Wn=/^#([0-9a-f]{3,8})$/,tn=new RegExp(`^rgb\\(${Xn},${Xn},${Xn}\\)$`),sn=new RegExp(`^rgb\\(${Gn},${Gn},${Gn}\\)$`),an=new RegExp(`^rgba\\(${Xn},${Xn},${Xn},${un}\\)$`),nn=new RegExp(`^rgba\\(${Gn},${Gn},${Gn},${un}\\)$`),hn=new RegExp(`^hsl\\(${un},${Gn},${Gn}\\)$`),pn=new RegExp(`^hsla\\(${un},${Gn},${Gn},${un}\\)$`),yn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Vn(){return this.rgb().formatHex()}function on(){return this.rgb().formatRgb()}function Rn(l){var d,b;return l=(l+"").trim().toLowerCase(),(d=Wn.exec(l))?(b=d[1].length,d=parseInt(d[1],16),6===b?Ln(d):3===b?new Hn(d>>8&15|d>>4&240,d>>4&15|240&d,(15&d)<<4|15&d,1):8===b?Kn(d>>24&255,d>>16&255,d>>8&255,(255&d)/255):4===b?Kn(d>>12&15|d>>8&240,d>>8&15|d>>4&240,d>>4&15|240&d,((15&d)<<4|15&d)/255):null):(d=tn.exec(l))?new Hn(d[1],d[2],d[3],1):(d=sn.exec(l))?new Hn(255*d[1]/100,255*d[2]/100,255*d[3]/100,1):(d=an.exec(l))?Kn(d[1],d[2],d[3],d[4]):(d=nn.exec(l))?Kn(255*d[1]/100,255*d[2]/100,255*d[3]/100,d[4]):(d=hn.exec(l))?vn(d[1],d[2]/100,d[3]/100,1):(d=pn.exec(l))?vn(d[1],d[2]/100,d[3]/100,d[4]):yn.hasOwnProperty(l)?Ln(yn[l]):"transparent"===l?new Hn(NaN,NaN,NaN,0):null}function Ln(l){return new Hn(l>>16&255,l>>8&255,255&l,1)}function Kn(l,d,b,Z){return Z<=0&&(l=d=b=NaN),new Hn(l,d,b,Z)}function en(l,d,b,Z){return 1===arguments.length?((c=l)instanceof Zn||(c=Rn(c)),c?new Hn((c=c.rgb()).r,c.g,c.b,c.opacity):new Hn):new Hn(l,d,b,null==Z?1:Z);var c}function Hn(l,d,b,Z){this.r=+l,this.g=+d,this.b=+b,this.opacity=+Z}function xn(){return`#${zn(this.r)}${zn(this.g)}${zn(this.b)}`}function Sn(){const l=Yn(this.opacity);return`${1===l?"rgb(":"rgba("}${Jn(this.r)}, ${Jn(this.g)}, ${Jn(this.b)}${1===l?")":`, ${l})`}`}function Yn(l){return isNaN(l)?1:Math.max(0,Math.min(1,l))}function Jn(l){return Math.max(0,Math.min(255,Math.round(l)||0))}function zn(l){return((l=Jn(l))<16?"0":"")+l.toString(16)}function vn(l,d,b,Z){return Z<=0?l=d=b=NaN:b<=0||b>=1?l=d=NaN:d<=0&&(l=NaN),new Mn(l,d,b,Z)}function Tn(l){if(l instanceof Mn)return new Mn(l.h,l.s,l.l,l.opacity);if(l instanceof Zn||(l=Rn(l)),!l)return new Mn;if(l instanceof Mn)return l;var d=(l=l.rgb()).r/255,b=l.g/255,Z=l.b/255,c=Math.min(d,b,Z),m=Math.max(d,b,Z),X=NaN,u=m-c,G=(m+c)/2;return u?(X=d===m?(b-Z)/u+6*(b<Z):b===m?(Z-d)/u+2:(d-b)/u+4,u/=G<.5?m+c:2-m-c,X*=60):u=G>0&&G<1?0:X,new Mn(X,u,G,l.opacity)}function Mn(l,d,b,Z){this.h=+l,this.s=+d,this.l=+b,this.opacity=+Z}function Fn(l){return(l=(l||0)%360)<0?l+360:l}function Cn(l){return Math.max(0,Math.min(1,l||0))}function In(l,d,b){return 255*(l<60?d+(b-d)*l/60:l<180?b:l<240?d+(b-d)*(240-l)/60:d)}dn(Zn,Rn,{copy(l){return Object.assign(new this.constructor,this,l)},displayable(){return this.rgb().displayable()},hex:Vn,formatHex:Vn,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return Tn(this).formatHsl()},formatRgb:on,toString:on}),dn(Hn,en,bn(Zn,{brighter(l){return l=null==l?mn:Math.pow(mn,l),new Hn(this.r*l,this.g*l,this.b*l,this.opacity)},darker(l){return l=null==l?cn:Math.pow(cn,l),new Hn(this.r*l,this.g*l,this.b*l,this.opacity)},rgb(){return this},clamp(){return new Hn(Jn(this.r),Jn(this.g),Jn(this.b),Yn(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:xn,formatHex:xn,formatHex8:function(){return`#${zn(this.r)}${zn(this.g)}${zn(this.b)}${zn(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:Sn,toString:Sn})),dn(Mn,(function(l,d,b,Z){return 1===arguments.length?Tn(l):new Mn(l,d,b,null==Z?1:Z)}),bn(Zn,{brighter(l){return l=null==l?mn:Math.pow(mn,l),new Mn(this.h,this.s,this.l*l,this.opacity)},darker(l){return l=null==l?cn:Math.pow(cn,l),new Mn(this.h,this.s,this.l*l,this.opacity)},rgb(){var l=this.h%360+360*(this.h<0),d=isNaN(l)||isNaN(this.s)?0:this.s,b=this.l,Z=b+(b<.5?b:1-b)*d,c=2*b-Z;return new Hn(In(l>=240?l-240:l+120,c,Z),In(l,c,Z),In(l<120?l+240:l-120,c,Z),this.opacity)},clamp(){return new Mn(Fn(this.h),Cn(this.s),Cn(this.l),Yn(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const l=Yn(this.opacity);return`${1===l?"hsl(":"hsla("}${Fn(this.h)}, ${100*Cn(this.s)}%, ${100*Cn(this.l)}%${1===l?")":`, ${l})`}`}}));var gn=l=>()=>l;function kn(l){return 1==(l=+l)?rn:function(d,b){return b-d?function(l,d,b){return l=Math.pow(l,b),d=Math.pow(d,b)-l,b=1/b,function(Z){return Math.pow(l+Z*d,b)}}(d,b,l):gn(isNaN(d)?b:d)}}function rn(l,d){var b=d-l;return b?function(l,d){return function(b){return l+b*d}}(l,b):gn(isNaN(l)?d:l)}var Nn=function l(d){var b=kn(d);function Z(l,d){var Z=b((l=en(l)).r,(d=en(d)).r),c=b(l.g,d.g),m=b(l.b,d.b),X=rn(l.opacity,d.opacity);return function(d){return l.r=Z(d),l.g=c(d),l.b=m(d),l.opacity=X(d),l+""}}return Z.gamma=l,Z}(1);function Pn(l,d){d||(d=[]);var b,Z=l?Math.min(d.length,l.length):0,c=d.slice();return function(m){for(b=0;b<Z;++b)c[b]=l[b]*(1-m)+d[b]*m;return c}}function wn(l,d){var b,Z=d?d.length:0,c=l?Math.min(Z,l.length):0,m=new Array(c),X=new Array(Z);for(b=0;b<c;++b)m[b]=On(l[b],d[b]);for(;b<Z;++b)X[b]=d[b];return function(l){for(b=0;b<c;++b)X[b]=m[b](l);return X}}function Bn(l,d){var b=new Date;return l=+l,d=+d,function(Z){return b.setTime(l*(1-Z)+d*Z),b}}function Un(l,d){return l=+l,d=+d,function(b){return l*(1-b)+d*b}}function fn(l,d){var b,Z={},c={};for(b in null!==l&&"object"==typeof l||(l={}),null!==d&&"object"==typeof d||(d={}),d)b in l?Z[b]=On(l[b],d[b]):c[b]=d[b];return function(l){for(b in Z)c[b]=Z[b](l);return c}}var jn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Qn=new RegExp(jn.source,"g");function En(l,d){var b,Z,c,m=jn.lastIndex=Qn.lastIndex=0,X=-1,u=[],G=[];for(l+="",d+="";(b=jn.exec(l))&&(Z=Qn.exec(d));)(c=Z.index)>m&&(c=d.slice(m,c),u[X]?u[X]+=c:u[++X]=c),(b=b[0])===(Z=Z[0])?u[X]?u[X]+=Z:u[++X]=Z:(u[++X]=null,G.push({i:X,x:Un(b,Z)})),m=Qn.lastIndex;return m<d.length&&(c=d.slice(m),u[X]?u[X]+=c:u[++X]=c),u.length<2?G[0]?function(l){return function(d){return l(d)+""}}(G[0].x):function(l){return function(){return l}}(d):(d=G.length,function(l){for(var b,Z=0;Z<d;++Z)u[(b=G[Z]).i]=b.x(l);return u.join("")})}function On(l,d){var b,Z,c=typeof d;return null==d||"boolean"===c?gn(d):("number"===c?Un:"string"===c?(b=Rn(d))?(d=b,Nn):En:d instanceof Rn?Nn:d instanceof Date?Bn:(Z=d,!ArrayBuffer.isView(Z)||Z instanceof DataView?Array.isArray(d)?wn:"function"!=typeof d.valueOf&&"function"!=typeof d.toString||isNaN(d)?fn:Un:Pn))(l,d)}function Dn(l,d){return l=+l,d=+d,function(b){return Math.round(l*(1-b)+d*b)}}function An(l){return+l}var _n=[0,1];function qn(l){return l}function $n(l,d){return(d-=l=+l)?function(b){return(b-l)/d}:(b=isNaN(d)?NaN:.5,function(){return b});var b}function lh(l,d,b){var Z=l[0],c=l[1],m=d[0],X=d[1];return c<Z?(Z=$n(c,Z),m=b(X,m)):(Z=$n(Z,c),m=b(m,X)),function(l){return m(Z(l))}}function dh(l,d,b){var Z=Math.min(l.length,d.length)-1,c=new Array(Z),m=new Array(Z),X=-1;for(l[Z]<l[0]&&(l=l.slice().reverse(),d=d.slice().reverse());++X<Z;)c[X]=$n(l[X],l[X+1]),m[X]=b(d[X],d[X+1]);return function(d){var b=Oa(l,d,1,Z)-1;return m[b](c[b](d))}}function bh(){var l,d,b,Z,c,m,X=_n,u=_n,G=On,W=qn;function t(){var l,d,b,G=Math.min(X.length,u.length);return W!==qn&&(l=X[0],d=X[G-1],l>d&&(b=l,l=d,d=b),W=function(b){return Math.max(l,Math.min(d,b))}),Z=G>2?dh:lh,c=m=null,s}function s(d){return null==d||isNaN(d=+d)?b:(c||(c=Z(X.map(l),u,G)))(l(W(d)))}return s.invert=function(b){return W(d((m||(m=Z(u,X.map(l),Un)))(b)))},s.domain=function(l){return arguments.length?(X=Array.from(l,An),t()):X.slice()},s.range=function(l){return arguments.length?(u=Array.from(l),t()):u.slice()},s.rangeRound=function(l){return u=Array.from(l),G=Dn,t()},s.clamp=function(l){return arguments.length?(W=!!l||qn,t()):W!==qn},s.interpolate=function(l){return arguments.length?(G=l,t()):G},s.unknown=function(l){return arguments.length?(b=l,s):b},function(b,Z){return l=b,d=Z,t()}}function Zh(l,d){if((b=(l=d?l.toExponential(d-1):l.toExponential()).indexOf("e"))<0)return null;var b,Z=l.slice(0,b);return[Z.length>1?Z[0]+Z.slice(2):Z,+l.slice(b+1)]}function ch(l){return(l=Zh(Math.abs(l)))?l[1]:NaN}var mh,Xh=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function uh(l){if(!(d=Xh.exec(l)))throw new Error("invalid format: "+l);var d;return new Gh({fill:d[1],align:d[2],sign:d[3],symbol:d[4],zero:d[5],width:d[6],comma:d[7],precision:d[8]&&d[8].slice(1),trim:d[9],type:d[10]})}function Gh(l){this.fill=void 0===l.fill?" ":l.fill+"",this.align=void 0===l.align?">":l.align+"",this.sign=void 0===l.sign?"-":l.sign+"",this.symbol=void 0===l.symbol?"":l.symbol+"",this.zero=!!l.zero,this.width=void 0===l.width?void 0:+l.width,this.comma=!!l.comma,this.precision=void 0===l.precision?void 0:+l.precision,this.trim=!!l.trim,this.type=void 0===l.type?"":l.type+""}function Wh(l,d){var b=Zh(l,d);if(!b)return l+"";var Z=b[0],c=b[1];return c<0?"0."+new Array(-c).join("0")+Z:Z.length>c+1?Z.slice(0,c+1)+"."+Z.slice(c+1):Z+new Array(c-Z.length+2).join("0")}uh.prototype=Gh.prototype,Gh.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var th={"%":(l,d)=>(100*l).toFixed(d),b:l=>Math.round(l).toString(2),c:l=>l+"",d:function(l){return Math.abs(l=Math.round(l))>=1e21?l.toLocaleString("en").replace(/,/g,""):l.toString(10)},e:(l,d)=>l.toExponential(d),f:(l,d)=>l.toFixed(d),g:(l,d)=>l.toPrecision(d),o:l=>Math.round(l).toString(8),p:(l,d)=>Wh(100*l,d),r:Wh,s:function(l,d){var b=Zh(l,d);if(!b)return l+"";var Z=b[0],c=b[1],m=c-(mh=3*Math.max(-8,Math.min(8,Math.floor(c/3))))+1,X=Z.length;return m===X?Z:m>X?Z+new Array(m-X+1).join("0"):m>0?Z.slice(0,m)+"."+Z.slice(m):"0."+new Array(1-m).join("0")+Zh(l,Math.max(0,d+m-1))[0]},X:l=>Math.round(l).toString(16).toUpperCase(),x:l=>Math.round(l).toString(16)};function sh(l){return l}var ah,nh,hh,ih=Array.prototype.map,ph=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function yh(l){var d,b,Z=void 0===l.grouping||void 0===l.thousands?sh:(d=ih.call(l.grouping,Number),b=l.thousands+"",function(l,Z){for(var c=l.length,m=[],X=0,u=d[0],G=0;c>0&&u>0&&(G+u+1>Z&&(u=Math.max(1,Z-G)),m.push(l.substring(c-=u,c+u)),!((G+=u+1)>Z));)u=d[X=(X+1)%d.length];return m.reverse().join(b)}),c=void 0===l.currency?"":l.currency[0]+"",m=void 0===l.currency?"":l.currency[1]+"",X=void 0===l.decimal?".":l.decimal+"",u=void 0===l.numerals?sh:function(l){return function(d){return d.replace(/[0-9]/g,(function(d){return l[+d]}))}}(ih.call(l.numerals,String)),G=void 0===l.percent?"%":l.percent+"",W=void 0===l.minus?"−":l.minus+"",t=void 0===l.nan?"NaN":l.nan+"";function s(l){var d=(l=uh(l)).fill,b=l.align,s=l.sign,a=l.symbol,n=l.zero,h=l.width,i=l.comma,p=l.precision,y=l.trim,V=l.type;"n"===V?(i=!0,V="g"):th[V]||(void 0===p&&(p=12),y=!0,V="g"),(n||"0"===d&&"="===b)&&(n=!0,d="0",b="=");var o="$"===a?c:"#"===a&&/[boxX]/.test(V)?"0"+V.toLowerCase():"",R="$"===a?m:/[%p]/.test(V)?G:"",L=th[V],K=/[defgprs%]/.test(V);function e(l){var c,m,G,a=o,e=R;if("c"===V)e=L(l)+e,l="";else{var H=(l=+l)<0||1/l<0;if(l=isNaN(l)?t:L(Math.abs(l),p),y&&(l=function(l){l:for(var d,b=l.length,Z=1,c=-1;Z<b;++Z)switch(l[Z]){case".":c=d=Z;break;case"0":0===c&&(c=Z),d=Z;break;default:if(!+l[Z])break l;c>0&&(c=0)}return c>0?l.slice(0,c)+l.slice(d+1):l}(l)),H&&0==+l&&"+"!==s&&(H=!1),a=(H?"("===s?s:W:"-"===s||"("===s?"":s)+a,e=("s"===V?ph[8+mh/3]:"")+e+(H&&"("===s?")":""),K)for(c=-1,m=l.length;++c<m;)if(48>(G=l.charCodeAt(c))||G>57){e=(46===G?X+l.slice(c+1):l.slice(c))+e,l=l.slice(0,c);break}}i&&!n&&(l=Z(l,1/0));var x=a.length+l.length+e.length,S=x<h?new Array(h-x+1).join(d):"";switch(i&&n&&(l=Z(S+l,S.length?h-e.length:1/0),S=""),b){case"<":l=a+l+e+S;break;case"=":l=a+S+l+e;break;case"^":l=S.slice(0,x=S.length>>1)+a+l+e+S.slice(x);break;default:l=S+a+l+e}return u(l)}return p=void 0===p?6:/[gprs]/.test(V)?Math.max(1,Math.min(21,p)):Math.max(0,Math.min(20,p)),e.toString=function(){return l+""},e}return{format:s,formatPrefix:function(l,d){var b=s(((l=uh(l)).type="f",l)),Z=3*Math.max(-8,Math.min(8,Math.floor(ch(d)/3))),c=Math.pow(10,-Z),m=ph[8+Z/3];return function(l){return b(c*l)+m}}}}function Vh(l,d,b,Z){var c,m=function(l,d,b){b=+b;const Z=(d=+d)<(l=+l),c=Z?$a(d,l,b):$a(l,d,b);return(Z?-1:1)*(c<0?1/-c:c)}(l,d,b);switch((Z=uh(null==Z?",f":Z)).type){case"s":var X=Math.max(Math.abs(l),Math.abs(d));return null!=Z.precision||isNaN(c=function(l,d){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(ch(d)/3)))-ch(Math.abs(l)))}(m,X))||(Z.precision=c),hh(Z,X);case"":case"e":case"g":case"p":case"r":null!=Z.precision||isNaN(c=function(l,d){return l=Math.abs(l),d=Math.abs(d)-l,Math.max(0,ch(d)-ch(l))+1}(m,Math.max(Math.abs(l),Math.abs(d))))||(Z.precision=c-("e"===Z.type));break;case"f":case"%":null!=Z.precision||isNaN(c=function(l){return Math.max(0,-ch(Math.abs(l)))}(m))||(Z.precision=c-2*("%"===Z.type))}return nh(Z)}function oh(l){var d=l.domain;return l.ticks=function(l){var b=d();return function(l,d,b){if(!((b=+b)>0))return[];if((l=+l)==(d=+d))return[l];const Z=d<l,[c,m,X]=Z?qa(d,l,b):qa(l,d,b);if(!(m>=c))return[];const u=m-c+1,G=new Array(u);if(Z)if(X<0)for(let l=0;l<u;++l)G[l]=(m-l)/-X;else for(let l=0;l<u;++l)G[l]=(m-l)*X;else if(X<0)for(let l=0;l<u;++l)G[l]=(c+l)/-X;else for(let l=0;l<u;++l)G[l]=(c+l)*X;return G}(b[0],b[b.length-1],null==l?10:l)},l.tickFormat=function(l,b){var Z=d();return Vh(Z[0],Z[Z.length-1],null==l?10:l,b)},l.nice=function(b){null==b&&(b=10);var Z,c,m=d(),X=0,u=m.length-1,G=m[X],W=m[u],t=10;for(W<G&&(c=G,G=W,W=c,c=X,X=u,u=c);t-- >0;){if((c=$a(G,W,b))===Z)return m[X]=G,m[u]=W,d(m);if(c>0)G=Math.floor(G/c)*c,W=Math.ceil(W/c)*c;else{if(!(c<0))break;G=Math.ceil(G*c)/c,W=Math.floor(W*c)/c}Z=c}return l},l}function Rh(){var l=bh()(qn,qn);return l.copy=function(){return d=l,Rh().domain(d.domain()).range(d.range()).interpolate(d.interpolate()).clamp(d.clamp()).unknown(d.unknown());var d},ln.apply(l,arguments),oh(l)}function Lh(l,d){const b=d.length;let Z=-1;for(;++Z<b;){const b=Kh(l,d[Z]);if(b)return b}return 0}function Kh(l,d){let b=d[0],Z=d[1],c=-1;for(let m=0,X=l.length,u=X-1;m<X;u=m++){const X=l[m],G=X[0],W=X[1],t=l[u],s=t[0],a=t[1];if(eh(X,t,d))return 0;W>Z!=a>Z&&b<(s-G)*(Z-W)/(a-W)+G&&(c=-c)}return c}function eh(l,d,b){let Z;return function(l,d,b){return(d[0]-l[0])*(b[1]-l[1])==(b[0]-l[0])*(d[1]-l[1])}(l,d,b)&&function(l,d,b){return l<=d&&d<=b||b<=d&&d<=l}(l[Z=+(l[0]===d[0])],b[Z],d[Z])}function Hh(l){let d=0,b=l.length,Z=l[b-1][1]*l[0][0]-l[b-1][0]*l[0][1];for(;++d<b;)Z+=l[d-1][1]*l[d][0]-l[d-1][0]*l[d][1];return Z}function xh(l){const d=[],b=[];for(const Z of l)Hh(Z)>0?d.push([Z]):b.push(Z);return b.forEach((function(l){for(let b,Z=0,c=d.length;Z<c;++Z)if(-1!==Lh((b=d[Z])[0],l))return void b.push(l)})),d}function Sh(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(uX(l)<=0)return[];let b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyY");Id(Z)||(Z="y");let c=Jd(d,"keyZ","");Id(c)||(c="z");let m=Jd(d,"keyInd","");Id(m)||(m="ind");let X=Jd(d,"returnObjArray");nW(X)||(X=!0);let u=[];return LX(l,((l,d)=>{let X=null,G=null,W=null;zd(l)&&uX(l)>=3?(X=Jd(l,0),G=Jd(l,1),W=Jd(l,2)):(X=Jd(l,b,null),G=Jd(l,Z,null),W=Jd(l,c,null)),Dd(X)&&Dd(G)&&Dd(W)&&(X=AX(X),G=AX(G),W=AX(W),u.push({x:X,y:G,z:W,[m]:d}))})),X||(u=Tm(u,(l=>[l.x,l.y,l.z,l[m]]))),u}function Yh(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cd(l)?(l=WX(l,d),l=lb.helpers.multiPolygon(l),lb.area(l)):null}function Jh(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Cd(l))return null;l=aX(l,d),l=lb.helpers.multiPolygon(l);let b=lb.centroid(l);return Jd(b,"geometry.coordinates",[])}function zh(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Cd(l)&&Cd(d)?(l=WX(l,b),d=WX(d,b),l=lb.helpers.multiPolygon(l),d=lb.helpers.multiPolygon(d),eX(lb.difference(l,d))):null}function vh(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Cd(l)&&Cd(d)?(l=WX(l,b),d=WX(d,b),l=lb.helpers.multiPolygon(l),d=lb.helpers.multiPolygon(d),eX(lb.intersect(l,d))):null}function Th(l){if(!Cd(l))return null;return Tm(l,(l=>Tm(l,(l=>[l[1],l[0]]))))}function Mh(l){if(!Cd(l))return null;return Tm(l,(l=>Th(l)))}function Fh(l,d){var b=Object.keys(l);if(Object.getOwnPropertySymbols){var Z=Object.getOwnPropertySymbols(l);d&&(Z=Z.filter((function(d){return Object.getOwnPropertyDescriptor(l,d).enumerable}))),b.push.apply(b,Z)}return b}function Ch(l){for(var d=1;d<arguments.length;d++){var b=null!=arguments[d]?arguments[d]:{};d%2?Fh(Object(b),!0).forEach((function(d){SX(l,d,b[d])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(b)):Fh(Object(b)).forEach((function(d){Object.defineProperty(l,d,Object.getOwnPropertyDescriptor(b,d))}))}return l}function Ih(l,d){let b=function(){let l,d,b,Z=l=>l[0],c=l=>l[1],m=l=>isFinite(+l[2])?+l[2]:0,X=Ba.from,u=(l,d,Z)=>{const{points:c}=b,m=[c[2*l],c[2*l+1]],X=[c[2*d],c[2*d+1]];return[Z*X[0]+(1-Z)*m[0],Z*X[1]+(1-Z)*m[1]]},G=xh;function W(u){b=X(u,Z,c),d=Array.from(u,m),"object"!=typeof l&&(l=Rh().domain(function(l){let d,b;for(const Z of l)null!=Z&&(void 0===d?Z>=Z&&(d=b=Z):(d>Z&&(d=Z),b<Z&&(b=Z)));return[d,b]}(d)).nice().ticks(l))}function*t(Z){W(Z);for(const Z of l){const l=h(b,d,Z);yield{type:"MultiPolygon",coordinates:l,value:Z}}}const s=function(l){return[...t(l)]};return s.x=l=>l?(Z=l,s):Z,s.y=l=>l?(c=l,s):c,s.value=l=>l?(m=l,s):m,s.thresholds=d=>d?(l=d,s):l,s.triangulate=l=>l?(X=l,s):X,s.pointInterpolate=l=>l?(u=l,s):u,s.ringsort=l=>l?(G=l,s):G,s.contours=t,s.contour=function(l,Z){return W(l),{type:"MultiPolygon",coordinates:h(b,d,Z),value:Z}},s.isobands=function*(Z){let c,m,X;W(Z);for(const Z of l)m&&(c=m),u=h(b,d,Z),m=Array.from(function*(l){for(const d of l)yield*d}(u)),c&&(yield{type:"MultiPolygon",coordinates:G(c.concat(m.map((l=>l.slice().reverse())))),value:X,valueMax:Z}),X=Z;var u},s._values=()=>d,s._triangulation=()=>b,s;function a(l){return l%3==2?l-2:l+1}function n(l){return l%3==0?l+2:l-1}function h(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;for(const l of d)if(!isFinite(l))throw["Invalid value",l];const{halfedges:Z,hull:c,inedges:m,triangles:X}=l,W=d.length;function t(l){return s(X[l],X[a(l)])}function s(l,Z){const c=d[l],m=d[Z];if(c<=b&&m>=b&&c<m)return(b-c)/(m-c)}const h=[],i=new Uint8Array(Z.length).fill(0);let p,y,V,o,R;for(o=0;o<Z.length;o++)if(!i[o]){for(y=o,p=[];(R=t(y))>0;){const[l,u]=[X[y],X[V=a(y)]];if(p.length&&l===p[0].ti&&u===p[0].tj||p.length>2*W)break;if(i[y]=1,p.push({ti:l,tj:u,a:R}),(V=Z[y])>-1){if(t(V=a(V))>0){y=V;continue}if(t(V=a(V))>0){y=V;continue}}else{let l=(c.indexOf(X[y])+1)%c.length;for(;d[c[l]]<b;)l=(l+1)%c.length;for(;d[c[l]]>=b;)p.push({ti:c[l],tj:c[l],a:0}),l=(l+1)%c.length;if(V=m[c[l]],p.push({ti:c[l],tj:X[V],a:s(c[l],X[V])}),t(y=a(V))>0)continue;if(t(y=n(V))>0)continue}}p.length&&(p.push(p[0]),h.push(p.map((l=>{let{ti:d,tj:b,a:Z}=l;return u(d,b,Z)}))))}return c.every((l=>d[l]>=b))&&h.unshift(Array.from(c).concat([c[0]]).map((l=>u(l,l,0)))),G(h)}}();Cd(d)&&b.thresholds(d);let Z=b(l);for(let l=uX(Z)-1;l>=1;l--){let d=Z[l-1],b=Jd(d,"coordinates",[]),c=uX(b),m=Z[l],X=Jd(m,"coordinates",[]),u=uX(X);if(c>0&&0===u){Z[l].sepZone="top",Z=cu(Z,l+1);break}}return Z}ah=yh({thousands:",",grouping:[3],currency:["$",""]}),nh=ah.format,hh=ah.formatPrefix;var gh=function(l){"number"!=typeof l&&(l=1e-10);var d={epsilon:function(d){return"number"==typeof d&&(l=d),l},pointAboveOrOnLine:function(d,b,Z){var c=b[0],m=b[1],X=Z[0],u=Z[1],G=d[0];return(X-c)*(d[1]-m)-(u-m)*(G-c)>=-l},pointBetween:function(d,b,Z){var c=d[1]-b[1],m=Z[0]-b[0],X=d[0]-b[0],u=Z[1]-b[1],G=X*m+c*u;return!(G<l)&&!(G-(m*m+u*u)>-l)},pointsSameX:function(d,b){return Math.abs(d[0]-b[0])<l},pointsSameY:function(d,b){return Math.abs(d[1]-b[1])<l},pointsSame:function(l,b){return d.pointsSameX(l,b)&&d.pointsSameY(l,b)},pointsCompare:function(l,b){return d.pointsSameX(l,b)?d.pointsSameY(l,b)?0:l[1]<b[1]?-1:1:l[0]<b[0]?-1:1},pointsCollinear:function(d,b,Z){var c=d[0]-b[0],m=d[1]-b[1],X=b[0]-Z[0],u=b[1]-Z[1];return Math.abs(c*u-X*m)<l},linesIntersect:function(d,b,Z,c){var m=b[0]-d[0],X=b[1]-d[1],u=c[0]-Z[0],G=c[1]-Z[1],W=m*G-X*u;if(Math.abs(W)<l)return!1;var t=d[0]-Z[0],s=d[1]-Z[1],a=(u*s-G*t)/W,n=(m*s-X*t)/W,h={alongA:0,alongB:0,pt:[d[0]+a*m,d[1]+a*X]};return h.alongA=a<=-l?-2:a<l?-1:a-1<=-l?0:a-1<l?1:2,h.alongB=n<=-l?-2:n<l?-1:n-1<=-l?0:n-1<l?1:2,h},pointInsideRegion:function(d,b){for(var Z=d[0],c=d[1],m=b[b.length-1][0],X=b[b.length-1][1],u=!1,G=0;G<b.length;G++){var W=b[G][0],t=b[G][1];t-c>l!=X-c>l&&(m-W)*(c-t)/(X-t)+W-Z>l&&(u=!u),m=W,X=t}return u}};return d},kh={create:function(){var l={root:{root:!0,next:null},exists:function(d){return null!==d&&d!==l.root},isEmpty:function(){return null===l.root.next},getHead:function(){return l.root.next},insertBefore:function(d,b){for(var Z=l.root,c=l.root.next;null!==c;){if(b(c))return d.prev=c.prev,d.next=c,c.prev.next=d,void(c.prev=d);Z=c,c=c.next}Z.next=d,d.prev=Z,d.next=null},findTransition:function(d){for(var b=l.root,Z=l.root.next;null!==Z&&!d(Z);)b=Z,Z=Z.next;return{before:b===l.root?null:b,after:Z,insert:function(l){return l.prev=b,l.next=Z,b.next=l,null!==Z&&(Z.prev=l),l}}}};return l},node:function(l){return l.prev=null,l.next=null,l.remove=function(){l.prev.next=l.next,l.next&&(l.next.prev=l.prev),l.prev=null,l.next=null},l}};var rh=function(l,d,b){function Z(l,d){return{id:b?b.segmentId():-1,start:l,end:d,myFill:{above:null,below:null},otherFill:null}}function c(l,d,Z){return{id:b?b.segmentId():-1,start:l,end:d,myFill:{above:Z.myFill.above,below:Z.myFill.below},otherFill:null}}var m=kh.create();function X(l,b){m.insertBefore(l,(function(Z){return function(l,b,Z,c,m,X){var u=d.pointsCompare(b,m);return 0!==u?u:d.pointsSame(Z,X)?0:l!==c?l?1:-1:d.pointAboveOrOnLine(Z,c?m:X,c?X:m)?1:-1}(l.isStart,l.pt,b,Z.isStart,Z.pt,Z.other.pt)<0}))}function u(l,d){var b=function(l,d){var b=kh.node({isStart:!0,pt:l.start,seg:l,primary:d,other:null,status:null});return X(b,l.end),b}(l,d);return function(l,d,b){var Z=kh.node({isStart:!1,pt:d.end,seg:d,primary:b,other:l,status:null});l.other=Z,X(Z,l.pt)}(b,l,d),b}function G(l,d){var Z=c(d,l.seg.end,l.seg);return function(l,d){b&&b.segmentChop(l.seg,d),l.other.remove(),l.seg.end=d,l.other.pt=d,X(l.other,l.pt)}(l,d),u(Z,l.primary)}function W(Z,c){var X=kh.create();function u(l){return X.findTransition((function(b){var Z,c,m,X,u,G;return(Z=l,c=b.ev,m=Z.seg.start,X=Z.seg.end,u=c.seg.start,G=c.seg.end,d.pointsCollinear(m,u,G)?d.pointsCollinear(X,u,G)||d.pointAboveOrOnLine(X,u,G)?1:-1:d.pointAboveOrOnLine(m,u,G)?1:-1)>0}))}function W(l,Z){var c=l.seg,m=Z.seg,X=c.start,u=c.end,W=m.start,t=m.end;b&&b.checkIntersection(c,m);var s=d.linesIntersect(X,u,W,t);if(!1===s){if(!d.pointsCollinear(X,u,W))return!1;if(d.pointsSame(X,t)||d.pointsSame(u,W))return!1;var a=d.pointsSame(X,W),n=d.pointsSame(u,t);if(a&&n)return Z;var h=!a&&d.pointBetween(X,W,t),i=!n&&d.pointBetween(u,W,t);if(a)return i?G(Z,u):G(l,t),Z;h&&(n||(i?G(Z,u):G(l,t)),G(Z,X))}else 0===s.alongA&&(-1===s.alongB?G(l,W):0===s.alongB?G(l,s.pt):1===s.alongB&&G(l,t)),0===s.alongB&&(-1===s.alongA?G(Z,X):0===s.alongA?G(Z,s.pt):1===s.alongA&&G(Z,u));return!1}for(var t=[];!m.isEmpty();){var s=m.getHead();if(b&&b.vert(s.pt[0]),s.isStart){b&&b.segmentNew(s.seg,s.primary);var a=u(s),n=a.before?a.before.ev:null,h=a.after?a.after.ev:null;function R(){if(n){var l=W(s,n);if(l)return l}return!!h&&W(s,h)}b&&b.tempStatus(s.seg,!!n&&n.seg,!!h&&h.seg);var i,p=R();if(p){var y;if(l)(y=null===s.seg.myFill.below||s.seg.myFill.above!==s.seg.myFill.below)&&(p.seg.myFill.above=!p.seg.myFill.above);else p.seg.otherFill=s.seg.myFill;b&&b.segmentUpdate(p.seg),s.other.remove(),s.remove()}if(m.getHead()!==s){b&&b.rewind(s.seg);continue}if(l)y=null===s.seg.myFill.below||s.seg.myFill.above!==s.seg.myFill.below,s.seg.myFill.below=h?h.seg.myFill.above:Z,s.seg.myFill.above=y?!s.seg.myFill.below:s.seg.myFill.below;else if(null===s.seg.otherFill)i=h?s.primary===h.primary?h.seg.otherFill.above:h.seg.myFill.above:s.primary?c:Z,s.seg.otherFill={above:i,below:i};b&&b.status(s.seg,!!n&&n.seg,!!h&&h.seg),s.other.status=a.insert(kh.node({ev:s}))}else{var V=s.status;if(null===V)throw new Error("PolyBool: Zero-length segment detected; your epsilon is probably too small or too large");if(X.exists(V.prev)&&X.exists(V.next)&&W(V.prev.ev,V.next.ev),b&&b.statusRemove(V.ev.seg),V.remove(),!s.primary){var o=s.seg.myFill;s.seg.myFill=s.seg.otherFill,s.seg.otherFill=o}t.push(s.seg)}m.getHead().remove()}return b&&b.done(),t}return l?{addRegion:function(l){for(var b,c=l[l.length-1],m=0;m<l.length;m++){b=c,c=l[m];var X=d.pointsCompare(b,c);0!==X&&u(Z(X<0?b:c,X<0?c:b),!0)}},calculate:function(l){return W(l,!1)}}:{calculate:function(l,d,b,Z){return l.forEach((function(l){u(c(l.start,l.end,l),!0)})),b.forEach((function(l){u(c(l.start,l.end,l),!1)})),W(d,Z)}}};var Nh=function(l,d,b){var Z=[],c=[];return l.forEach((function(l){var m=l.start,X=l.end;if(d.pointsSame(m,X))console.warn("PolyBool: Warning: Zero-length segment detected; your epsilon is probably too small or too large");else{b&&b.chainStart(l);for(var u={index:0,matches_head:!1,matches_pt1:!1},G={index:0,matches_head:!1,matches_pt1:!1},W=u,t=0;t<Z.length;t++){var s=(p=Z[t])[0];p[1];var a=p[p.length-1];if(p[p.length-2],d.pointsSame(s,m)){if(H(t,!0,!0))break}else if(d.pointsSame(s,X)){if(H(t,!0,!1))break}else if(d.pointsSame(a,m)){if(H(t,!1,!0))break}else if(d.pointsSame(a,X)&&H(t,!1,!1))break}if(W===u)return Z.push([m,X]),void(b&&b.chainNew(m,X));if(W===G){b&&b.chainMatch(u.index);var n=u.index,h=u.matches_pt1?X:m,i=u.matches_head,p=Z[n],y=i?p[0]:p[p.length-1],V=i?p[1]:p[p.length-2],o=i?p[p.length-1]:p[0],R=i?p[p.length-2]:p[1];return d.pointsCollinear(V,y,h)&&(i?(b&&b.chainRemoveHead(u.index,h),p.shift()):(b&&b.chainRemoveTail(u.index,h),p.pop()),y=V),d.pointsSame(o,h)?(Z.splice(n,1),d.pointsCollinear(R,o,y)&&(i?(b&&b.chainRemoveTail(u.index,y),p.pop()):(b&&b.chainRemoveHead(u.index,y),p.shift())),b&&b.chainClose(u.index),void c.push(p)):void(i?(b&&b.chainAddHead(u.index,h),p.unshift(h)):(b&&b.chainAddTail(u.index,h),p.push(h)))}var L=u.index,K=G.index;b&&b.chainConnect(L,K);var e=Z[L].length<Z[K].length;u.matches_head?G.matches_head?e?(x(L),S(L,K)):(x(K),S(K,L)):S(K,L):G.matches_head?S(L,K):e?(x(L),S(K,L)):(x(K),S(L,K))}function H(l,d,b){return W.index=l,W.matches_head=d,W.matches_pt1=b,W===u?(W=G,!1):(W=null,!0)}function x(l){b&&b.chainReverse(l),Z[l].reverse()}function S(l,c){var m=Z[l],X=Z[c],u=m[m.length-1],G=m[m.length-2],W=X[0],t=X[1];d.pointsCollinear(G,u,W)&&(b&&b.chainRemoveTail(l,u),m.pop(),u=G),d.pointsCollinear(u,W,t)&&(b&&b.chainRemoveHead(c,W),X.shift()),b&&b.chainJoin(l,c),Z[l]=m.concat(X),Z.splice(c,1)}})),c};function Ph(l,d,b){var Z=[];return l.forEach((function(l){var c=(l.myFill.above?8:0)+(l.myFill.below?4:0)+(l.otherFill&&l.otherFill.above?2:0)+(l.otherFill&&l.otherFill.below?1:0);0!==d[c]&&Z.push({id:b?b.segmentId():-1,start:l.start,end:l.end,myFill:{above:1===d[c],below:2===d[c]},otherFill:null})})),b&&b.selected(Z),Z}var wh,Bh={union:function(l,d){return Ph(l,[0,2,1,0,2,2,0,0,1,0,1,0,0,0,0,0],d)},intersect:function(l,d){return Ph(l,[0,0,0,0,0,2,0,2,0,0,1,1,0,2,1,0],d)},difference:function(l,d){return Ph(l,[0,0,0,0,2,0,2,0,1,1,0,0,0,1,2,0],d)},differenceRev:function(l,d){return Ph(l,[0,2,1,0,0,0,1,1,0,2,0,2,0,0,0,0],d)},xor:function(l,d){return Ph(l,[0,2,1,0,2,0,0,1,1,0,0,2,0,1,2,0],d)}},Uh={toPolygon:function(l,d){function b(d){if(d.length<=0)return l.segments({inverted:!1,regions:[]});function b(d){var b=d.slice(0,d.length-1);return l.segments({inverted:!1,regions:[b]})}for(var Z=b(d[0]),c=1;c<d.length;c++)Z=l.selectDifference(l.combine(Z,b(d[c])));return Z}if("Polygon"===d.type)return l.polygon(b(d.coordinates));if("MultiPolygon"===d.type){for(var Z=l.segments({inverted:!1,regions:[]}),c=0;c<d.coordinates.length;c++)Z=l.selectUnion(l.combine(Z,b(d.coordinates[c])));return l.polygon(Z)}throw new Error("PolyBool: Cannot convert GeoJSON object to PolyBool polygon")},fromPolygon:function(l,d,b){function Z(l,b){return d.pointInsideRegion([.5*(l[0][0]+l[1][0]),.5*(l[0][1]+l[1][1])],b)}function c(l){return{region:l,children:[]}}b=l.polygon(l.segments(b));var m=c(null);function X(l,d){for(var b=0;b<l.children.length;b++){if(Z(d,(u=l.children[b]).region))return void X(u,d)}var m=c(d);for(b=0;b<l.children.length;b++){var u;Z((u=l.children[b]).region,d)&&(m.children.push(u),l.children.splice(b,1),b--)}l.children.push(m)}for(var u=0;u<b.regions.length;u++){var G=b.regions[u];G.length<3||X(m,G)}function W(l,d){for(var b=0,Z=l[l.length-1][0],c=l[l.length-1][1],m=[],X=0;X<l.length;X++){var u=l[X][0],G=l[X][1];m.push([u,G]),b+=G*Z-u*c,Z=u,c=G}return b<0!==d&&m.reverse(),m.push([m[0][0],m[0][1]]),m}var t=[];function s(l){var d=[W(l.region,!1)];t.push(d);for(var b=0;b<l.children.length;b++)d.push(a(l.children[b]))}function a(l){for(var d=0;d<l.children.length;d++)s(l.children[d]);return W(l.region,!0)}for(u=0;u<m.children.length;u++)s(m.children[u]);return t.length<=0?{type:"Polygon",coordinates:[]}:1==t.length?{type:"Polygon",coordinates:t[0]}:{type:"MultiPolygon",coordinates:t}}},fh=function(){var l,d=0,b=!1;function Z(d,b){return l.list.push({type:d,data:b?JSON.parse(JSON.stringify(b)):void 0}),l}return l={list:[],segmentId:function(){return d++},checkIntersection:function(l,d){return Z("check",{seg1:l,seg2:d})},segmentChop:function(l,d){return Z("div_seg",{seg:l,pt:d}),Z("chop",{seg:l,pt:d})},statusRemove:function(l){return Z("pop_seg",{seg:l})},segmentUpdate:function(l){return Z("seg_update",{seg:l})},segmentNew:function(l,d){return Z("new_seg",{seg:l,primary:d})},segmentRemove:function(l){return Z("rem_seg",{seg:l})},tempStatus:function(l,d,b){return Z("temp_status",{seg:l,above:d,below:b})},rewind:function(l){return Z("rewind",{seg:l})},status:function(l,d,b){return Z("status",{seg:l,above:d,below:b})},vert:function(d){return d===b?l:(b=d,Z("vert",{x:d}))},log:function(l){return"string"!=typeof l&&(l=JSON.stringify(l,!1,"  ")),Z("log",{txt:l})},reset:function(){return Z("reset")},selected:function(l){return Z("selected",{segs:l})},chainStart:function(l){return Z("chain_start",{seg:l})},chainRemoveHead:function(l,d){return Z("chain_rem_head",{index:l,pt:d})},chainRemoveTail:function(l,d){return Z("chain_rem_tail",{index:l,pt:d})},chainNew:function(l,d){return Z("chain_new",{pt1:l,pt2:d})},chainMatch:function(l){return Z("chain_match",{index:l})},chainClose:function(l){return Z("chain_close",{index:l})},chainAddHead:function(l,d){return Z("chain_add_head",{index:l,pt:d})},chainAddTail:function(l,d){return Z("chain_add_tail",{index:l,pt:d})},chainConnect:function(l,d){return Z("chain_con",{index1:l,index2:d})},chainReverse:function(l){return Z("chain_rev",{index:l})},chainJoin:function(l,d){return Z("chain_join",{index1:l,index2:d})},done:function(){return Z("done")}}},jh=rh,Qh=Nh,Eh=Bh,Oh=Uh,Dh=!1,Ah=gh();function _h(l,d,b){var Z=wh.segments(l),c=wh.segments(d),m=b(wh.combine(Z,c));return wh.polygon(m)}wh={buildLog:function(l){return!0===l?Dh=fh():!1===l&&(Dh=!1),!1!==Dh&&Dh.list},epsilon:function(l){return Ah.epsilon(l)},segments:function(l){var d=jh(!0,Ah,Dh);return l.regions.forEach(d.addRegion),{segments:d.calculate(l.inverted),inverted:l.inverted}},combine:function(l,d){return{combined:jh(!1,Ah,Dh).calculate(l.segments,l.inverted,d.segments,d.inverted),inverted1:l.inverted,inverted2:d.inverted}},selectUnion:function(l){return{segments:Eh.union(l.combined,Dh),inverted:l.inverted1||l.inverted2}},selectIntersect:function(l){return{segments:Eh.intersect(l.combined,Dh),inverted:l.inverted1&&l.inverted2}},selectDifference:function(l){return{segments:Eh.difference(l.combined,Dh),inverted:l.inverted1&&!l.inverted2}},selectDifferenceRev:function(l){return{segments:Eh.differenceRev(l.combined,Dh),inverted:!l.inverted1&&l.inverted2}},selectXor:function(l){return{segments:Eh.xor(l.combined,Dh),inverted:l.inverted1!==l.inverted2}},polygon:function(l){return{regions:Qh(l.segments,Ah,Dh),inverted:l.inverted}},polygonFromGeoJSON:function(l){return Oh.toPolygon(wh,l)},polygonToGeoJSON:function(l){return Oh.fromPolygon(wh,Ah,l)},union:function(l,d){return _h(l,d,wh.selectUnion)},intersect:function(l,d){return _h(l,d,wh.selectIntersect)},difference:function(l,d){return _h(l,d,wh.selectDifference)},differenceRev:function(l,d){return _h(l,d,wh.selectDifferenceRev)},xor:function(l,d){return _h(l,d,wh.selectXor)}},"object"==typeof window&&(window.PolyBool=wh);var qh=wh,$h=Wt;var li=function(l){return(null==l?0:l.length)?$h(l,1):[]};function di(l){let d=GX(l);return 3===d?li(l):2===d?l:1===d?[l]:0===d?[]:l}var bi=1,Zi=2,ci=3,mi=4,Xi=5,ui=6378137,Gi=6356752.314,Wi=.0066943799901413165,ti=484813681109536e-20,si=Math.PI/2,ai=.16666666666666666,ni=.04722222222222222,hi=.022156084656084655,ii=1e-10,pi=.017453292519943295,yi=57.29577951308232,Vi=Math.PI/4,oi=2*Math.PI,Ri=3.14159265359,Li={greenwich:0,lisbon:-9.131906111111,paris:2.337229166667,bogota:-74.080916666667,madrid:-3.687938888889,rome:12.452333333333,bern:7.439583333333,jakarta:106.807719444444,ferro:-17.666666666667,brussels:4.367975,stockholm:18.058277777778,athens:23.7163375,oslo:10.722916666667},Ki={ft:{to_meter:.3048},"us-ft":{to_meter:1200/3937}},ei=/[\s_\-\/\(\)]/g;function Hi(l,d){if(l[d])return l[d];for(var b,Z=Object.keys(l),c=d.toLowerCase().replace(ei,""),m=-1;++m<Z.length;)if((b=Z[m]).toLowerCase().replace(ei,"")===c)return l[b]}function xi(l){var d,b,Z,c={},m=l.split("+").map((function(l){return l.trim()})).filter((function(l){return l})).reduce((function(l,d){var b=d.split("=");return b.push(!0),l[b[0].toLowerCase()]=b[1],l}),{}),X={proj:"projName",datum:"datumCode",rf:function(l){c.rf=parseFloat(l)},lat_0:function(l){c.lat0=l*pi},lat_1:function(l){c.lat1=l*pi},lat_2:function(l){c.lat2=l*pi},lat_ts:function(l){c.lat_ts=l*pi},lon_0:function(l){c.long0=l*pi},lon_1:function(l){c.long1=l*pi},lon_2:function(l){c.long2=l*pi},alpha:function(l){c.alpha=parseFloat(l)*pi},gamma:function(l){c.rectified_grid_angle=parseFloat(l)},lonc:function(l){c.longc=l*pi},x_0:function(l){c.x0=parseFloat(l)},y_0:function(l){c.y0=parseFloat(l)},k_0:function(l){c.k0=parseFloat(l)},k:function(l){c.k0=parseFloat(l)},a:function(l){c.a=parseFloat(l)},b:function(l){c.b=parseFloat(l)},r_a:function(){c.R_A=!0},zone:function(l){c.zone=parseInt(l,10)},south:function(){c.utmSouth=!0},towgs84:function(l){c.datum_params=l.split(",").map((function(l){return parseFloat(l)}))},to_meter:function(l){c.to_meter=parseFloat(l)},units:function(l){c.units=l;var d=Hi(Ki,l);d&&(c.to_meter=d.to_meter)},from_greenwich:function(l){c.from_greenwich=l*pi},pm:function(l){var d=Hi(Li,l);c.from_greenwich=(d||parseFloat(l))*pi},nadgrids:function(l){"@null"===l?c.datumCode="none":c.nadgrids=l},axis:function(l){var d="ewnsud";3===l.length&&-1!==d.indexOf(l.substr(0,1))&&-1!==d.indexOf(l.substr(1,1))&&-1!==d.indexOf(l.substr(2,1))&&(c.axis=l)},approx:function(){c.approx=!0}};for(d in m)b=m[d],d in X?"function"==typeof(Z=X[d])?Z(b):c[Z]=b:c[d]=b;return"string"==typeof c.datumCode&&"WGS84"!==c.datumCode&&(c.datumCode=c.datumCode.toLowerCase()),c}var Si=1,Yi=/\s/,Ji=/[A-Za-z]/,zi=/[A-Za-z84_]/,vi=/[,\]]/,Ti=/[\d\.E\-\+]/;function Mi(l){if("string"!=typeof l)throw new Error("not a string");this.text=l.trim(),this.level=0,this.place=0,this.root=null,this.stack=[],this.currentObject=null,this.state=Si}function Fi(l,d,b){Array.isArray(d)&&(b.unshift(d),d=null);var Z=d?{}:l,c=b.reduce((function(l,d){return Ci(d,l),l}),Z);d&&(l[d]=c)}function Ci(l,d){if(Array.isArray(l)){var b=l.shift();if("PARAMETER"===b&&(b=l.shift()),1===l.length)return Array.isArray(l[0])?(d[b]={},void Ci(l[0],d[b])):void(d[b]=l[0]);if(l.length)if("TOWGS84"!==b){if("AXIS"===b)return b in d||(d[b]=[]),void d[b].push(l);var Z;switch(Array.isArray(b)||(d[b]={}),b){case"UNIT":case"PRIMEM":case"VERT_DATUM":return d[b]={name:l[0].toLowerCase(),convert:l[1]},void(3===l.length&&Ci(l[2],d[b]));case"SPHEROID":case"ELLIPSOID":return d[b]={name:l[0],a:l[1],rf:l[2]},void(4===l.length&&Ci(l[3],d[b]));case"PROJECTEDCRS":case"PROJCRS":case"GEOGCS":case"GEOCCS":case"PROJCS":case"LOCAL_CS":case"GEODCRS":case"GEODETICCRS":case"GEODETICDATUM":case"EDATUM":case"ENGINEERINGDATUM":case"VERT_CS":case"VERTCRS":case"VERTICALCRS":case"COMPD_CS":case"COMPOUNDCRS":case"ENGINEERINGCRS":case"ENGCRS":case"FITTED_CS":case"LOCAL_DATUM":case"DATUM":return l[0]=["name",l[0]],void Fi(d,b,l);default:for(Z=-1;++Z<l.length;)if(!Array.isArray(l[Z]))return Ci(l,d[b]);return Fi(d,b,l)}}else d[b]=l;else d[b]=!0}else d[l]=!0}Mi.prototype.readCharicter=function(){var l=this.text[this.place++];if(4!==this.state)for(;Yi.test(l);){if(this.place>=this.text.length)return;l=this.text[this.place++]}switch(this.state){case Si:return this.neutral(l);case 2:return this.keyword(l);case 4:return this.quoted(l);case 5:return this.afterquote(l);case 3:return this.number(l);case-1:return}},Mi.prototype.afterquote=function(l){if('"'===l)return this.word+='"',void(this.state=4);if(vi.test(l))return this.word=this.word.trim(),void this.afterItem(l);throw new Error("havn't handled \""+l+'" in afterquote yet, index '+this.place)},Mi.prototype.afterItem=function(l){return","===l?(null!==this.word&&this.currentObject.push(this.word),this.word=null,void(this.state=Si)):"]"===l?(this.level--,null!==this.word&&(this.currentObject.push(this.word),this.word=null),this.state=Si,this.currentObject=this.stack.pop(),void(this.currentObject||(this.state=-1))):void 0},Mi.prototype.number=function(l){if(!Ti.test(l)){if(vi.test(l))return this.word=parseFloat(this.word),void this.afterItem(l);throw new Error("havn't handled \""+l+'" in number yet, index '+this.place)}this.word+=l},Mi.prototype.quoted=function(l){'"'!==l?this.word+=l:this.state=5},Mi.prototype.keyword=function(l){if(zi.test(l))this.word+=l;else{if("["===l){var d=[];return d.push(this.word),this.level++,null===this.root?this.root=d:this.currentObject.push(d),this.stack.push(this.currentObject),this.currentObject=d,void(this.state=Si)}if(!vi.test(l))throw new Error("havn't handled \""+l+'" in keyword yet, index '+this.place);this.afterItem(l)}},Mi.prototype.neutral=function(l){if(Ji.test(l))return this.word=l,void(this.state=2);if('"'===l)return this.word="",void(this.state=4);if(Ti.test(l))return this.word=l,void(this.state=3);if(!vi.test(l))throw new Error("havn't handled \""+l+'" in neutral yet, index '+this.place);this.afterItem(l)},Mi.prototype.output=function(){for(;this.place<this.text.length;)this.readCharicter();if(-1===this.state)return this.root;throw new Error('unable to parse string "'+this.text+'". State is '+this.state)};var Ii=.017453292519943295;function gi(l){return l*Ii}function ki(l){var d=new Mi(l).output(),b=d.shift(),Z=d.shift();d.unshift(["name",Z]),d.unshift(["type",b]);var c={};return Ci(d,c),function(l){if("GEOGCS"===l.type?l.projName="longlat":"LOCAL_CS"===l.type?(l.projName="identity",l.local=!0):"object"==typeof l.PROJECTION?l.projName=Object.keys(l.PROJECTION)[0]:l.projName=l.PROJECTION,l.AXIS){for(var d="",b=0,Z=l.AXIS.length;b<Z;++b){var c=[l.AXIS[b][0].toLowerCase(),l.AXIS[b][1].toLowerCase()];-1!==c[0].indexOf("north")||("y"===c[0]||"lat"===c[0])&&"north"===c[1]?d+="n":-1!==c[0].indexOf("south")||("y"===c[0]||"lat"===c[0])&&"south"===c[1]?d+="s":-1!==c[0].indexOf("east")||("x"===c[0]||"lon"===c[0])&&"east"===c[1]?d+="e":-1===c[0].indexOf("west")&&("x"!==c[0]&&"lon"!==c[0]||"west"!==c[1])||(d+="w")}2===d.length&&(d+="u"),3===d.length&&(l.axis=d)}l.UNIT&&(l.units=l.UNIT.name.toLowerCase(),"metre"===l.units&&(l.units="meter"),l.UNIT.convert&&("GEOGCS"===l.type?l.DATUM&&l.DATUM.SPHEROID&&(l.to_meter=l.UNIT.convert*l.DATUM.SPHEROID.a):l.to_meter=l.UNIT.convert));var m=l.GEOGCS;function X(d){return d*(l.to_meter||1)}"GEOGCS"===l.type&&(m=l),m&&(m.DATUM?l.datumCode=m.DATUM.name.toLowerCase():l.datumCode=m.name.toLowerCase(),"d_"===l.datumCode.slice(0,2)&&(l.datumCode=l.datumCode.slice(2)),"new_zealand_geodetic_datum_1949"!==l.datumCode&&"new_zealand_1949"!==l.datumCode||(l.datumCode="nzgd49"),"wgs_1984"!==l.datumCode&&"world_geodetic_system_1984"!==l.datumCode||("Mercator_Auxiliary_Sphere"===l.PROJECTION&&(l.sphere=!0),l.datumCode="wgs84"),"_ferro"===l.datumCode.slice(-6)&&(l.datumCode=l.datumCode.slice(0,-6)),"_jakarta"===l.datumCode.slice(-8)&&(l.datumCode=l.datumCode.slice(0,-8)),~l.datumCode.indexOf("belge")&&(l.datumCode="rnb72"),m.DATUM&&m.DATUM.SPHEROID&&(l.ellps=m.DATUM.SPHEROID.name.replace("_19","").replace(/[Cc]larke\_18/,"clrk"),"international"===l.ellps.toLowerCase().slice(0,13)&&(l.ellps="intl"),l.a=m.DATUM.SPHEROID.a,l.rf=parseFloat(m.DATUM.SPHEROID.rf,10)),m.DATUM&&m.DATUM.TOWGS84&&(l.datum_params=m.DATUM.TOWGS84),~l.datumCode.indexOf("osgb_1936")&&(l.datumCode="osgb36"),~l.datumCode.indexOf("osni_1952")&&(l.datumCode="osni52"),(~l.datumCode.indexOf("tm65")||~l.datumCode.indexOf("geodetic_datum_of_1965"))&&(l.datumCode="ire65"),"ch1903+"===l.datumCode&&(l.datumCode="ch1903"),~l.datumCode.indexOf("israel")&&(l.datumCode="isr93")),l.b&&!isFinite(l.b)&&(l.b=l.a),[["standard_parallel_1","Standard_Parallel_1"],["standard_parallel_1","Latitude of 1st standard parallel"],["standard_parallel_2","Standard_Parallel_2"],["standard_parallel_2","Latitude of 2nd standard parallel"],["false_easting","False_Easting"],["false_easting","False easting"],["false-easting","Easting at false origin"],["false_northing","False_Northing"],["false_northing","False northing"],["false_northing","Northing at false origin"],["central_meridian","Central_Meridian"],["central_meridian","Longitude of natural origin"],["central_meridian","Longitude of false origin"],["latitude_of_origin","Latitude_Of_Origin"],["latitude_of_origin","Central_Parallel"],["latitude_of_origin","Latitude of natural origin"],["latitude_of_origin","Latitude of false origin"],["scale_factor","Scale_Factor"],["k0","scale_factor"],["latitude_of_center","Latitude_Of_Center"],["latitude_of_center","Latitude_of_center"],["lat0","latitude_of_center",gi],["longitude_of_center","Longitude_Of_Center"],["longitude_of_center","Longitude_of_center"],["longc","longitude_of_center",gi],["x0","false_easting",X],["y0","false_northing",X],["long0","central_meridian",gi],["lat0","latitude_of_origin",gi],["lat0","standard_parallel_1",gi],["lat1","standard_parallel_1",gi],["lat2","standard_parallel_2",gi],["azimuth","Azimuth"],["alpha","azimuth",gi],["srsCode","name"]].forEach((function(d){return function(l,d){var b=d[0],Z=d[1];!(b in l)&&Z in l&&(l[b]=l[Z],3===d.length&&(l[b]=d[2](l[b])))}(l,d)})),l.long0||!l.longc||"Albers_Conic_Equal_Area"!==l.projName&&"Lambert_Azimuthal_Equal_Area"!==l.projName||(l.long0=l.longc),l.lat_ts||!l.lat1||"Stereographic_South_Pole"!==l.projName&&"Polar Stereographic (variant B)"!==l.projName||(l.lat0=gi(l.lat1>0?90:-90),l.lat_ts=l.lat1)}(c),c}function ri(l){var d=this;if(2===arguments.length){var b=arguments[1];"string"==typeof b?"+"===b.charAt(0)?ri[l]=xi(arguments[1]):ri[l]=ki(arguments[1]):ri[l]=b}else if(1===arguments.length){if(Array.isArray(l))return l.map((function(l){Array.isArray(l)?ri.apply(d,l):ri(l)}));if("string"==typeof l){if(l in ri)return ri[l]}else"EPSG"in l?ri["EPSG:"+l.EPSG]=l:"ESRI"in l?ri["ESRI:"+l.ESRI]=l:"IAU2000"in l?ri["IAU2000:"+l.IAU2000]=l:console.log(l);return}}!function(l){l("EPSG:4326","+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees"),l("EPSG:4269","+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees"),l("EPSG:3857","+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"),l.WGS84=l["EPSG:4326"],l["EPSG:3785"]=l["EPSG:3857"],l.GOOGLE=l["EPSG:3857"],l["EPSG:900913"]=l["EPSG:3857"],l["EPSG:102113"]=l["EPSG:3857"]}(ri);var Ni=["PROJECTEDCRS","PROJCRS","GEOGCS","GEOCCS","PROJCS","LOCAL_CS","GEODCRS","GEODETICCRS","GEODETICDATUM","ENGCRS","ENGINEERINGCRS"];var Pi=["3857","900913","3785","102113"];function wi(l){if(!function(l){return"string"==typeof l}(l))return l;if(function(l){return l in ri}(l))return ri[l];if(function(l){return Ni.some((function(d){return l.indexOf(d)>-1}))}(l)){var d=ki(l);if(function(l){var d=Hi(l,"authority");if(d){var b=Hi(d,"epsg");return b&&Pi.indexOf(b)>-1}}(d))return ri["EPSG:3857"];var b=function(l){var d=Hi(l,"extension");if(d)return Hi(d,"proj4")}(d);return b?xi(b):d}return function(l){return"+"===l[0]}(l)?xi(l):void 0}function Bi(l,d){var b,Z;if(l=l||{},!d)return l;for(Z in d)void 0!==(b=d[Z])&&(l[Z]=b);return l}function Ui(l,d,b){var Z=l*d;return b/Math.sqrt(1-Z*Z)}function fi(l){return l<0?-1:1}function ji(l){return Math.abs(l)<=Ri?l:l-fi(l)*oi}function Qi(l,d,b){var Z=l*b,c=.5*l;return Z=Math.pow((1-Z)/(1+Z),c),Math.tan(.5*(si-d))/Z}function Ei(l,d){for(var b,Z,c=.5*l,m=si-2*Math.atan(d),X=0;X<=15;X++)if(b=l*Math.sin(m),m+=Z=si-2*Math.atan(d*Math.pow((1-b)/(1+b),c))-m,Math.abs(Z)<=1e-10)return m;return-9999}function Oi(l){return l}var Di=[{init:function(){var l=this.b/this.a;this.es=1-l*l,"x0"in this||(this.x0=0),"y0"in this||(this.y0=0),this.e=Math.sqrt(this.es),this.lat_ts?this.sphere?this.k0=Math.cos(this.lat_ts):this.k0=Ui(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts)):this.k0||(this.k?this.k0=this.k:this.k0=1)},forward:function(l){var d,b,Z=l.x,c=l.y;if(c*yi>90&&c*yi<-90&&Z*yi>180&&Z*yi<-180)return null;if(Math.abs(Math.abs(c)-si)<=ii)return null;if(this.sphere)d=this.x0+this.a*this.k0*ji(Z-this.long0),b=this.y0+this.a*this.k0*Math.log(Math.tan(Vi+.5*c));else{var m=Math.sin(c),X=Qi(this.e,c,m);d=this.x0+this.a*this.k0*ji(Z-this.long0),b=this.y0-this.a*this.k0*Math.log(X)}return l.x=d,l.y=b,l},inverse:function(l){var d,b,Z=l.x-this.x0,c=l.y-this.y0;if(this.sphere)b=si-2*Math.atan(Math.exp(-c/(this.a*this.k0)));else{var m=Math.exp(-c/(this.a*this.k0));if(-9999===(b=Ei(this.e,m)))return null}return d=ji(this.long0+Z/(this.a*this.k0)),l.x=d,l.y=b,l},names:["Mercator","Popular Visualisation Pseudo Mercator","Mercator_1SP","Mercator_Auxiliary_Sphere","merc"]},{init:function(){},forward:Oi,inverse:Oi,names:["longlat","identity"]}],Ai={},_i=[];function qi(l,d){var b=_i.length;return l.names?(_i[b]=l,l.names.forEach((function(l){Ai[l.toLowerCase()]=b})),this):(console.log(d),!0)}var $i={start:function(){Di.forEach(qi)},add:qi,get:function(l){if(!l)return!1;var d=l.toLowerCase();return void 0!==Ai[d]&&_i[Ai[d]]?_i[Ai[d]]:void 0}},lp={MERIT:{a:6378137,rf:298.257,ellipseName:"MERIT 1983"},SGS85:{a:6378136,rf:298.257,ellipseName:"Soviet Geodetic System 85"},GRS80:{a:6378137,rf:298.257222101,ellipseName:"GRS 1980(IUGG, 1980)"},IAU76:{a:6378140,rf:298.257,ellipseName:"IAU 1976"},airy:{a:6377563.396,b:6356256.91,ellipseName:"Airy 1830"},APL4:{a:6378137,rf:298.25,ellipseName:"Appl. Physics. 1965"},NWL9D:{a:6378145,rf:298.25,ellipseName:"Naval Weapons Lab., 1965"},mod_airy:{a:6377340.189,b:6356034.446,ellipseName:"Modified Airy"},andrae:{a:6377104.43,rf:300,ellipseName:"Andrae 1876 (Den., Iclnd.)"},aust_SA:{a:6378160,rf:298.25,ellipseName:"Australian Natl & S. Amer. 1969"},GRS67:{a:6378160,rf:298.247167427,ellipseName:"GRS 67(IUGG 1967)"},bessel:{a:6377397.155,rf:299.1528128,ellipseName:"Bessel 1841"},bess_nam:{a:6377483.865,rf:299.1528128,ellipseName:"Bessel 1841 (Namibia)"},clrk66:{a:6378206.4,b:6356583.8,ellipseName:"Clarke 1866"},clrk80:{a:6378249.145,rf:293.4663,ellipseName:"Clarke 1880 mod."},clrk80ign:{a:6378249.2,b:6356515,rf:293.4660213,ellipseName:"Clarke 1880 (IGN)"},clrk58:{a:6378293.645208759,rf:294.2606763692654,ellipseName:"Clarke 1858"},CPM:{a:6375738.7,rf:334.29,ellipseName:"Comm. des Poids et Mesures 1799"},delmbr:{a:6376428,rf:311.5,ellipseName:"Delambre 1810 (Belgium)"},engelis:{a:6378136.05,rf:298.2566,ellipseName:"Engelis 1985"},evrst30:{a:6377276.345,rf:300.8017,ellipseName:"Everest 1830"},evrst48:{a:6377304.063,rf:300.8017,ellipseName:"Everest 1948"},evrst56:{a:6377301.243,rf:300.8017,ellipseName:"Everest 1956"},evrst69:{a:6377295.664,rf:300.8017,ellipseName:"Everest 1969"},evrstSS:{a:6377298.556,rf:300.8017,ellipseName:"Everest (Sabah & Sarawak)"},fschr60:{a:6378166,rf:298.3,ellipseName:"Fischer (Mercury Datum) 1960"},fschr60m:{a:6378155,rf:298.3,ellipseName:"Fischer 1960"},fschr68:{a:6378150,rf:298.3,ellipseName:"Fischer 1968"},helmert:{a:6378200,rf:298.3,ellipseName:"Helmert 1906"},hough:{a:6378270,rf:297,ellipseName:"Hough"},intl:{a:6378388,rf:297,ellipseName:"International 1909 (Hayford)"},kaula:{a:6378163,rf:298.24,ellipseName:"Kaula 1961"},lerch:{a:6378139,rf:298.257,ellipseName:"Lerch 1979"},mprts:{a:6397300,rf:191,ellipseName:"Maupertius 1738"},new_intl:{a:6378157.5,b:6356772.2,ellipseName:"New International 1967"},plessis:{a:6376523,rf:6355863,ellipseName:"Plessis 1817 (France)"},krass:{a:6378245,rf:298.3,ellipseName:"Krassovsky, 1942"},SEasia:{a:6378155,b:6356773.3205,ellipseName:"Southeast Asia"},walbeck:{a:6376896,b:6355834.8467,ellipseName:"Walbeck"},WGS60:{a:6378165,rf:298.3,ellipseName:"WGS 60"},WGS66:{a:6378145,rf:298.25,ellipseName:"WGS 66"},WGS7:{a:6378135,rf:298.26,ellipseName:"WGS 72"}},dp=lp.WGS84={a:6378137,rf:298.257223563,ellipseName:"WGS 84"};lp.sphere={a:6370997,b:6370997,ellipseName:"Normal Sphere (r=6370997)"};var bp={};bp.wgs84={towgs84:"0,0,0",ellipse:"WGS84",datumName:"WGS84"},bp.ch1903={towgs84:"674.374,15.056,405.346",ellipse:"bessel",datumName:"swiss"},bp.ggrs87={towgs84:"-199.87,74.79,246.62",ellipse:"GRS80",datumName:"Greek_Geodetic_Reference_System_1987"},bp.nad83={towgs84:"0,0,0",ellipse:"GRS80",datumName:"North_American_Datum_1983"},bp.nad27={nadgrids:"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",ellipse:"clrk66",datumName:"North_American_Datum_1927"},bp.potsdam={towgs84:"598.1,73.7,418.2,0.202,0.045,-2.455,6.7",ellipse:"bessel",datumName:"Potsdam Rauenberg 1950 DHDN"},bp.carthage={towgs84:"-263.0,6.0,431.0",ellipse:"clark80",datumName:"Carthage 1934 Tunisia"},bp.hermannskogel={towgs84:"577.326,90.129,463.919,5.137,1.474,5.297,2.4232",ellipse:"bessel",datumName:"Hermannskogel"},bp.osni52={towgs84:"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",ellipse:"airy",datumName:"Irish National"},bp.ire65={towgs84:"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",ellipse:"mod_airy",datumName:"Ireland 1965"},bp.rassadiran={towgs84:"-133.63,-157.5,-158.62",ellipse:"intl",datumName:"Rassadiran"},bp.nzgd49={towgs84:"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",ellipse:"intl",datumName:"New Zealand Geodetic Datum 1949"},bp.osgb36={towgs84:"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",ellipse:"airy",datumName:"Airy 1830"},bp.s_jtsk={towgs84:"589,76,480",ellipse:"bessel",datumName:"S-JTSK (Ferro)"},bp.beduaram={towgs84:"-106,-87,188",ellipse:"clrk80",datumName:"Beduaram"},bp.gunung_segara={towgs84:"-403,684,41",ellipse:"bessel",datumName:"Gunung Segara Jakarta"},bp.rnb72={towgs84:"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1",ellipse:"intl",datumName:"Reseau National Belge 1972"};var Zp={};function cp(l){if(0===l.length)return null;var d="@"===l[0];return d&&(l=l.slice(1)),"null"===l?{name:"null",mandatory:!d,grid:null,isNull:!0}:{name:l,mandatory:!d,grid:Zp[l]||null,isNull:!1}}function mp(l){return l/3600*Math.PI/180}function Xp(l,d,b){return String.fromCharCode.apply(null,new Uint8Array(l.buffer.slice(d,b)))}function up(l){return l.map((function(l){return[mp(l.longitudeShift),mp(l.latitudeShift)]}))}function Gp(l,d,b){return{name:Xp(l,d+8,d+16).trim(),parent:Xp(l,d+24,d+24+8).trim(),lowerLatitude:l.getFloat64(d+72,b),upperLatitude:l.getFloat64(d+88,b),lowerLongitude:l.getFloat64(d+104,b),upperLongitude:l.getFloat64(d+120,b),latitudeInterval:l.getFloat64(d+136,b),longitudeInterval:l.getFloat64(d+152,b),gridNodeCount:l.getInt32(d+168,b)}}function Wp(l,d,b,Z){for(var c=d+176,m=[],X=0;X<b.gridNodeCount;X++){var u={latitudeShift:l.getFloat32(c+16*X,Z),longitudeShift:l.getFloat32(c+16*X+4,Z),latitudeAccuracy:l.getFloat32(c+16*X+8,Z),longitudeAccuracy:l.getFloat32(c+16*X+12,Z)};m.push(u)}return m}function tp(l,d){if(!(this instanceof tp))return new tp(l);d=d||function(l){if(l)throw l};var b=wi(l);if("object"==typeof b){var Z=tp.projections.get(b.projName);if(Z){if(b.datumCode&&"none"!==b.datumCode){var c=Hi(bp,b.datumCode);c&&(b.datum_params=b.datum_params||(c.towgs84?c.towgs84.split(","):null),b.ellps=c.ellipse,b.datumName=c.datumName?c.datumName:b.datumCode)}b.k0=b.k0||1,b.axis=b.axis||"enu",b.ellps=b.ellps||"wgs84",b.lat1=b.lat1||b.lat0;var m,X,u,G,W,t,s,a=function(l,d,b,Z,c){if(!l){var m=Hi(lp,Z);m||(m=dp),l=m.a,d=m.b,b=m.rf}return b&&!d&&(d=(1-1/b)*l),(0===b||Math.abs(l-d)<ii)&&(c=!0,d=l),{a:l,b:d,rf:b,sphere:c}}(b.a,b.b,b.rf,b.ellps,b.sphere),n=(m=a.a,X=a.b,a.rf,u=b.R_A,t=((G=m*m)-(W=X*X))/G,s=0,u?(G=(m*=1-t*(ai+t*(ni+t*hi)))*m,t=0):s=Math.sqrt(t),{es:t,e:s,ep2:(G-W)/W}),h=function(l){return void 0===l?null:l.split(",").map(cp)}(b.nadgrids),i=b.datum||function(l,d,b,Z,c,m,X){var u={};return u.datum_type=void 0===l||"none"===l?Xi:mi,d&&(u.datum_params=d.map(parseFloat),0===u.datum_params[0]&&0===u.datum_params[1]&&0===u.datum_params[2]||(u.datum_type=bi),u.datum_params.length>3&&(0===u.datum_params[3]&&0===u.datum_params[4]&&0===u.datum_params[5]&&0===u.datum_params[6]||(u.datum_type=Zi,u.datum_params[3]*=ti,u.datum_params[4]*=ti,u.datum_params[5]*=ti,u.datum_params[6]=u.datum_params[6]/1e6+1))),X&&(u.datum_type=ci,u.grids=X),u.a=b,u.b=Z,u.es=c,u.ep2=m,u}(b.datumCode,b.datum_params,a.a,a.b,n.es,n.ep2,h);Bi(this,b),Bi(this,Z),this.a=a.a,this.b=a.b,this.rf=a.rf,this.sphere=a.sphere,this.es=n.es,this.e=n.e,this.ep2=n.ep2,this.datum=i,this.init(),d(null,this)}else d(l)}else d(l)}function sp(l,d,b){var Z,c,m,X,u=l.x,G=l.y,W=l.z?l.z:0;if(G<-si&&G>-1.001*si)G=-si;else if(G>si&&G<1.001*si)G=si;else{if(G<-si)return{x:-1/0,y:-1/0,z:l.z};if(G>si)return{x:1/0,y:1/0,z:l.z}}return u>Math.PI&&(u-=2*Math.PI),c=Math.sin(G),X=Math.cos(G),m=c*c,{x:((Z=b/Math.sqrt(1-d*m))+W)*X*Math.cos(u),y:(Z+W)*X*Math.sin(u),z:(Z*(1-d)+W)*c}}function ap(l,d,b,Z){var c,m,X,u,G,W,t,s,a,n,h,i,p,y,V,o=1e-12,R=l.x,L=l.y,K=l.z?l.z:0;if(c=Math.sqrt(R*R+L*L),m=Math.sqrt(R*R+L*L+K*K),c/b<o){if(y=0,m/b<o)return si,V=-Z,{x:l.x,y:l.y,z:l.z}}else y=Math.atan2(L,R);X=K/m,s=(u=c/m)*(1-d)*(G=1/Math.sqrt(1-d*(2-d)*u*u)),a=X*G,p=0;do{p++,W=d*(t=b/Math.sqrt(1-d*a*a))/(t+(V=c*s+K*a-t*(1-d*a*a))),i=(h=X*(G=1/Math.sqrt(1-W*(2-W)*u*u)))*s-(n=u*(1-W)*G)*a,s=n,a=h}while(i*i>1e-24&&p<30);return{x:y,y:Math.atan(h/Math.abs(n)),z:V}}function np(l){return l===bi||l===Zi}function hp(l,d,b){if(function(l,d){return l.datum_type===d.datum_type&&!(l.a!==d.a||Math.abs(l.es-d.es)>5e-11)&&(l.datum_type===bi?l.datum_params[0]===d.datum_params[0]&&l.datum_params[1]===d.datum_params[1]&&l.datum_params[2]===d.datum_params[2]:l.datum_type!==Zi||l.datum_params[0]===d.datum_params[0]&&l.datum_params[1]===d.datum_params[1]&&l.datum_params[2]===d.datum_params[2]&&l.datum_params[3]===d.datum_params[3]&&l.datum_params[4]===d.datum_params[4]&&l.datum_params[5]===d.datum_params[5]&&l.datum_params[6]===d.datum_params[6])}(l,d))return b;if(l.datum_type===Xi||d.datum_type===Xi)return b;var Z=l.a,c=l.es;if(l.datum_type===ci){if(0!==ip(l,!1,b))return;Z=ui,c=Wi}var m=d.a,X=d.b,u=d.es;if(d.datum_type===ci&&(m=ui,X=Gi,u=Wi),c===u&&Z===m&&!np(l.datum_type)&&!np(d.datum_type))return b;if((b=sp(b,c,Z),np(l.datum_type)&&(b=function(l,d,b){if(d===bi)return{x:l.x+b[0],y:l.y+b[1],z:l.z+b[2]};if(d===Zi){var Z=b[0],c=b[1],m=b[2],X=b[3],u=b[4],G=b[5],W=b[6];return{x:W*(l.x-G*l.y+u*l.z)+Z,y:W*(G*l.x+l.y-X*l.z)+c,z:W*(-u*l.x+X*l.y+l.z)+m}}}(b,l.datum_type,l.datum_params)),np(d.datum_type)&&(b=function(l,d,b){if(d===bi)return{x:l.x-b[0],y:l.y-b[1],z:l.z-b[2]};if(d===Zi){var Z=b[0],c=b[1],m=b[2],X=b[3],u=b[4],G=b[5],W=b[6],t=(l.x-Z)/W,s=(l.y-c)/W,a=(l.z-m)/W;return{x:t+G*s-u*a,y:-G*t+s+X*a,z:u*t-X*s+a}}}(b,d.datum_type,d.datum_params)),b=ap(b,u,m,X),d.datum_type===ci)&&0!==ip(d,!0,b))return;return b}function ip(l,d,b){if(null===l.grids||0===l.grids.length)return console.log("Grid shift grids not found"),-1;for(var Z={x:-b.x,y:b.y},c={x:Number.NaN,y:Number.NaN},m=[],X=0;X<l.grids.length;X++){var u=l.grids[X];if(m.push(u.name),u.isNull){c=Z;break}if(u.mandatory,null!==u.grid){var G=u.grid.subgrids[0],W=(Math.abs(G.del[1])+Math.abs(G.del[0]))/1e4,t=G.ll[0]-W,s=G.ll[1]-W,a=G.ll[0]+(G.lim[0]-1)*G.del[0]+W,n=G.ll[1]+(G.lim[1]-1)*G.del[1]+W;if(!(s>Z.y||t>Z.x||n<Z.y||a<Z.x||(c=pp(Z,d,G),isNaN(c.x))))break}else if(u.mandatory)return console.log("Unable to find mandatory grid '"+u.name+"'"),-1}return isNaN(c.x)?(console.log("Failed to find a grid shift table for location '"+-Z.x*yi+" "+Z.y*yi+" tried: '"+m+"'"),-1):(b.x=-c.x,b.y=c.y,0)}function pp(l,d,b){var Z={x:Number.NaN,y:Number.NaN};if(isNaN(l.x))return Z;var c={x:l.x,y:l.y};c.x-=b.ll[0],c.y-=b.ll[1],c.x=ji(c.x-Math.PI)+Math.PI;var m=yp(c,b);if(d){if(isNaN(m.x))return Z;m.x=c.x-m.x,m.y=c.y-m.y;var X,u,G=9;do{if(u=yp(m,b),isNaN(u.x)){console.log("Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.");break}X={x:c.x-(u.x+m.x),y:c.y-(u.y+m.y)},m.x+=X.x,m.y+=X.y}while(G--&&Math.abs(X.x)>1e-12&&Math.abs(X.y)>1e-12);if(G<0)return console.log("Inverse grid shift iterator failed to converge."),Z;Z.x=ji(m.x+b.ll[0]),Z.y=m.y+b.ll[1]}else isNaN(m.x)||(Z.x=l.x+m.x,Z.y=l.y+m.y);return Z}function yp(l,d){var b,Z={x:l.x/d.del[0],y:l.y/d.del[1]},c=Math.floor(Z.x),m=Math.floor(Z.y),X=Z.x-1*c,u=Z.y-1*m,G={x:Number.NaN,y:Number.NaN};if(c<0||c>=d.lim[0])return G;if(m<0||m>=d.lim[1])return G;b=m*d.lim[0]+c;var W=d.cvs[b][0],t=d.cvs[b][1];b++;var s=d.cvs[b][0],a=d.cvs[b][1];b+=d.lim[0];var n=d.cvs[b][0],h=d.cvs[b][1];b--;var i=d.cvs[b][0],p=d.cvs[b][1],y=X*u,V=X*(1-u),o=(1-X)*(1-u),R=(1-X)*u;return G.x=o*W+V*s+R*i+y*n,G.y=o*t+V*a+R*p+y*h,G}function Vp(l,d,b){var Z,c,m,X=b.x,u=b.y,G=b.z||0,W={};for(m=0;m<3;m++)if(!d||2!==m||void 0!==b.z)switch(0===m?(Z=X,c=-1!=="ew".indexOf(l.axis[m])?"x":"y"):1===m?(Z=u,c=-1!=="ns".indexOf(l.axis[m])?"y":"x"):(Z=G,c="z"),l.axis[m]){case"e":case"n":W[c]=Z;break;case"w":case"s":W[c]=-Z;break;case"u":void 0!==b[c]&&(W.z=Z);break;case"d":void 0!==b[c]&&(W.z=-Z);break;default:return null}return W}function op(l){var d={x:l[0],y:l[1]};return l.length>2&&(d.z=l[2]),l.length>3&&(d.m=l[3]),d}function Rp(l){if("function"==typeof Number.isFinite){if(Number.isFinite(l))return;throw new TypeError("coordinates must be finite numbers")}if("number"!=typeof l||l!=l||!isFinite(l))throw new TypeError("coordinates must be finite numbers")}function Lp(l,d,b,Z){var c,m=void 0!==(b=Array.isArray(b)?op(b):{x:b.x,y:b.y,z:b.z,m:b.m}).z;if(function(l){Rp(l.x),Rp(l.y)}(b),l.datum&&d.datum&&function(l,d){return(l.datum.datum_type===bi||l.datum.datum_type===Zi||l.datum.datum_type===ci)&&"WGS84"!==d.datumCode||(d.datum.datum_type===bi||d.datum.datum_type===Zi||d.datum.datum_type===ci)&&"WGS84"!==l.datumCode}(l,d)&&(b=Lp(l,c=new tp("WGS84"),b,Z),l=c),Z&&"enu"!==l.axis&&(b=Vp(l,!1,b)),"longlat"===l.projName)b={x:b.x*pi,y:b.y*pi,z:b.z||0};else if(l.to_meter&&(b={x:b.x*l.to_meter,y:b.y*l.to_meter,z:b.z||0}),!(b=l.inverse(b)))return;if(l.from_greenwich&&(b.x+=l.from_greenwich),b=hp(l.datum,d.datum,b))return d.from_greenwich&&(b={x:b.x-d.from_greenwich,y:b.y,z:b.z||0}),"longlat"===d.projName?b={x:b.x*yi,y:b.y*yi,z:b.z||0}:(b=d.forward(b),d.to_meter&&(b={x:b.x/d.to_meter,y:b.y/d.to_meter,z:b.z||0})),Z&&"enu"!==d.axis?Vp(d,!0,b):(m||delete b.z,b)}tp.projections=$i,tp.projections.start();var Kp=tp("WGS84");function ep(l,d,b,Z){var c,m,X;return Array.isArray(b)?(c=Lp(l,d,b,Z)||{x:NaN,y:NaN},b.length>2?void 0!==l.name&&"geocent"===l.name||void 0!==d.name&&"geocent"===d.name?"number"==typeof c.z?[c.x,c.y,c.z].concat(b.splice(3)):[c.x,c.y,b[2]].concat(b.splice(3)):[c.x,c.y].concat(b.splice(2)):[c.x,c.y]):(m=Lp(l,d,b,Z),2===(X=Object.keys(b)).length||X.forEach((function(Z){if(void 0!==l.name&&"geocent"===l.name||void 0!==d.name&&"geocent"===d.name){if("x"===Z||"y"===Z||"z"===Z)return}else if("x"===Z||"y"===Z)return;m[Z]=b[Z]})),m)}function Hp(l){return l instanceof tp?l:l.oProj?l.oProj:tp(l)}function xp(l,d,b){l=Hp(l);var Z,c=!1;return void 0===d?(d=l,l=Kp,c=!0):(void 0!==d.x||Array.isArray(d))&&(b=d,d=l,l=Kp,c=!0),d=Hp(d),b?ep(l,d,b):(Z={forward:function(b,Z){return ep(l,d,b,Z)},inverse:function(b,Z){return ep(d,l,b,Z)}},c&&(Z.oProj=d),Z)}var Sp=6,Yp="AJSAJS",Jp="AFAFAF",zp=65,vp=73,Tp=79,Mp=86,Fp=90,Cp={forward:Ip,inverse:function(l){var d=Np(Bp(l.toUpperCase()));if(d.lat&&d.lon)return[d.lon,d.lat,d.lon,d.lat];return[d.left,d.bottom,d.right,d.top]},toPoint:gp};function Ip(l,d){return d=d||5,function(l,d){var b="00000"+l.easting,Z="00000"+l.northing;return l.zoneNumber+l.zoneLetter+(n=l.easting,h=l.northing,i=l.zoneNumber,p=wp(i),y=Math.floor(n/1e5),V=Math.floor(h/1e5)%20,c=y,m=V,X=p,u=X-1,G=Yp.charCodeAt(u),W=Jp.charCodeAt(u),t=G+c-1,s=W+m,a=!1,t>Fp&&(t=t-Fp+zp-1,a=!0),(t===vp||G<vp&&t>vp||(t>vp||G<vp)&&a)&&t++,(t===Tp||G<Tp&&t>Tp||(t>Tp||G<Tp)&&a)&&++t===vp&&t++,t>Fp&&(t=t-Fp+zp-1),s>Mp?(s=s-Mp+zp-1,a=!0):a=!1,(s===vp||W<vp&&s>vp||(s>vp||W<vp)&&a)&&s++,(s===Tp||W<Tp&&s>Tp||(s>Tp||W<Tp)&&a)&&++s===vp&&s++,s>Mp&&(s=s-Mp+zp-1),String.fromCharCode(t)+String.fromCharCode(s))+b.substr(b.length-5,d)+Z.substr(Z.length-5,d);var c,m,X,u,G,W,t,s,a;var n,h,i,p,y,V}(function(l){var d,b,Z,c,m,X,u,G,W=l.lat,t=l.lon,s=6378137,a=.00669438,n=.9996,h=kp(W),i=kp(t);G=Math.floor((t+180)/6)+1,180===t&&(G=60);W>=56&&W<64&&t>=3&&t<12&&(G=32);W>=72&&W<84&&(t>=0&&t<9?G=31:t>=9&&t<21?G=33:t>=21&&t<33?G=35:t>=33&&t<42&&(G=37));u=kp(6*(G-1)-180+3),d=a/(1-a),b=s/Math.sqrt(1-a*Math.sin(h)*Math.sin(h)),Z=Math.tan(h)*Math.tan(h),c=d*Math.cos(h)*Math.cos(h),m=Math.cos(h)*(i-u),X=s*((1-a/4-3*a*a/64-5*a*a*a/256)*h-(3*a/8+3*a*a/32+45*a*a*a/1024)*Math.sin(2*h)+(15*a*a/256+45*a*a*a/1024)*Math.sin(4*h)-35*a*a*a/3072*Math.sin(6*h));var p=n*b*(m+(1-Z+c)*m*m*m/6+(5-18*Z+Z*Z+72*c-58*d)*m*m*m*m*m/120)+5e5,y=n*(X+b*Math.tan(h)*(m*m/2+(5-Z+9*c+4*c*c)*m*m*m*m/24+(61-58*Z+Z*Z+600*c-330*d)*m*m*m*m*m*m/720));W<0&&(y+=1e7);return{northing:Math.round(y),easting:Math.round(p),zoneNumber:G,zoneLetter:Pp(W)}}({lat:l[1],lon:l[0]}),d)}function gp(l){var d=Np(Bp(l.toUpperCase()));return d.lat&&d.lon?[d.lon,d.lat]:[(d.left+d.right)/2,(d.top+d.bottom)/2]}function kp(l){return l*(Math.PI/180)}function rp(l){return l/Math.PI*180}function Np(l){var d=l.northing,b=l.easting,Z=l.zoneLetter,c=l.zoneNumber;if(c<0||c>60)return null;var m,X,u,G,W,t,s,a,n,h=.9996,i=6378137,p=.00669438,y=(1-Math.sqrt(.99330562))/(1+Math.sqrt(.99330562)),V=b-5e5,o=d;Z<"N"&&(o-=1e7),s=6*(c-1)-180+3,m=.006739496752268451,n=(a=o/h/6367449.145945056)+(3*y/2-27*y*y*y/32)*Math.sin(2*a)+(21*y*y/16-55*y*y*y*y/32)*Math.sin(4*a)+151*y*y*y/96*Math.sin(6*a),X=i/Math.sqrt(1-p*Math.sin(n)*Math.sin(n)),u=Math.tan(n)*Math.tan(n),G=m*Math.cos(n)*Math.cos(n),W=.99330562*i/Math.pow(1-p*Math.sin(n)*Math.sin(n),1.5),t=V/(X*h);var R=n-X*Math.tan(n)/W*(t*t/2-(5+3*u+10*G-4*G*G-9*m)*t*t*t*t/24+(61+90*u+298*G+45*u*u-1.6983531815716497-3*G*G)*t*t*t*t*t*t/720);R=rp(R);var L,K=(t-(1+2*u+G)*t*t*t/6+(5-2*G+28*u-3*G*G+8*m+24*u*u)*t*t*t*t*t/120)/Math.cos(n);if(K=s+rp(K),l.accuracy){var e=Np({northing:l.northing+l.accuracy,easting:l.easting+l.accuracy,zoneLetter:l.zoneLetter,zoneNumber:l.zoneNumber});L={top:e.lat,right:e.lon,bottom:R,left:K}}else L={lat:R,lon:K};return L}function Pp(l){var d="Z";return 84>=l&&l>=72?d="X":72>l&&l>=64?d="W":64>l&&l>=56?d="V":56>l&&l>=48?d="U":48>l&&l>=40?d="T":40>l&&l>=32?d="S":32>l&&l>=24?d="R":24>l&&l>=16?d="Q":16>l&&l>=8?d="P":8>l&&l>=0?d="N":0>l&&l>=-8?d="M":-8>l&&l>=-16?d="L":-16>l&&l>=-24?d="K":-24>l&&l>=-32?d="J":-32>l&&l>=-40?d="H":-40>l&&l>=-48?d="G":-48>l&&l>=-56?d="F":-56>l&&l>=-64?d="E":-64>l&&l>=-72?d="D":-72>l&&l>=-80&&(d="C"),d}function wp(l){var d=l%Sp;return 0===d&&(d=Sp),d}function Bp(l){if(l&&0===l.length)throw"MGRSPoint coverting from nothing";for(var d,b=l.length,Z=null,c="",m=0;!/[A-Z]/.test(d=l.charAt(m));){if(m>=2)throw"MGRSPoint bad conversion from: "+l;c+=d,m++}var X=parseInt(c,10);if(0===m||m+3>b)throw"MGRSPoint bad conversion from: "+l;var u=l.charAt(m++);if(u<="A"||"B"===u||"Y"===u||u>="Z"||"I"===u||"O"===u)throw"MGRSPoint zone letter "+u+" not handled: "+l;Z=l.substring(m,m+=2);for(var G=wp(X),W=function(l,d){var b=Yp.charCodeAt(d-1),Z=1e5,c=!1;for(;b!==l.charCodeAt(0);){if(++b===vp&&b++,b===Tp&&b++,b>Fp){if(c)throw"Bad character: "+l;b=zp,c=!0}Z+=1e5}return Z}(Z.charAt(0),G),t=function(l,d){if(l>"V")throw"MGRSPoint given invalid Northing "+l;var b=Jp.charCodeAt(d-1),Z=0,c=!1;for(;b!==l.charCodeAt(0);){if(++b===vp&&b++,b===Tp&&b++,b>Mp){if(c)throw"Bad character: "+l;b=zp,c=!0}Z+=1e5}return Z}(Z.charAt(1),G);t<Up(u);)t+=2e6;var s=b-m;if(s%2!=0)throw"MGRSPoint has to have an even number \nof digits after the zone letter and two 100km letters - front \nhalf for easting meters, second half for \nnorthing meters"+l;var a,n,h,i=s/2,p=0,y=0;return i>0&&(a=1e5/Math.pow(10,i),n=l.substring(m,m+i),p=parseFloat(n)*a,h=l.substring(m+i),y=parseFloat(h)*a),{easting:p+W,northing:y+t,zoneLetter:u,zoneNumber:X,accuracy:a}}function Up(l){var d;switch(l){case"C":d=11e5;break;case"D":d=2e6;break;case"E":d=28e5;break;case"F":d=37e5;break;case"G":d=46e5;break;case"H":d=55e5;break;case"J":d=64e5;break;case"K":d=73e5;break;case"L":d=82e5;break;case"M":d=91e5;break;case"N":d=0;break;case"P":d=8e5;break;case"Q":d=17e5;break;case"R":d=26e5;break;case"S":d=35e5;break;case"T":d=44e5;break;case"U":d=53e5;break;case"V":d=62e5;break;case"W":d=7e6;break;case"X":d=79e5;break;default:d=-1}if(d>=0)return d;throw"Invalid zone letter: "+l}function fp(l,d,b){if(!(this instanceof fp))return new fp(l,d,b);if(Array.isArray(l))this.x=l[0],this.y=l[1],this.z=l[2]||0;else if("object"==typeof l)this.x=l.x,this.y=l.y,this.z=l.z||0;else if("string"==typeof l&&void 0===d){var Z=l.split(",");this.x=parseFloat(Z[0],10),this.y=parseFloat(Z[1],10),this.z=parseFloat(Z[2],10)||0}else this.x=l,this.y=d,this.z=b||0;console.warn("proj4.Point will be removed in version 3, use proj4.toPoint")}fp.fromMGRS=function(l){return new fp(gp(l))},fp.prototype.toMGRS=function(l){return Ip([this.x,this.y],l)};var jp=1,Qp=.25,Ep=.046875,Op=.01953125,Dp=.01068115234375,Ap=.75,_p=.46875,qp=.013020833333333334,$p=.007120768229166667,ly=.3645833333333333,dy=.005696614583333333,by=.3076171875;function Zy(l){var d=[];d[0]=jp-l*(Qp+l*(Ep+l*(Op+l*Dp))),d[1]=l*(Ap-l*(Ep+l*(Op+l*Dp)));var b=l*l;return d[2]=b*(_p-l*(qp+l*$p)),b*=l,d[3]=b*(ly-l*dy),d[4]=b*l*by,d}function cy(l,d,b,Z){return b*=d,d*=d,Z[0]*l-b*(Z[1]+d*(Z[2]+d*(Z[3]+d*Z[4])))}var my=20;function Xy(l,d,b){for(var Z=1/(1-d),c=l,m=my;m;--m){var X=Math.sin(c),u=1-d*X*X;if(c-=u=(cy(c,X,Math.cos(c),b)-l)*(u*Math.sqrt(u))*Z,Math.abs(u)<ii)return c}return c}var uy={init:function(){this.x0=void 0!==this.x0?this.x0:0,this.y0=void 0!==this.y0?this.y0:0,this.long0=void 0!==this.long0?this.long0:0,this.lat0=void 0!==this.lat0?this.lat0:0,this.es&&(this.en=Zy(this.es),this.ml0=cy(this.lat0,Math.sin(this.lat0),Math.cos(this.lat0),this.en))},forward:function(l){var d,b,Z,c=l.x,m=l.y,X=ji(c-this.long0),u=Math.sin(m),G=Math.cos(m);if(this.es){var W=G*X,t=Math.pow(W,2),s=this.ep2*Math.pow(G,2),a=Math.pow(s,2),n=Math.abs(G)>ii?Math.tan(m):0,h=Math.pow(n,2),i=Math.pow(h,2);d=1-this.es*Math.pow(u,2),W/=Math.sqrt(d);var p=cy(m,u,G,this.en);b=this.a*(this.k0*W*(1+t/6*(1-h+s+t/20*(5-18*h+i+14*s-58*h*s+t/42*(61+179*i-i*h-479*h)))))+this.x0,Z=this.a*(this.k0*(p-this.ml0+u*X*W/2*(1+t/12*(5-h+9*s+4*a+t/30*(61+i-58*h+270*s-330*h*s+t/56*(1385+543*i-i*h-3111*h))))))+this.y0}else{var y=G*Math.sin(X);if(Math.abs(Math.abs(y)-1)<ii)return 93;if(b=.5*this.a*this.k0*Math.log((1+y)/(1-y))+this.x0,Z=G*Math.cos(X)/Math.sqrt(1-Math.pow(y,2)),(y=Math.abs(Z))>=1){if(y-1>ii)return 93;Z=0}else Z=Math.acos(Z);m<0&&(Z=-Z),Z=this.a*this.k0*(Z-this.lat0)+this.y0}return l.x=b,l.y=Z,l},inverse:function(l){var d,b,Z,c,m=(l.x-this.x0)*(1/this.a),X=(l.y-this.y0)*(1/this.a);if(this.es)if(b=Xy(d=this.ml0+X/this.k0,this.es,this.en),Math.abs(b)<si){var u=Math.sin(b),G=Math.cos(b),W=Math.abs(G)>ii?Math.tan(b):0,t=this.ep2*Math.pow(G,2),s=Math.pow(t,2),a=Math.pow(W,2),n=Math.pow(a,2);d=1-this.es*Math.pow(u,2);var h=m*Math.sqrt(d)/this.k0,i=Math.pow(h,2);Z=b-(d*=W)*i/(1-this.es)*.5*(1-i/12*(5+3*a-9*t*a+t-4*s-i/30*(61+90*a-252*t*a+45*n+46*t-i/56*(1385+3633*a+4095*n+1574*n*a)))),c=ji(this.long0+h*(1-i/6*(1+2*a+t-i/20*(5+28*a+24*n+8*t*a+6*t-i/42*(61+662*a+1320*n+720*n*a))))/G)}else Z=si*fi(X),c=0;else{var p=Math.exp(m/this.k0),y=.5*(p-1/p),V=this.lat0+X/this.k0,o=Math.cos(V);d=Math.sqrt((1-Math.pow(o,2))/(1+Math.pow(y,2))),Z=Math.asin(d),X<0&&(Z=-Z),c=0===y&&0===o?0:ji(Math.atan2(y,o)+this.long0)}return l.x=c,l.y=Z,l},names:["Fast_Transverse_Mercator","Fast Transverse Mercator"]};function Gy(l){var d=Math.exp(l);return d=(d-1/d)/2}function Wy(l,d){l=Math.abs(l),d=Math.abs(d);var b=Math.max(l,d),Z=Math.min(l,d)/(b||1);return b*Math.sqrt(1+Math.pow(Z,2))}function ty(l){var d=Math.abs(l);return d=function(l){var d=1+l,b=d-1;return 0===b?l:l*Math.log(d)/b}(d*(1+d/(Wy(1,d)+1))),l<0?-d:d}function sy(l,d){for(var b,Z=2*Math.cos(2*d),c=l.length-1,m=l[c],X=0;--c>=0;)b=Z*m-X+l[c],X=m,m=b;return d+b*Math.sin(2*d)}function ay(l,d,b){for(var Z,c,m=Math.sin(d),X=Math.cos(d),u=Gy(b),G=function(l){var d=Math.exp(l);return(d+1/d)/2}(b),W=2*X*G,t=-2*m*u,s=l.length-1,a=l[s],n=0,h=0,i=0;--s>=0;)Z=h,c=n,a=W*(h=a)-Z-t*(n=i)+l[s],i=t*h-c+W*n;return[(W=m*G)*a-(t=X*u)*i,W*i+t*a]}var ny={init:function(){if(!this.approx&&(isNaN(this.es)||this.es<=0))throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION["Fast_Transverse_Mercator"] in the WKT.');this.approx&&(uy.init.apply(this),this.forward=uy.forward,this.inverse=uy.inverse),this.x0=void 0!==this.x0?this.x0:0,this.y0=void 0!==this.y0?this.y0:0,this.long0=void 0!==this.long0?this.long0:0,this.lat0=void 0!==this.lat0?this.lat0:0,this.cgb=[],this.cbg=[],this.utg=[],this.gtu=[];var l=this.es/(1+Math.sqrt(1-this.es)),d=l/(2-l),b=d;this.cgb[0]=d*(2+d*(-2/3+d*(d*(116/45+d*(26/45+d*(-2854/675)))-2))),this.cbg[0]=d*(d*(2/3+d*(4/3+d*(-82/45+d*(32/45+d*(4642/4725)))))-2),b*=d,this.cgb[1]=b*(7/3+d*(d*(-227/45+d*(2704/315+d*(2323/945)))-1.6)),this.cbg[1]=b*(5/3+d*(-16/15+d*(-13/9+d*(904/315+d*(-1522/945))))),b*=d,this.cgb[2]=b*(56/15+d*(-136/35+d*(-1262/105+d*(73814/2835)))),this.cbg[2]=b*(-26/15+d*(34/21+d*(1.6+d*(-12686/2835)))),b*=d,this.cgb[3]=b*(4279/630+d*(-332/35+d*(-399572/14175))),this.cbg[3]=b*(1237/630+d*(d*(-24832/14175)-2.4)),b*=d,this.cgb[4]=b*(4174/315+d*(-144838/6237)),this.cbg[4]=b*(-734/315+d*(109598/31185)),b*=d,this.cgb[5]=b*(601676/22275),this.cbg[5]=b*(444337/155925),b=Math.pow(d,2),this.Qn=this.k0/(1+d)*(1+b*(1/4+b*(1/64+b/256))),this.utg[0]=d*(d*(2/3+d*(-37/96+d*(1/360+d*(81/512+d*(-96199/604800)))))-.5),this.gtu[0]=d*(.5+d*(-2/3+d*(5/16+d*(41/180+d*(-127/288+d*(7891/37800)))))),this.utg[1]=b*(-1/48+d*(-1/15+d*(437/1440+d*(-46/105+d*(1118711/3870720))))),this.gtu[1]=b*(13/48+d*(d*(557/1440+d*(281/630+d*(-1983433/1935360)))-.6)),b*=d,this.utg[2]=b*(-17/480+d*(37/840+d*(209/4480+d*(-5569/90720)))),this.gtu[2]=b*(61/240+d*(-103/140+d*(15061/26880+d*(167603/181440)))),b*=d,this.utg[3]=b*(-4397/161280+d*(11/504+d*(830251/7257600))),this.gtu[3]=b*(49561/161280+d*(-179/168+d*(6601661/7257600))),b*=d,this.utg[4]=b*(-4583/161280+d*(108847/3991680)),this.gtu[4]=b*(34729/80640+d*(-3418889/1995840)),b*=d,this.utg[5]=b*(-20648693/638668800),this.gtu[5]=.6650675310896665*b;var Z=sy(this.cbg,this.lat0);this.Zb=-this.Qn*(Z+function(l,d){for(var b,Z=2*Math.cos(d),c=l.length-1,m=l[c],X=0;--c>=0;)b=Z*m-X+l[c],X=m,m=b;return Math.sin(d)*b}(this.gtu,2*Z))},forward:function(l){var d=ji(l.x-this.long0),b=l.y;b=sy(this.cbg,b);var Z=Math.sin(b),c=Math.cos(b),m=Math.sin(d),X=Math.cos(d);b=Math.atan2(Z,X*c),d=Math.atan2(m*c,Wy(Z,c*X)),d=ty(Math.tan(d));var u,G,W=ay(this.gtu,2*b,2*d);return b+=W[0],d+=W[1],Math.abs(d)<=2.623395162778?(u=this.a*(this.Qn*d)+this.x0,G=this.a*(this.Qn*b+this.Zb)+this.y0):(u=1/0,G=1/0),l.x=u,l.y=G,l},inverse:function(l){var d,b,Z=(l.x-this.x0)*(1/this.a),c=(l.y-this.y0)*(1/this.a);if(c=(c-this.Zb)/this.Qn,Z/=this.Qn,Math.abs(Z)<=2.623395162778){var m=ay(this.utg,2*c,2*Z);c+=m[0],Z+=m[1],Z=Math.atan(Gy(Z));var X=Math.sin(c),u=Math.cos(c),G=Math.sin(Z),W=Math.cos(Z);c=Math.atan2(X*W,Wy(G,W*u)),d=ji((Z=Math.atan2(G,W*u))+this.long0),b=sy(this.cgb,c)}else d=1/0,b=1/0;return l.x=d,l.y=b,l},names:["Extended_Transverse_Mercator","Extended Transverse Mercator","etmerc","Transverse_Mercator","Transverse Mercator","tmerc"]};var hy={init:function(){var l=function(l,d){if(void 0===l){if((l=Math.floor(30*(ji(d)+Math.PI)/Math.PI)+1)<0)return 0;if(l>60)return 60}return l}(this.zone,this.long0);if(void 0===l)throw new Error("unknown utm zone");this.lat0=0,this.long0=(6*Math.abs(l)-183)*pi,this.x0=5e5,this.y0=this.utmSouth?1e7:0,this.k0=.9996,ny.init.apply(this),this.forward=ny.forward,this.inverse=ny.inverse},names:["Universal Transverse Mercator System","utm"],dependsOn:"etmerc"};function iy(l,d){return Math.pow((1-l)/(1+l),d)}var py={init:function(){var l=Math.sin(this.lat0),d=Math.cos(this.lat0);d*=d,this.rc=Math.sqrt(1-this.es)/(1-this.es*l*l),this.C=Math.sqrt(1+this.es*d*d/(1-this.es)),this.phic0=Math.asin(l/this.C),this.ratexp=.5*this.C*this.e,this.K=Math.tan(.5*this.phic0+Vi)/(Math.pow(Math.tan(.5*this.lat0+Vi),this.C)*iy(this.e*l,this.ratexp))},forward:function(l){var d=l.x,b=l.y;return l.y=2*Math.atan(this.K*Math.pow(Math.tan(.5*b+Vi),this.C)*iy(this.e*Math.sin(b),this.ratexp))-si,l.x=this.C*d,l},inverse:function(l){for(var d=l.x/this.C,b=l.y,Z=Math.pow(Math.tan(.5*b+Vi)/this.K,1/this.C),c=20;c>0&&(b=2*Math.atan(Z*iy(this.e*Math.sin(l.y),-.5*this.e))-si,!(Math.abs(b-l.y)<1e-14));--c)l.y=b;return c?(l.x=d,l.y=b,l):null},names:["gauss"]};var yy={init:function(){py.init.apply(this),this.rc&&(this.sinc0=Math.sin(this.phic0),this.cosc0=Math.cos(this.phic0),this.R2=2*this.rc,this.title||(this.title="Oblique Stereographic Alternative"))},forward:function(l){var d,b,Z,c;return l.x=ji(l.x-this.long0),py.forward.apply(this,[l]),d=Math.sin(l.y),b=Math.cos(l.y),Z=Math.cos(l.x),c=this.k0*this.R2/(1+this.sinc0*d+this.cosc0*b*Z),l.x=c*b*Math.sin(l.x),l.y=c*(this.cosc0*d-this.sinc0*b*Z),l.x=this.a*l.x+this.x0,l.y=this.a*l.y+this.y0,l},inverse:function(l){var d,b,Z,c,m;if(l.x=(l.x-this.x0)/this.a,l.y=(l.y-this.y0)/this.a,l.x/=this.k0,l.y/=this.k0,m=Math.sqrt(l.x*l.x+l.y*l.y)){var X=2*Math.atan2(m,this.R2);d=Math.sin(X),b=Math.cos(X),c=Math.asin(b*this.sinc0+l.y*d*this.cosc0/m),Z=Math.atan2(l.x*d,m*this.cosc0*b-l.y*this.sinc0*d)}else c=this.phic0,Z=0;return l.x=Z,l.y=c,py.inverse.apply(this,[l]),l.x=ji(l.x+this.long0),l},names:["Stereographic_North_Pole","Oblique_Stereographic","Polar_Stereographic","sterea","Oblique Stereographic Alternative","Double_Stereographic"]};var Vy={init:function(){this.coslat0=Math.cos(this.lat0),this.sinlat0=Math.sin(this.lat0),this.sphere?1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=ii&&(this.k0=.5*(1+fi(this.lat0)*Math.sin(this.lat_ts))):(Math.abs(this.coslat0)<=ii&&(this.lat0>0?this.con=1:this.con=-1),this.cons=Math.sqrt(Math.pow(1+this.e,1+this.e)*Math.pow(1-this.e,1-this.e)),1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=ii&&(this.k0=.5*this.cons*Ui(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts))/Qi(this.e,this.con*this.lat_ts,this.con*Math.sin(this.lat_ts))),this.ms1=Ui(this.e,this.sinlat0,this.coslat0),this.X0=2*Math.atan(this.ssfn_(this.lat0,this.sinlat0,this.e))-si,this.cosX0=Math.cos(this.X0),this.sinX0=Math.sin(this.X0))},forward:function(l){var d,b,Z,c,m,X,u=l.x,G=l.y,W=Math.sin(G),t=Math.cos(G),s=ji(u-this.long0);return Math.abs(Math.abs(u-this.long0)-Math.PI)<=ii&&Math.abs(G+this.lat0)<=ii?(l.x=NaN,l.y=NaN,l):this.sphere?(d=2*this.k0/(1+this.sinlat0*W+this.coslat0*t*Math.cos(s)),l.x=this.a*d*t*Math.sin(s)+this.x0,l.y=this.a*d*(this.coslat0*W-this.sinlat0*t*Math.cos(s))+this.y0,l):(b=2*Math.atan(this.ssfn_(G,W,this.e))-si,c=Math.cos(b),Z=Math.sin(b),Math.abs(this.coslat0)<=ii?(m=Qi(this.e,G*this.con,this.con*W),X=2*this.a*this.k0*m/this.cons,l.x=this.x0+X*Math.sin(u-this.long0),l.y=this.y0-this.con*X*Math.cos(u-this.long0),l):(Math.abs(this.sinlat0)<ii?(d=2*this.a*this.k0/(1+c*Math.cos(s)),l.y=d*Z):(d=2*this.a*this.k0*this.ms1/(this.cosX0*(1+this.sinX0*Z+this.cosX0*c*Math.cos(s))),l.y=d*(this.cosX0*Z-this.sinX0*c*Math.cos(s))+this.y0),l.x=d*c*Math.sin(s)+this.x0,l))},inverse:function(l){var d,b,Z,c,m;l.x-=this.x0,l.y-=this.y0;var X=Math.sqrt(l.x*l.x+l.y*l.y);if(this.sphere){var u=2*Math.atan(X/(2*this.a*this.k0));return d=this.long0,b=this.lat0,X<=ii?(l.x=d,l.y=b,l):(b=Math.asin(Math.cos(u)*this.sinlat0+l.y*Math.sin(u)*this.coslat0/X),d=Math.abs(this.coslat0)<ii?this.lat0>0?ji(this.long0+Math.atan2(l.x,-1*l.y)):ji(this.long0+Math.atan2(l.x,l.y)):ji(this.long0+Math.atan2(l.x*Math.sin(u),X*this.coslat0*Math.cos(u)-l.y*this.sinlat0*Math.sin(u))),l.x=d,l.y=b,l)}if(Math.abs(this.coslat0)<=ii){if(X<=ii)return b=this.lat0,d=this.long0,l.x=d,l.y=b,l;l.x*=this.con,l.y*=this.con,Z=X*this.cons/(2*this.a*this.k0),b=this.con*Ei(this.e,Z),d=this.con*ji(this.con*this.long0+Math.atan2(l.x,-1*l.y))}else c=2*Math.atan(X*this.cosX0/(2*this.a*this.k0*this.ms1)),d=this.long0,X<=ii?m=this.X0:(m=Math.asin(Math.cos(c)*this.sinX0+l.y*Math.sin(c)*this.cosX0/X),d=ji(this.long0+Math.atan2(l.x*Math.sin(c),X*this.cosX0*Math.cos(c)-l.y*this.sinX0*Math.sin(c)))),b=-1*Ei(this.e,Math.tan(.5*(si+m)));return l.x=d,l.y=b,l},names:["stere","Stereographic_South_Pole","Polar Stereographic (variant B)"],ssfn_:function(l,d,b){return d*=b,Math.tan(.5*(si+l))*Math.pow((1-d)/(1+d),.5*b)}};var oy={init:function(){var l=this.lat0;this.lambda0=this.long0;var d=Math.sin(l),b=this.a,Z=1/this.rf,c=2*Z-Math.pow(Z,2),m=this.e=Math.sqrt(c);this.R=this.k0*b*Math.sqrt(1-c)/(1-c*Math.pow(d,2)),this.alpha=Math.sqrt(1+c/(1-c)*Math.pow(Math.cos(l),4)),this.b0=Math.asin(d/this.alpha);var X=Math.log(Math.tan(Math.PI/4+this.b0/2)),u=Math.log(Math.tan(Math.PI/4+l/2)),G=Math.log((1+m*d)/(1-m*d));this.K=X-this.alpha*u+this.alpha*m/2*G},forward:function(l){var d=Math.log(Math.tan(Math.PI/4-l.y/2)),b=this.e/2*Math.log((1+this.e*Math.sin(l.y))/(1-this.e*Math.sin(l.y))),Z=-this.alpha*(d+b)+this.K,c=2*(Math.atan(Math.exp(Z))-Math.PI/4),m=this.alpha*(l.x-this.lambda0),X=Math.atan(Math.sin(m)/(Math.sin(this.b0)*Math.tan(c)+Math.cos(this.b0)*Math.cos(m))),u=Math.asin(Math.cos(this.b0)*Math.sin(c)-Math.sin(this.b0)*Math.cos(c)*Math.cos(m));return l.y=this.R/2*Math.log((1+Math.sin(u))/(1-Math.sin(u)))+this.y0,l.x=this.R*X+this.x0,l},inverse:function(l){for(var d=l.x-this.x0,b=l.y-this.y0,Z=d/this.R,c=2*(Math.atan(Math.exp(b/this.R))-Math.PI/4),m=Math.asin(Math.cos(this.b0)*Math.sin(c)+Math.sin(this.b0)*Math.cos(c)*Math.cos(Z)),X=Math.atan(Math.sin(Z)/(Math.cos(this.b0)*Math.cos(Z)-Math.sin(this.b0)*Math.tan(c))),u=this.lambda0+X/this.alpha,G=0,W=m,t=-1e3,s=0;Math.abs(W-t)>1e-7;){if(++s>20)return;G=1/this.alpha*(Math.log(Math.tan(Math.PI/4+m/2))-this.K)+this.e*Math.log(Math.tan(Math.PI/4+Math.asin(this.e*Math.sin(W))/2)),t=W,W=2*Math.atan(Math.exp(G))-Math.PI/2}return l.x=u,l.y=W,l},names:["somerc"]},Ry=1e-7;var Ly={init:function(){var l,d,b,Z,c,m,X,u,G,W,t,s,a,n=0,h=0,i=0,p=0,y=0,V=0,o=0;this.no_off=(a="object"==typeof(s=this).PROJECTION?Object.keys(s.PROJECTION)[0]:s.PROJECTION,"no_uoff"in s||"no_off"in s||-1!==["Hotine_Oblique_Mercator","Hotine_Oblique_Mercator_Azimuth_Natural_Origin"].indexOf(a)),this.no_rot="no_rot"in this;var R=!1;"alpha"in this&&(R=!0);var L=!1;if("rectified_grid_angle"in this&&(L=!0),R&&(o=this.alpha),L&&(n=this.rectified_grid_angle*pi),R||L)h=this.longc;else if(i=this.long1,y=this.lat1,p=this.long2,V=this.lat2,Math.abs(y-V)<=Ry||(l=Math.abs(y))<=Ry||Math.abs(l-si)<=Ry||Math.abs(Math.abs(this.lat0)-si)<=Ry||Math.abs(Math.abs(V)-si)<=Ry)throw new Error;var K=1-this.es;d=Math.sqrt(K),Math.abs(this.lat0)>ii?(u=Math.sin(this.lat0),b=Math.cos(this.lat0),l=1-this.es*u*u,this.B=b*b,this.B=Math.sqrt(1+this.es*this.B*this.B/K),this.A=this.B*this.k0*d/l,(c=(Z=this.B*d/(b*Math.sqrt(l)))*Z-1)<=0?c=0:(c=Math.sqrt(c),this.lat0<0&&(c=-c)),this.E=c+=Z,this.E*=Math.pow(Qi(this.e,this.lat0,u),this.B)):(this.B=1/d,this.A=this.k0,this.E=Z=c=1),R||L?(R?(t=Math.asin(Math.sin(o)/Z),L||(n=o)):(t=n,o=Math.asin(Z*Math.sin(t))),this.lam0=h-Math.asin(.5*(c-1/c)*Math.tan(t))/this.B):(m=Math.pow(Qi(this.e,y,Math.sin(y)),this.B),X=Math.pow(Qi(this.e,V,Math.sin(V)),this.B),c=this.E/m,G=(X-m)/(X+m),W=((W=this.E*this.E)-X*m)/(W+X*m),(l=i-p)<-Math.pi?p-=oi:l>Math.pi&&(p+=oi),this.lam0=ji(.5*(i+p)-Math.atan(W*Math.tan(.5*this.B*(i-p))/G)/this.B),t=Math.atan(2*Math.sin(this.B*ji(i-this.lam0))/(c-1/c)),n=o=Math.asin(Z*Math.sin(t))),this.singam=Math.sin(t),this.cosgam=Math.cos(t),this.sinrot=Math.sin(n),this.cosrot=Math.cos(n),this.rB=1/this.B,this.ArB=this.A*this.rB,this.BrA=1/this.ArB,this.A,this.B,this.no_off?this.u_0=0:(this.u_0=Math.abs(this.ArB*Math.atan(Math.sqrt(Z*Z-1)/Math.cos(o))),this.lat0<0&&(this.u_0=-this.u_0)),c=.5*t,this.v_pole_n=this.ArB*Math.log(Math.tan(Vi-c)),this.v_pole_s=this.ArB*Math.log(Math.tan(Vi+c))},forward:function(l){var d,b,Z,c,m,X,u,G,W={};if(l.x=l.x-this.lam0,Math.abs(Math.abs(l.y)-si)>ii){if(d=.5*((m=this.E/Math.pow(Qi(this.e,l.y,Math.sin(l.y)),this.B))-(X=1/m)),b=.5*(m+X),c=Math.sin(this.B*l.x),Z=(d*this.singam-c*this.cosgam)/b,Math.abs(Math.abs(Z)-1)<ii)throw new Error;G=.5*this.ArB*Math.log((1-Z)/(1+Z)),X=Math.cos(this.B*l.x),u=Math.abs(X)<Ry?this.A*l.x:this.ArB*Math.atan2(d*this.cosgam+c*this.singam,X)}else G=l.y>0?this.v_pole_n:this.v_pole_s,u=this.ArB*l.y;return this.no_rot?(W.x=u,W.y=G):(u-=this.u_0,W.x=G*this.cosrot+u*this.sinrot,W.y=u*this.cosrot-G*this.sinrot),W.x=this.a*W.x+this.x0,W.y=this.a*W.y+this.y0,W},inverse:function(l){var d,b,Z,c,m,X,u,G={};if(l.x=(l.x-this.x0)*(1/this.a),l.y=(l.y-this.y0)*(1/this.a),this.no_rot?(b=l.y,d=l.x):(b=l.x*this.cosrot-l.y*this.sinrot,d=l.y*this.cosrot+l.x*this.sinrot+this.u_0),c=.5*((Z=Math.exp(-this.BrA*b))-1/Z),m=.5*(Z+1/Z),u=((X=Math.sin(this.BrA*d))*this.cosgam+c*this.singam)/m,Math.abs(Math.abs(u)-1)<ii)G.x=0,G.y=u<0?-si:si;else{if(G.y=this.E/Math.sqrt((1+u)/(1-u)),G.y=Ei(this.e,Math.pow(G.y,1/this.B)),G.y===1/0)throw new Error;G.x=-this.rB*Math.atan2(c*this.cosgam-X*this.singam,Math.cos(this.BrA*d))}return G.x+=this.lam0,G},names:["Hotine_Oblique_Mercator","Hotine Oblique Mercator","Hotine_Oblique_Mercator_Azimuth_Natural_Origin","Hotine_Oblique_Mercator_Two_Point_Natural_Origin","Hotine_Oblique_Mercator_Azimuth_Center","Oblique_Mercator","omerc"]};var Ky={init:function(){if(this.lat2||(this.lat2=this.lat1),this.k0||(this.k0=1),this.x0=this.x0||0,this.y0=this.y0||0,!(Math.abs(this.lat1+this.lat2)<ii)){var l=this.b/this.a;this.e=Math.sqrt(1-l*l);var d=Math.sin(this.lat1),b=Math.cos(this.lat1),Z=Ui(this.e,d,b),c=Qi(this.e,this.lat1,d),m=Math.sin(this.lat2),X=Math.cos(this.lat2),u=Ui(this.e,m,X),G=Qi(this.e,this.lat2,m),W=Qi(this.e,this.lat0,Math.sin(this.lat0));Math.abs(this.lat1-this.lat2)>ii?this.ns=Math.log(Z/u)/Math.log(c/G):this.ns=d,isNaN(this.ns)&&(this.ns=d),this.f0=Z/(this.ns*Math.pow(c,this.ns)),this.rh=this.a*this.f0*Math.pow(W,this.ns),this.title||(this.title="Lambert Conformal Conic")}},forward:function(l){var d=l.x,b=l.y;Math.abs(2*Math.abs(b)-Math.PI)<=ii&&(b=fi(b)*(si-2*ii));var Z,c,m=Math.abs(Math.abs(b)-si);if(m>ii)Z=Qi(this.e,b,Math.sin(b)),c=this.a*this.f0*Math.pow(Z,this.ns);else{if((m=b*this.ns)<=0)return null;c=0}var X=this.ns*ji(d-this.long0);return l.x=this.k0*(c*Math.sin(X))+this.x0,l.y=this.k0*(this.rh-c*Math.cos(X))+this.y0,l},inverse:function(l){var d,b,Z,c,m,X=(l.x-this.x0)/this.k0,u=this.rh-(l.y-this.y0)/this.k0;this.ns>0?(d=Math.sqrt(X*X+u*u),b=1):(d=-Math.sqrt(X*X+u*u),b=-1);var G=0;if(0!==d&&(G=Math.atan2(b*X,b*u)),0!==d||this.ns>0){if(b=1/this.ns,Z=Math.pow(d/(this.a*this.f0),b),-9999===(c=Ei(this.e,Z)))return null}else c=-si;return m=ji(G/this.ns+this.long0),l.x=m,l.y=c,l},names:["Lambert Tangential Conformal Conic Projection","Lambert_Conformal_Conic","Lambert_Conformal_Conic_1SP","Lambert_Conformal_Conic_2SP","lcc","Lambert Conic Conformal (1SP)","Lambert Conic Conformal (2SP)"]};var ey={init:function(){this.a=6377397.155,this.es=.006674372230614,this.e=Math.sqrt(this.es),this.lat0||(this.lat0=.863937979737193),this.long0||(this.long0=.4334234309119251),this.k0||(this.k0=.9999),this.s45=.785398163397448,this.s90=2*this.s45,this.fi0=this.lat0,this.e2=this.es,this.e=Math.sqrt(this.e2),this.alfa=Math.sqrt(1+this.e2*Math.pow(Math.cos(this.fi0),4)/(1-this.e2)),this.uq=1.04216856380474,this.u0=Math.asin(Math.sin(this.fi0)/this.alfa),this.g=Math.pow((1+this.e*Math.sin(this.fi0))/(1-this.e*Math.sin(this.fi0)),this.alfa*this.e/2),this.k=Math.tan(this.u0/2+this.s45)/Math.pow(Math.tan(this.fi0/2+this.s45),this.alfa)*this.g,this.k1=this.k0,this.n0=this.a*Math.sqrt(1-this.e2)/(1-this.e2*Math.pow(Math.sin(this.fi0),2)),this.s0=1.37008346281555,this.n=Math.sin(this.s0),this.ro0=this.k1*this.n0/Math.tan(this.s0),this.ad=this.s90-this.uq},forward:function(l){var d,b,Z,c,m,X,u,G=l.x,W=l.y,t=ji(G-this.long0);return d=Math.pow((1+this.e*Math.sin(W))/(1-this.e*Math.sin(W)),this.alfa*this.e/2),b=2*(Math.atan(this.k*Math.pow(Math.tan(W/2+this.s45),this.alfa)/d)-this.s45),Z=-t*this.alfa,c=Math.asin(Math.cos(this.ad)*Math.sin(b)+Math.sin(this.ad)*Math.cos(b)*Math.cos(Z)),m=Math.asin(Math.cos(b)*Math.sin(Z)/Math.cos(c)),X=this.n*m,u=this.ro0*Math.pow(Math.tan(this.s0/2+this.s45),this.n)/Math.pow(Math.tan(c/2+this.s45),this.n),l.y=u*Math.cos(X)/1,l.x=u*Math.sin(X)/1,this.czech||(l.y*=-1,l.x*=-1),l},inverse:function(l){var d,b,Z,c,m,X,u,G=l.x;l.x=l.y,l.y=G,this.czech||(l.y*=-1,l.x*=-1),m=Math.sqrt(l.x*l.x+l.y*l.y),c=Math.atan2(l.y,l.x)/Math.sin(this.s0),Z=2*(Math.atan(Math.pow(this.ro0/m,1/this.n)*Math.tan(this.s0/2+this.s45))-this.s45),d=Math.asin(Math.cos(this.ad)*Math.sin(Z)-Math.sin(this.ad)*Math.cos(Z)*Math.cos(c)),b=Math.asin(Math.cos(Z)*Math.sin(c)/Math.cos(d)),l.x=this.long0-b/this.alfa,X=d,u=0;var W=0;do{l.y=2*(Math.atan(Math.pow(this.k,-1/this.alfa)*Math.pow(Math.tan(d/2+this.s45),1/this.alfa)*Math.pow((1+this.e*Math.sin(X))/(1-this.e*Math.sin(X)),this.e/2))-this.s45),Math.abs(X-l.y)<1e-10&&(u=1),X=l.y,W+=1}while(0===u&&W<15);return W>=15?null:l},names:["Krovak","krovak"]};function Hy(l,d,b,Z,c){return l*c-d*Math.sin(2*c)+b*Math.sin(4*c)-Z*Math.sin(6*c)}function xy(l){return 1-.25*l*(1+l/16*(3+1.25*l))}function Sy(l){return.375*l*(1+.25*l*(1+.46875*l))}function Yy(l){return.05859375*l*l*(1+.75*l)}function Jy(l){return l*l*l*(35/3072)}function zy(l,d,b){var Z=d*b;return l/Math.sqrt(1-Z*Z)}function vy(l){return Math.abs(l)<si?l:l-fi(l)*Math.PI}function Ty(l,d,b,Z,c){var m,X;m=l/d;for(var u=0;u<15;u++)if(m+=X=(l-(d*m-b*Math.sin(2*m)+Z*Math.sin(4*m)-c*Math.sin(6*m)))/(d-2*b*Math.cos(2*m)+4*Z*Math.cos(4*m)-6*c*Math.cos(6*m)),Math.abs(X)<=1e-10)return m;return NaN}var My={init:function(){this.sphere||(this.e0=xy(this.es),this.e1=Sy(this.es),this.e2=Yy(this.es),this.e3=Jy(this.es),this.ml0=this.a*Hy(this.e0,this.e1,this.e2,this.e3,this.lat0))},forward:function(l){var d,b,Z=l.x,c=l.y;if(Z=ji(Z-this.long0),this.sphere)d=this.a*Math.asin(Math.cos(c)*Math.sin(Z)),b=this.a*(Math.atan2(Math.tan(c),Math.cos(Z))-this.lat0);else{var m=Math.sin(c),X=Math.cos(c),u=zy(this.a,this.e,m),G=Math.tan(c)*Math.tan(c),W=Z*Math.cos(c),t=W*W,s=this.es*X*X/(1-this.es);d=u*W*(1-t*G*(1/6-(8-G+8*s)*t/120)),b=this.a*Hy(this.e0,this.e1,this.e2,this.e3,c)-this.ml0+u*m/X*t*(.5+(5-G+6*s)*t/24)}return l.x=d+this.x0,l.y=b+this.y0,l},inverse:function(l){l.x-=this.x0,l.y-=this.y0;var d,b,Z=l.x/this.a,c=l.y/this.a;if(this.sphere){var m=c+this.lat0;d=Math.asin(Math.sin(m)*Math.cos(Z)),b=Math.atan2(Math.tan(Z),Math.cos(m))}else{var X=Ty(this.ml0/this.a+c,this.e0,this.e1,this.e2,this.e3);if(Math.abs(Math.abs(X)-si)<=ii)return l.x=this.long0,l.y=si,c<0&&(l.y*=-1),l;var u=zy(this.a,this.e,Math.sin(X)),G=u*u*u/this.a/this.a*(1-this.es),W=Math.pow(Math.tan(X),2),t=Z*this.a/u,s=t*t;d=X-u*Math.tan(X)/G*t*t*(.5-(1+3*W)*t*t/24),b=t*(1-s*(W/3+(1+3*W)*W*s/15))/Math.cos(X)}return l.x=ji(b+this.long0),l.y=vy(d),l},names:["Cassini","Cassini_Soldner","cass"]};function Fy(l,d){var b;return l>1e-7?(1-l*l)*(d/(1-(b=l*d)*b)-.5/l*Math.log((1-b)/(1+b))):2*d}var Cy=.3333333333333333,Iy=.17222222222222222,gy=.10257936507936508,ky=.06388888888888888,ry=.0664021164021164,Ny=.016415012942191543;var Py={init:function(){var l,d=Math.abs(this.lat0);if(Math.abs(d-si)<ii?this.mode=this.lat0<0?this.S_POLE:this.N_POLE:Math.abs(d)<ii?this.mode=this.EQUIT:this.mode=this.OBLIQ,this.es>0)switch(this.qp=Fy(this.e,1),this.mmf=.5/(1-this.es),this.apa=function(l){var d,b=[];return b[0]=l*Cy,d=l*l,b[0]+=d*Iy,b[1]=d*ky,d*=l,b[0]+=d*gy,b[1]+=d*ry,b[2]=d*Ny,b}(this.es),this.mode){case this.N_POLE:case this.S_POLE:this.dd=1;break;case this.EQUIT:this.rq=Math.sqrt(.5*this.qp),this.dd=1/this.rq,this.xmf=1,this.ymf=.5*this.qp;break;case this.OBLIQ:this.rq=Math.sqrt(.5*this.qp),l=Math.sin(this.lat0),this.sinb1=Fy(this.e,l)/this.qp,this.cosb1=Math.sqrt(1-this.sinb1*this.sinb1),this.dd=Math.cos(this.lat0)/(Math.sqrt(1-this.es*l*l)*this.rq*this.cosb1),this.ymf=(this.xmf=this.rq)/this.dd,this.xmf*=this.dd}else this.mode===this.OBLIQ&&(this.sinph0=Math.sin(this.lat0),this.cosph0=Math.cos(this.lat0))},forward:function(l){var d,b,Z,c,m,X,u,G,W,t,s=l.x,a=l.y;if(s=ji(s-this.long0),this.sphere){if(m=Math.sin(a),t=Math.cos(a),Z=Math.cos(s),this.mode===this.OBLIQ||this.mode===this.EQUIT){if((b=this.mode===this.EQUIT?1+t*Z:1+this.sinph0*m+this.cosph0*t*Z)<=ii)return null;d=(b=Math.sqrt(2/b))*t*Math.sin(s),b*=this.mode===this.EQUIT?m:this.cosph0*m-this.sinph0*t*Z}else if(this.mode===this.N_POLE||this.mode===this.S_POLE){if(this.mode===this.N_POLE&&(Z=-Z),Math.abs(a+this.lat0)<ii)return null;b=Vi-.5*a,d=(b=2*(this.mode===this.S_POLE?Math.cos(b):Math.sin(b)))*Math.sin(s),b*=Z}}else{switch(u=0,G=0,W=0,Z=Math.cos(s),c=Math.sin(s),m=Math.sin(a),X=Fy(this.e,m),this.mode!==this.OBLIQ&&this.mode!==this.EQUIT||(u=X/this.qp,G=Math.sqrt(1-u*u)),this.mode){case this.OBLIQ:W=1+this.sinb1*u+this.cosb1*G*Z;break;case this.EQUIT:W=1+G*Z;break;case this.N_POLE:W=si+a,X=this.qp-X;break;case this.S_POLE:W=a-si,X=this.qp+X}if(Math.abs(W)<ii)return null;switch(this.mode){case this.OBLIQ:case this.EQUIT:W=Math.sqrt(2/W),b=this.mode===this.OBLIQ?this.ymf*W*(this.cosb1*u-this.sinb1*G*Z):(W=Math.sqrt(2/(1+G*Z)))*u*this.ymf,d=this.xmf*W*G*c;break;case this.N_POLE:case this.S_POLE:X>=0?(d=(W=Math.sqrt(X))*c,b=Z*(this.mode===this.S_POLE?W:-W)):d=b=0}}return l.x=this.a*d+this.x0,l.y=this.a*b+this.y0,l},inverse:function(l){l.x-=this.x0,l.y-=this.y0;var d,b,Z,c,m,X,u,G,W,t,s=l.x/this.a,a=l.y/this.a;if(this.sphere){var n,h=0,i=0;if((b=.5*(n=Math.sqrt(s*s+a*a)))>1)return null;switch(b=2*Math.asin(b),this.mode!==this.OBLIQ&&this.mode!==this.EQUIT||(i=Math.sin(b),h=Math.cos(b)),this.mode){case this.EQUIT:b=Math.abs(n)<=ii?0:Math.asin(a*i/n),s*=i,a=h*n;break;case this.OBLIQ:b=Math.abs(n)<=ii?this.lat0:Math.asin(h*this.sinph0+a*i*this.cosph0/n),s*=i*this.cosph0,a=(h-Math.sin(b)*this.sinph0)*n;break;case this.N_POLE:a=-a,b=si-b;break;case this.S_POLE:b-=si}d=0!==a||this.mode!==this.EQUIT&&this.mode!==this.OBLIQ?Math.atan2(s,a):0}else{if(u=0,this.mode===this.OBLIQ||this.mode===this.EQUIT){if(s/=this.dd,a*=this.dd,(X=Math.sqrt(s*s+a*a))<ii)return l.x=this.long0,l.y=this.lat0,l;c=2*Math.asin(.5*X/this.rq),Z=Math.cos(c),s*=c=Math.sin(c),this.mode===this.OBLIQ?(u=Z*this.sinb1+a*c*this.cosb1/X,m=this.qp*u,a=X*this.cosb1*Z-a*this.sinb1*c):(u=a*c/X,m=this.qp*u,a=X*Z)}else if(this.mode===this.N_POLE||this.mode===this.S_POLE){if(this.mode===this.N_POLE&&(a=-a),!(m=s*s+a*a))return l.x=this.long0,l.y=this.lat0,l;u=1-m/this.qp,this.mode===this.S_POLE&&(u=-u)}d=Math.atan2(s,a),G=Math.asin(u),W=this.apa,t=G+G,b=G+W[0]*Math.sin(t)+W[1]*Math.sin(t+t)+W[2]*Math.sin(t+t+t)}return l.x=ji(this.long0+d),l.y=b,l},names:["Lambert Azimuthal Equal Area","Lambert_Azimuthal_Equal_Area","laea"],S_POLE:1,N_POLE:2,EQUIT:3,OBLIQ:4};function wy(l){return Math.abs(l)>1&&(l=l>1?1:-1),Math.asin(l)}var By={init:function(){Math.abs(this.lat1+this.lat2)<ii||(this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e3=Math.sqrt(this.es),this.sin_po=Math.sin(this.lat1),this.cos_po=Math.cos(this.lat1),this.t1=this.sin_po,this.con=this.sin_po,this.ms1=Ui(this.e3,this.sin_po,this.cos_po),this.qs1=Fy(this.e3,this.sin_po),this.sin_po=Math.sin(this.lat2),this.cos_po=Math.cos(this.lat2),this.t2=this.sin_po,this.ms2=Ui(this.e3,this.sin_po,this.cos_po),this.qs2=Fy(this.e3,this.sin_po),this.sin_po=Math.sin(this.lat0),this.cos_po=Math.cos(this.lat0),this.t3=this.sin_po,this.qs0=Fy(this.e3,this.sin_po),Math.abs(this.lat1-this.lat2)>ii?this.ns0=(this.ms1*this.ms1-this.ms2*this.ms2)/(this.qs2-this.qs1):this.ns0=this.con,this.c=this.ms1*this.ms1+this.ns0*this.qs1,this.rh=this.a*Math.sqrt(this.c-this.ns0*this.qs0)/this.ns0)},forward:function(l){var d=l.x,b=l.y;this.sin_phi=Math.sin(b),this.cos_phi=Math.cos(b);var Z=Fy(this.e3,this.sin_phi),c=this.a*Math.sqrt(this.c-this.ns0*Z)/this.ns0,m=this.ns0*ji(d-this.long0),X=c*Math.sin(m)+this.x0,u=this.rh-c*Math.cos(m)+this.y0;return l.x=X,l.y=u,l},inverse:function(l){var d,b,Z,c,m,X;return l.x-=this.x0,l.y=this.rh-l.y+this.y0,this.ns0>=0?(d=Math.sqrt(l.x*l.x+l.y*l.y),Z=1):(d=-Math.sqrt(l.x*l.x+l.y*l.y),Z=-1),c=0,0!==d&&(c=Math.atan2(Z*l.x,Z*l.y)),Z=d*this.ns0/this.a,this.sphere?X=Math.asin((this.c-Z*Z)/(2*this.ns0)):(b=(this.c-Z*Z)/this.ns0,X=this.phi1z(this.e3,b)),m=ji(c/this.ns0+this.long0),l.x=m,l.y=X,l},names:["Albers_Conic_Equal_Area","Albers","aea"],phi1z:function(l,d){var b,Z,c,m,X=wy(.5*d);if(l<ii)return X;for(var u=l*l,G=1;G<=25;G++)if(X+=m=.5*(c=1-(Z=l*(b=Math.sin(X)))*Z)*c/Math.cos(X)*(d/(1-u)-b/c+.5/l*Math.log((1-Z)/(1+Z))),Math.abs(m)<=1e-7)return X;return null}};var Uy={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0),this.infinity_dist=1e3*this.a,this.rc=1},forward:function(l){var d,b,Z,c,m,X,u,G=l.x,W=l.y;return Z=ji(G-this.long0),d=Math.sin(W),b=Math.cos(W),c=Math.cos(Z),1,(m=this.sin_p14*d+this.cos_p14*b*c)>0||Math.abs(m)<=ii?(X=this.x0+1*this.a*b*Math.sin(Z)/m,u=this.y0+1*this.a*(this.cos_p14*d-this.sin_p14*b*c)/m):(X=this.x0+this.infinity_dist*b*Math.sin(Z),u=this.y0+this.infinity_dist*(this.cos_p14*d-this.sin_p14*b*c)),l.x=X,l.y=u,l},inverse:function(l){var d,b,Z,c,m,X;return l.x=(l.x-this.x0)/this.a,l.y=(l.y-this.y0)/this.a,l.x/=this.k0,l.y/=this.k0,(d=Math.sqrt(l.x*l.x+l.y*l.y))?(c=Math.atan2(d,this.rc),b=Math.sin(c),X=wy((Z=Math.cos(c))*this.sin_p14+l.y*b*this.cos_p14/d),m=Math.atan2(l.x*b,d*this.cos_p14*Z-l.y*this.sin_p14*b),m=ji(this.long0+m)):(X=this.phic0,m=0),l.x=m,l.y=X,l},names:["gnom"]};var fy={init:function(){this.sphere||(this.k0=Ui(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts)))},forward:function(l){var d,b,Z=l.x,c=l.y,m=ji(Z-this.long0);if(this.sphere)d=this.x0+this.a*m*Math.cos(this.lat_ts),b=this.y0+this.a*Math.sin(c)/Math.cos(this.lat_ts);else{var X=Fy(this.e,Math.sin(c));d=this.x0+this.a*this.k0*m,b=this.y0+this.a*X*.5/this.k0}return l.x=d,l.y=b,l},inverse:function(l){var d,b;return l.x-=this.x0,l.y-=this.y0,this.sphere?(d=ji(this.long0+l.x/this.a/Math.cos(this.lat_ts)),b=Math.asin(l.y/this.a*Math.cos(this.lat_ts))):(b=function(l,d){var b=1-(1-l*l)/(2*l)*Math.log((1-l)/(1+l));if(Math.abs(Math.abs(d)-b)<1e-6)return d<0?-1*si:si;for(var Z,c,m,X,u=Math.asin(.5*d),G=0;G<30;G++)if(c=Math.sin(u),m=Math.cos(u),X=l*c,u+=Z=Math.pow(1-X*X,2)/(2*m)*(d/(1-l*l)-c/(1-X*X)+.5/l*Math.log((1-X)/(1+X))),Math.abs(Z)<=1e-10)return u;return NaN}(this.e,2*l.y*this.k0/this.a),d=ji(this.long0+l.x/(this.a*this.k0))),l.x=d,l.y=b,l},names:["cea"]};var jy={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.lat_ts=this.lat_ts||0,this.title=this.title||"Equidistant Cylindrical (Plate Carre)",this.rc=Math.cos(this.lat_ts)},forward:function(l){var d=l.x,b=l.y,Z=ji(d-this.long0),c=vy(b-this.lat0);return l.x=this.x0+this.a*Z*this.rc,l.y=this.y0+this.a*c,l},inverse:function(l){var d=l.x,b=l.y;return l.x=ji(this.long0+(d-this.x0)/(this.a*this.rc)),l.y=vy(this.lat0+(b-this.y0)/this.a),l},names:["Equirectangular","Equidistant_Cylindrical","eqc"]};var Qy={init:function(){this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=xy(this.es),this.e1=Sy(this.es),this.e2=Yy(this.es),this.e3=Jy(this.es),this.ml0=this.a*Hy(this.e0,this.e1,this.e2,this.e3,this.lat0)},forward:function(l){var d,b,Z,c=l.x,m=l.y,X=ji(c-this.long0);if(Z=X*Math.sin(m),this.sphere)Math.abs(m)<=ii?(d=this.a*X,b=-1*this.a*this.lat0):(d=this.a*Math.sin(Z)/Math.tan(m),b=this.a*(vy(m-this.lat0)+(1-Math.cos(Z))/Math.tan(m)));else if(Math.abs(m)<=ii)d=this.a*X,b=-1*this.ml0;else{var u=zy(this.a,this.e,Math.sin(m))/Math.tan(m);d=u*Math.sin(Z),b=this.a*Hy(this.e0,this.e1,this.e2,this.e3,m)-this.ml0+u*(1-Math.cos(Z))}return l.x=d+this.x0,l.y=b+this.y0,l},inverse:function(l){var d,b,Z,c,m,X,u,G,W;if(Z=l.x-this.x0,c=l.y-this.y0,this.sphere)if(Math.abs(c+this.a*this.lat0)<=ii)d=ji(Z/this.a+this.long0),b=0;else{var t;for(X=this.lat0+c/this.a,u=Z*Z/this.a/this.a+X*X,G=X,m=20;m;--m)if(G+=W=-1*(X*(G*(t=Math.tan(G))+1)-G-.5*(G*G+u)*t)/((G-X)/t-1),Math.abs(W)<=ii){b=G;break}d=ji(this.long0+Math.asin(Z*Math.tan(G)/this.a)/Math.sin(b))}else if(Math.abs(c+this.ml0)<=ii)b=0,d=ji(this.long0+Z/this.a);else{var s,a,n,h,i;for(X=(this.ml0+c)/this.a,u=Z*Z/this.a/this.a+X*X,G=X,m=20;m;--m)if(i=this.e*Math.sin(G),s=Math.sqrt(1-i*i)*Math.tan(G),a=this.a*Hy(this.e0,this.e1,this.e2,this.e3,G),n=this.e0-2*this.e1*Math.cos(2*G)+4*this.e2*Math.cos(4*G)-6*this.e3*Math.cos(6*G),G-=W=(X*(s*(h=a/this.a)+1)-h-.5*s*(h*h+u))/(this.es*Math.sin(2*G)*(h*h+u-2*X*h)/(4*s)+(X-h)*(s*n-2/Math.sin(2*G))-n),Math.abs(W)<=ii){b=G;break}s=Math.sqrt(1-this.es*Math.pow(Math.sin(b),2))*Math.tan(b),d=ji(this.long0+Math.asin(Z*s/this.a)/Math.sin(b))}return l.x=d,l.y=b,l},names:["Polyconic","poly"]};var Ey={init:function(){this.A=[],this.A[1]=.6399175073,this.A[2]=-.1358797613,this.A[3]=.063294409,this.A[4]=-.02526853,this.A[5]=.0117879,this.A[6]=-.0055161,this.A[7]=.0026906,this.A[8]=-.001333,this.A[9]=67e-5,this.A[10]=-34e-5,this.B_re=[],this.B_im=[],this.B_re[1]=.7557853228,this.B_im[1]=0,this.B_re[2]=.249204646,this.B_im[2]=.003371507,this.B_re[3]=-.001541739,this.B_im[3]=.04105856,this.B_re[4]=-.10162907,this.B_im[4]=.01727609,this.B_re[5]=-.26623489,this.B_im[5]=-.36249218,this.B_re[6]=-.6870983,this.B_im[6]=-1.1651967,this.C_re=[],this.C_im=[],this.C_re[1]=1.3231270439,this.C_im[1]=0,this.C_re[2]=-.577245789,this.C_im[2]=-.007809598,this.C_re[3]=.508307513,this.C_im[3]=-.112208952,this.C_re[4]=-.15094762,this.C_im[4]=.18200602,this.C_re[5]=1.01418179,this.C_im[5]=1.64497696,this.C_re[6]=1.9660549,this.C_im[6]=2.5127645,this.D=[],this.D[1]=1.5627014243,this.D[2]=.5185406398,this.D[3]=-.03333098,this.D[4]=-.1052906,this.D[5]=-.0368594,this.D[6]=.007317,this.D[7]=.0122,this.D[8]=.00394,this.D[9]=-.0013},forward:function(l){var d,b=l.x,Z=l.y-this.lat0,c=b-this.long0,m=Z/ti*1e-5,X=c,u=1,G=0;for(d=1;d<=10;d++)u*=m,G+=this.A[d]*u;var W,t=G,s=X,a=1,n=0,h=0,i=0;for(d=1;d<=6;d++)W=n*t+a*s,a=a*t-n*s,n=W,h=h+this.B_re[d]*a-this.B_im[d]*n,i=i+this.B_im[d]*a+this.B_re[d]*n;return l.x=i*this.a+this.x0,l.y=h*this.a+this.y0,l},inverse:function(l){var d,b,Z=l.x,c=l.y,m=Z-this.x0,X=(c-this.y0)/this.a,u=m/this.a,G=1,W=0,t=0,s=0;for(d=1;d<=6;d++)b=W*X+G*u,G=G*X-W*u,W=b,t=t+this.C_re[d]*G-this.C_im[d]*W,s=s+this.C_im[d]*G+this.C_re[d]*W;for(var a=0;a<this.iterations;a++){var n,h=t,i=s,p=X,y=u;for(d=2;d<=6;d++)n=i*t+h*s,h=h*t-i*s,i=n,p+=(d-1)*(this.B_re[d]*h-this.B_im[d]*i),y+=(d-1)*(this.B_im[d]*h+this.B_re[d]*i);h=1,i=0;var V=this.B_re[1],o=this.B_im[1];for(d=2;d<=6;d++)n=i*t+h*s,h=h*t-i*s,i=n,V+=d*(this.B_re[d]*h-this.B_im[d]*i),o+=d*(this.B_im[d]*h+this.B_re[d]*i);var R=V*V+o*o;t=(p*V+y*o)/R,s=(y*V-p*o)/R}var L=t,K=s,e=1,H=0;for(d=1;d<=9;d++)e*=L,H+=this.D[d]*e;var x=this.lat0+H*ti*1e5,S=this.long0+K;return l.x=S,l.y=x,l},names:["New_Zealand_Map_Grid","nzmg"]};var Oy={init:function(){},forward:function(l){var d=l.x,b=l.y,Z=ji(d-this.long0),c=this.x0+this.a*Z,m=this.y0+this.a*Math.log(Math.tan(Math.PI/4+b/2.5))*1.25;return l.x=c,l.y=m,l},inverse:function(l){l.x-=this.x0,l.y-=this.y0;var d=ji(this.long0+l.x/this.a),b=2.5*(Math.atan(Math.exp(.8*l.y/this.a))-Math.PI/4);return l.x=d,l.y=b,l},names:["Miller_Cylindrical","mill"]};var Dy={init:function(){this.sphere?(this.n=1,this.m=0,this.es=0,this.C_y=Math.sqrt((this.m+1)/this.n),this.C_x=this.C_y/(this.m+1)):this.en=Zy(this.es)},forward:function(l){var d,b,Z=l.x,c=l.y;if(Z=ji(Z-this.long0),this.sphere){if(this.m)for(var m=this.n*Math.sin(c),X=20;X;--X){var u=(this.m*c+Math.sin(c)-m)/(this.m+Math.cos(c));if(c-=u,Math.abs(u)<ii)break}else c=1!==this.n?Math.asin(this.n*Math.sin(c)):c;d=this.a*this.C_x*Z*(this.m+Math.cos(c)),b=this.a*this.C_y*c}else{var G=Math.sin(c),W=Math.cos(c);b=this.a*cy(c,G,W,this.en),d=this.a*Z*W/Math.sqrt(1-this.es*G*G)}return l.x=d,l.y=b,l},inverse:function(l){var d,b,Z;return l.x-=this.x0,b=l.x/this.a,l.y-=this.y0,d=l.y/this.a,this.sphere?(d/=this.C_y,b/=this.C_x*(this.m+Math.cos(d)),this.m?d=wy((this.m*d+Math.sin(d))/this.n):1!==this.n&&(d=wy(Math.sin(d)/this.n)),b=ji(b+this.long0),d=vy(d)):(d=Xy(l.y/this.a,this.es,this.en),(Z=Math.abs(d))<si?(Z=Math.sin(d),b=ji(this.long0+l.x*Math.sqrt(1-this.es*Z*Z)/(this.a*Math.cos(d)))):Z-ii<si&&(b=this.long0)),l.x=b,l.y=d,l},names:["Sinusoidal","sinu"]};var Ay={init:function(){},forward:function(l){for(var d=l.x,b=l.y,Z=ji(d-this.long0),c=b,m=Math.PI*Math.sin(b);;){var X=-(c+Math.sin(c)-m)/(1+Math.cos(c));if(c+=X,Math.abs(X)<ii)break}c/=2,Math.PI/2-Math.abs(b)<ii&&(Z=0);var u=.900316316158*this.a*Z*Math.cos(c)+this.x0,G=1.4142135623731*this.a*Math.sin(c)+this.y0;return l.x=u,l.y=G,l},inverse:function(l){var d,b;l.x-=this.x0,l.y-=this.y0,b=l.y/(1.4142135623731*this.a),Math.abs(b)>.999999999999&&(b=.999999999999),d=Math.asin(b);var Z=ji(this.long0+l.x/(.900316316158*this.a*Math.cos(d)));Z<-Math.PI&&(Z=-Math.PI),Z>Math.PI&&(Z=Math.PI),b=(2*d+Math.sin(2*d))/Math.PI,Math.abs(b)>1&&(b=1);var c=Math.asin(b);return l.x=Z,l.y=c,l},names:["Mollweide","moll"]};var _y={init:function(){Math.abs(this.lat1+this.lat2)<ii||(this.lat2=this.lat2||this.lat1,this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=xy(this.es),this.e1=Sy(this.es),this.e2=Yy(this.es),this.e3=Jy(this.es),this.sinphi=Math.sin(this.lat1),this.cosphi=Math.cos(this.lat1),this.ms1=Ui(this.e,this.sinphi,this.cosphi),this.ml1=Hy(this.e0,this.e1,this.e2,this.e3,this.lat1),Math.abs(this.lat1-this.lat2)<ii?this.ns=this.sinphi:(this.sinphi=Math.sin(this.lat2),this.cosphi=Math.cos(this.lat2),this.ms2=Ui(this.e,this.sinphi,this.cosphi),this.ml2=Hy(this.e0,this.e1,this.e2,this.e3,this.lat2),this.ns=(this.ms1-this.ms2)/(this.ml2-this.ml1)),this.g=this.ml1+this.ms1/this.ns,this.ml0=Hy(this.e0,this.e1,this.e2,this.e3,this.lat0),this.rh=this.a*(this.g-this.ml0))},forward:function(l){var d,b=l.x,Z=l.y;if(this.sphere)d=this.a*(this.g-Z);else{var c=Hy(this.e0,this.e1,this.e2,this.e3,Z);d=this.a*(this.g-c)}var m=this.ns*ji(b-this.long0),X=this.x0+d*Math.sin(m),u=this.y0+this.rh-d*Math.cos(m);return l.x=X,l.y=u,l},inverse:function(l){var d,b,Z,c;l.x-=this.x0,l.y=this.rh-l.y+this.y0,this.ns>=0?(b=Math.sqrt(l.x*l.x+l.y*l.y),d=1):(b=-Math.sqrt(l.x*l.x+l.y*l.y),d=-1);var m=0;return 0!==b&&(m=Math.atan2(d*l.x,d*l.y)),this.sphere?(c=ji(this.long0+m/this.ns),Z=vy(this.g-b/this.a),l.x=c,l.y=Z,l):(Z=Ty(this.g-b/this.a,this.e0,this.e1,this.e2,this.e3),c=ji(this.long0+m/this.ns),l.x=c,l.y=Z,l)},names:["Equidistant_Conic","eqdc"]};var qy={init:function(){this.R=this.a},forward:function(l){var d,b,Z=l.x,c=l.y,m=ji(Z-this.long0);Math.abs(c)<=ii&&(d=this.x0+this.R*m,b=this.y0);var X=wy(2*Math.abs(c/Math.PI));(Math.abs(m)<=ii||Math.abs(Math.abs(c)-si)<=ii)&&(d=this.x0,b=c>=0?this.y0+Math.PI*this.R*Math.tan(.5*X):this.y0+Math.PI*this.R*-Math.tan(.5*X));var u=.5*Math.abs(Math.PI/m-m/Math.PI),G=u*u,W=Math.sin(X),t=Math.cos(X),s=t/(W+t-1),a=s*s,n=s*(2/W-1),h=n*n,i=Math.PI*this.R*(u*(s-h)+Math.sqrt(G*(s-h)*(s-h)-(h+G)*(a-h)))/(h+G);m<0&&(i=-i),d=this.x0+i;var p=G+s;return i=Math.PI*this.R*(n*p-u*Math.sqrt((h+G)*(G+1)-p*p))/(h+G),b=c>=0?this.y0+i:this.y0-i,l.x=d,l.y=b,l},inverse:function(l){var d,b,Z,c,m,X,u,G,W,t,s,a;return l.x-=this.x0,l.y-=this.y0,s=Math.PI*this.R,m=(Z=l.x/s)*Z+(c=l.y/s)*c,s=3*(c*c/(G=-2*(X=-Math.abs(c)*(1+m))+1+2*c*c+m*m)+(2*(u=X-2*c*c+Z*Z)*u*u/G/G/G-9*X*u/G/G)/27)/(W=(X-u*u/3/G)/G)/(t=2*Math.sqrt(-W/3)),Math.abs(s)>1&&(s=s>=0?1:-1),a=Math.acos(s)/3,b=l.y>=0?(-t*Math.cos(a+Math.PI/3)-u/3/G)*Math.PI:-(-t*Math.cos(a+Math.PI/3)-u/3/G)*Math.PI,d=Math.abs(Z)<ii?this.long0:ji(this.long0+Math.PI*(m-1+Math.sqrt(1+2*(Z*Z-c*c)+m*m))/2/Z),l.x=d,l.y=b,l},names:["Van_der_Grinten_I","VanDerGrinten","vandg"]};var $y={init:function(){this.sin_p12=Math.sin(this.lat0),this.cos_p12=Math.cos(this.lat0)},forward:function(l){var d,b,Z,c,m,X,u,G,W,t,s,a,n,h,i,p,y,V,o,R,L,K,e=l.x,H=l.y,x=Math.sin(l.y),S=Math.cos(l.y),Y=ji(e-this.long0);return this.sphere?Math.abs(this.sin_p12-1)<=ii?(l.x=this.x0+this.a*(si-H)*Math.sin(Y),l.y=this.y0-this.a*(si-H)*Math.cos(Y),l):Math.abs(this.sin_p12+1)<=ii?(l.x=this.x0+this.a*(si+H)*Math.sin(Y),l.y=this.y0+this.a*(si+H)*Math.cos(Y),l):(V=this.sin_p12*x+this.cos_p12*S*Math.cos(Y),y=(p=Math.acos(V))?p/Math.sin(p):1,l.x=this.x0+this.a*y*S*Math.sin(Y),l.y=this.y0+this.a*y*(this.cos_p12*x-this.sin_p12*S*Math.cos(Y)),l):(d=xy(this.es),b=Sy(this.es),Z=Yy(this.es),c=Jy(this.es),Math.abs(this.sin_p12-1)<=ii?(m=this.a*Hy(d,b,Z,c,si),X=this.a*Hy(d,b,Z,c,H),l.x=this.x0+(m-X)*Math.sin(Y),l.y=this.y0-(m-X)*Math.cos(Y),l):Math.abs(this.sin_p12+1)<=ii?(m=this.a*Hy(d,b,Z,c,si),X=this.a*Hy(d,b,Z,c,H),l.x=this.x0+(m+X)*Math.sin(Y),l.y=this.y0+(m+X)*Math.cos(Y),l):(u=x/S,G=zy(this.a,this.e,this.sin_p12),W=zy(this.a,this.e,x),t=Math.atan((1-this.es)*u+this.es*G*this.sin_p12/(W*S)),o=0===(s=Math.atan2(Math.sin(Y),this.cos_p12*Math.tan(t)-this.sin_p12*Math.cos(Y)))?Math.asin(this.cos_p12*Math.sin(t)-this.sin_p12*Math.cos(t)):Math.abs(Math.abs(s)-Math.PI)<=ii?-Math.asin(this.cos_p12*Math.sin(t)-this.sin_p12*Math.cos(t)):Math.asin(Math.sin(Y)*Math.cos(t)/Math.sin(s)),a=this.e*this.sin_p12/Math.sqrt(1-this.es),p=G*o*(1-(R=o*o)*(i=(n=this.e*this.cos_p12*Math.cos(s)/Math.sqrt(1-this.es))*n)*(1-i)/6+(L=R*o)/8*(h=a*n)*(1-2*i)+(K=L*o)/120*(i*(4-7*i)-3*a*a*(1-7*i))-K*o/48*h),l.x=this.x0+p*Math.sin(s),l.y=this.y0+p*Math.cos(s),l))},inverse:function(l){var d,b,Z,c,m,X,u,G,W,t,s,a,n,h,i,p,y,V,o,R,L,K,e;if(l.x-=this.x0,l.y-=this.y0,this.sphere){if((d=Math.sqrt(l.x*l.x+l.y*l.y))>2*si*this.a)return;return b=d/this.a,Z=Math.sin(b),c=Math.cos(b),m=this.long0,Math.abs(d)<=ii?X=this.lat0:(X=wy(c*this.sin_p12+l.y*Z*this.cos_p12/d),u=Math.abs(this.lat0)-si,m=Math.abs(u)<=ii?this.lat0>=0?ji(this.long0+Math.atan2(l.x,-l.y)):ji(this.long0-Math.atan2(-l.x,l.y)):ji(this.long0+Math.atan2(l.x*Z,d*this.cos_p12*c-l.y*this.sin_p12*Z))),l.x=m,l.y=X,l}return G=xy(this.es),W=Sy(this.es),t=Yy(this.es),s=Jy(this.es),Math.abs(this.sin_p12-1)<=ii?(X=Ty(((a=this.a*Hy(G,W,t,s,si))-(d=Math.sqrt(l.x*l.x+l.y*l.y)))/this.a,G,W,t,s),m=ji(this.long0+Math.atan2(l.x,-1*l.y)),l.x=m,l.y=X,l):Math.abs(this.sin_p12+1)<=ii?(a=this.a*Hy(G,W,t,s,si),X=Ty(((d=Math.sqrt(l.x*l.x+l.y*l.y))-a)/this.a,G,W,t,s),m=ji(this.long0+Math.atan2(l.x,l.y)),l.x=m,l.y=X,l):(d=Math.sqrt(l.x*l.x+l.y*l.y),i=Math.atan2(l.x,l.y),n=zy(this.a,this.e,this.sin_p12),p=Math.cos(i),V=-(y=this.e*this.cos_p12*p)*y/(1-this.es),o=3*this.es*(1-V)*this.sin_p12*this.cos_p12*p/(1-this.es),K=1-V*(L=(R=d/n)-V*(1+V)*Math.pow(R,3)/6-o*(1+3*V)*Math.pow(R,4)/24)*L/2-R*L*L*L/6,h=Math.asin(this.sin_p12*Math.cos(L)+this.cos_p12*Math.sin(L)*p),m=ji(this.long0+Math.asin(Math.sin(i)*Math.sin(L)/Math.cos(h))),e=Math.sin(h),X=Math.atan2((e-this.es*K*this.sin_p12)*Math.tan(h),e*(1-this.es)),l.x=m,l.y=X,l)},names:["Azimuthal_Equidistant","aeqd"]};var lV={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0)},forward:function(l){var d,b,Z,c,m,X,u,G=l.x,W=l.y;return Z=ji(G-this.long0),d=Math.sin(W),b=Math.cos(W),c=Math.cos(Z),1,((m=this.sin_p14*d+this.cos_p14*b*c)>0||Math.abs(m)<=ii)&&(X=1*this.a*b*Math.sin(Z),u=this.y0+1*this.a*(this.cos_p14*d-this.sin_p14*b*c)),l.x=X,l.y=u,l},inverse:function(l){var d,b,Z,c,m,X,u;return l.x-=this.x0,l.y-=this.y0,b=wy((d=Math.sqrt(l.x*l.x+l.y*l.y))/this.a),Z=Math.sin(b),c=Math.cos(b),X=this.long0,Math.abs(d)<=ii?(u=this.lat0,l.x=X,l.y=u,l):(u=wy(c*this.sin_p14+l.y*Z*this.cos_p14/d),m=Math.abs(this.lat0)-si,Math.abs(m)<=ii?(X=this.lat0>=0?ji(this.long0+Math.atan2(l.x,-l.y)):ji(this.long0-Math.atan2(-l.x,l.y)),l.x=X,l.y=u,l):(X=ji(this.long0+Math.atan2(l.x*Z,d*this.cos_p14*c-l.y*this.sin_p14*Z)),l.x=X,l.y=u,l))},names:["ortho"]},dV=1,bV=2,ZV=3,cV=4,mV=5,XV=6,uV={AREA_0:1,AREA_1:2,AREA_2:3,AREA_3:4};function GV(l,d,b,Z){var c;return l<ii?(Z.value=uV.AREA_0,c=0):(c=Math.atan2(d,b),Math.abs(c)<=Vi?Z.value=uV.AREA_0:c>Vi&&c<=si+Vi?(Z.value=uV.AREA_1,c-=si):c>si+Vi||c<=-(si+Vi)?(Z.value=uV.AREA_2,c=c>=0?c-Ri:c+Ri):(Z.value=uV.AREA_3,c+=si)),c}function WV(l,d){var b=l+d;return b<-Ri?b+=oi:b>+Ri&&(b-=oi),b}var tV={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.lat_ts=this.lat_ts||0,this.title=this.title||"Quadrilateralized Spherical Cube",this.lat0>=si-Vi/2?this.face=mV:this.lat0<=-(si-Vi/2)?this.face=XV:Math.abs(this.long0)<=Vi?this.face=dV:Math.abs(this.long0)<=si+Vi?this.face=this.long0>0?bV:cV:this.face=ZV,0!==this.es&&(this.one_minus_f=1-(this.a-this.b)/this.a,this.one_minus_f_squared=this.one_minus_f*this.one_minus_f)},forward:function(l){var d,b,Z,c,m,X,u={x:0,y:0},G={value:0};if(l.x-=this.long0,d=0!==this.es?Math.atan(this.one_minus_f_squared*Math.tan(l.y)):l.y,b=l.x,this.face===mV)c=si-d,b>=Vi&&b<=si+Vi?(G.value=uV.AREA_0,Z=b-si):b>si+Vi||b<=-(si+Vi)?(G.value=uV.AREA_1,Z=b>0?b-Ri:b+Ri):b>-(si+Vi)&&b<=-Vi?(G.value=uV.AREA_2,Z=b+si):(G.value=uV.AREA_3,Z=b);else if(this.face===XV)c=si+d,b>=Vi&&b<=si+Vi?(G.value=uV.AREA_0,Z=-b+si):b<Vi&&b>=-Vi?(G.value=uV.AREA_1,Z=-b):b<-Vi&&b>=-(si+Vi)?(G.value=uV.AREA_2,Z=-b-si):(G.value=uV.AREA_3,Z=b>0?-b+Ri:-b-Ri);else{var W,t,s,a,n,h;this.face===bV?b=WV(b,+si):this.face===ZV?b=WV(b,+Ri):this.face===cV&&(b=WV(b,-si)),a=Math.sin(d),n=Math.cos(d),h=Math.sin(b),W=n*Math.cos(b),t=n*h,s=a,this.face===dV?Z=GV(c=Math.acos(W),s,t,G):this.face===bV?Z=GV(c=Math.acos(t),s,-W,G):this.face===ZV?Z=GV(c=Math.acos(-W),s,-t,G):this.face===cV?Z=GV(c=Math.acos(-t),s,W,G):(c=Z=0,G.value=uV.AREA_0)}return X=Math.atan(12/Ri*(Z+Math.acos(Math.sin(Z)*Math.cos(Vi))-si)),m=Math.sqrt((1-Math.cos(c))/(Math.cos(X)*Math.cos(X))/(1-Math.cos(Math.atan(1/Math.cos(Z))))),G.value===uV.AREA_1?X+=si:G.value===uV.AREA_2?X+=Ri:G.value===uV.AREA_3&&(X+=1.5*Ri),u.x=m*Math.cos(X),u.y=m*Math.sin(X),u.x=u.x*this.a+this.x0,u.y=u.y*this.a+this.y0,l.x=u.x,l.y=u.y,l},inverse:function(l){var d,b,Z,c,m,X,u,G,W,t,s,a,n={lam:0,phi:0},h={value:0};if(l.x=(l.x-this.x0)/this.a,l.y=(l.y-this.y0)/this.a,b=Math.atan(Math.sqrt(l.x*l.x+l.y*l.y)),d=Math.atan2(l.y,l.x),l.x>=0&&l.x>=Math.abs(l.y)?h.value=uV.AREA_0:l.y>=0&&l.y>=Math.abs(l.x)?(h.value=uV.AREA_1,d-=si):l.x<0&&-l.x>=Math.abs(l.y)?(h.value=uV.AREA_2,d=d<0?d+Ri:d-Ri):(h.value=uV.AREA_3,d+=si),W=Ri/12*Math.tan(d),m=Math.sin(W)/(Math.cos(W)-1/Math.sqrt(2)),X=Math.atan(m),(u=1-(Z=Math.cos(d))*Z*(c=Math.tan(b))*c*(1-Math.cos(Math.atan(1/Math.cos(X)))))<-1?u=-1:u>1&&(u=1),this.face===mV)G=Math.acos(u),n.phi=si-G,h.value===uV.AREA_0?n.lam=X+si:h.value===uV.AREA_1?n.lam=X<0?X+Ri:X-Ri:h.value===uV.AREA_2?n.lam=X-si:n.lam=X;else if(this.face===XV)G=Math.acos(u),n.phi=G-si,h.value===uV.AREA_0?n.lam=-X+si:h.value===uV.AREA_1?n.lam=-X:h.value===uV.AREA_2?n.lam=-X-si:n.lam=X<0?-X-Ri:-X+Ri;else{var i,p,y;W=(i=u)*i,p=(W+=(y=W>=1?0:Math.sqrt(1-W)*Math.sin(X))*y)>=1?0:Math.sqrt(1-W),h.value===uV.AREA_1?(W=p,p=-y,y=W):h.value===uV.AREA_2?(p=-p,y=-y):h.value===uV.AREA_3&&(W=p,p=y,y=-W),this.face===bV?(W=i,i=-p,p=W):this.face===ZV?(i=-i,p=-p):this.face===cV&&(W=i,i=p,p=-W),n.phi=Math.acos(-y)-si,n.lam=Math.atan2(p,i),this.face===bV?n.lam=WV(n.lam,-si):this.face===ZV?n.lam=WV(n.lam,-Ri):this.face===cV&&(n.lam=WV(n.lam,+si))}return 0!==this.es&&(t=n.phi<0?1:0,s=Math.tan(n.phi),a=this.b/Math.sqrt(s*s+this.one_minus_f_squared),n.phi=Math.atan(Math.sqrt(this.a*this.a-a*a)/(this.one_minus_f*a)),t&&(n.phi=-n.phi)),n.lam+=this.long0,l.x=n.lam,l.y=n.phi,l},names:["Quadrilateralized Spherical Cube","Quadrilateralized_Spherical_Cube","qsc"]},sV=[[1,22199e-21,-715515e-10,31103e-10],[.9986,-482243e-9,-24897e-9,-13309e-10],[.9954,-83103e-8,-448605e-10,-9.86701e-7],[.99,-.00135364,-59661e-9,36777e-10],[.9822,-.00167442,-449547e-11,-572411e-11],[.973,-.00214868,-903571e-10,1.8736e-8],[.96,-.00305085,-900761e-10,164917e-11],[.9427,-.00382792,-653386e-10,-26154e-10],[.9216,-.00467746,-10457e-8,481243e-11],[.8962,-.00536223,-323831e-10,-543432e-11],[.8679,-.00609363,-113898e-9,332484e-11],[.835,-.00698325,-640253e-10,9.34959e-7],[.7986,-.00755338,-500009e-10,9.35324e-7],[.7597,-.00798324,-35971e-9,-227626e-11],[.7186,-.00851367,-701149e-10,-86303e-10],[.6732,-.00986209,-199569e-9,191974e-10],[.6213,-.010418,883923e-10,624051e-11],[.5722,-.00906601,182e-6,624051e-11],[.5322,-.00677797,275608e-9,624051e-11]],aV=[[-520417e-23,.0124,121431e-23,-845284e-16],[.062,.0124,-1.26793e-9,4.22642e-10],[.124,.0124,5.07171e-9,-1.60604e-9],[.186,.0123999,-1.90189e-8,6.00152e-9],[.248,.0124002,7.10039e-8,-2.24e-8],[.31,.0123992,-2.64997e-7,8.35986e-8],[.372,.0124029,9.88983e-7,-3.11994e-7],[.434,.0123893,-369093e-11,-4.35621e-7],[.4958,.0123198,-102252e-10,-3.45523e-7],[.5571,.0121916,-154081e-10,-5.82288e-7],[.6176,.0119938,-241424e-10,-5.25327e-7],[.6769,.011713,-320223e-10,-5.16405e-7],[.7346,.0113541,-397684e-10,-6.09052e-7],[.7903,.0109107,-489042e-10,-104739e-11],[.8435,.0103431,-64615e-9,-1.40374e-9],[.8936,.00969686,-64636e-9,-8547e-9],[.9394,.00840947,-192841e-9,-42106e-10],[.9761,.00616527,-256e-6,-42106e-10],[1,.00328947,-319159e-9,-42106e-10]],nV=.8487,hV=1.3523,iV=yi/5,pV=1/iV,yV=18,VV=function(l,d){return l[0]+d*(l[1]+d*(l[2]+d*l[3]))};var oV={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.long0=this.long0||0,this.es=0,this.title=this.title||"Robinson"},forward:function(l){var d=ji(l.x-this.long0),b=Math.abs(l.y),Z=Math.floor(b*iV);Z<0?Z=0:Z>=yV&&(Z=17);var c={x:VV(sV[Z],b=yi*(b-pV*Z))*d,y:VV(aV[Z],b)};return l.y<0&&(c.y=-c.y),c.x=c.x*this.a*nV+this.x0,c.y=c.y*this.a*hV+this.y0,c},inverse:function(l){var d={x:(l.x-this.x0)/(this.a*nV),y:Math.abs(l.y-this.y0)/(this.a*hV)};if(d.y>=1)d.x/=sV[18][0],d.y=l.y<0?-si:si;else{var b=Math.floor(d.y*yV);for(b<0?b=0:b>=yV&&(b=17);;)if(aV[b][0]>d.y)--b;else{if(!(aV[b+1][0]<=d.y))break;++b}var Z=aV[b],c=5*(d.y-Z[0])/(aV[b+1][0]-Z[0]);c=function(l,d,b,Z){for(var c=d;Z;--Z){var m=l(c);if(c-=m,Math.abs(m)<b)break}return c}((function(l){return(VV(Z,l)-d.y)/function(l,d){return l[1]+d*(2*l[2]+3*d*l[3])}(Z,l)}),c,ii,100),d.x/=VV(sV[b],c),d.y=(5*b+c)*pi,l.y<0&&(d.y=-d.y)}return d.x=ji(d.x+this.long0),d},names:["Robinson","robin"]};var RV={init:function(){this.name="geocent"},forward:function(l){return sp(l,this.es,this.a)},inverse:function(l){return ap(l,this.es,this.a,this.b)},names:["Geocentric","geocentric","geocent","Geocent"]},LV=0,KV=1,eV=2,HV=3,xV={h:{def:1e5,num:!0},azi:{def:0,num:!0,degrees:!0},tilt:{def:0,num:!0,degrees:!0},long0:{def:0,num:!0},lat0:{def:0,num:!0}};var SV={init:function(){if(Object.keys(xV).forEach(function(l){if(void 0===this[l])this[l]=xV[l].def;else{if(xV[l].num&&isNaN(this[l]))throw new Error("Invalid parameter value, must be numeric "+l+" = "+this[l]);xV[l].num&&(this[l]=parseFloat(this[l]))}xV[l].degrees&&(this[l]=this[l]*pi)}.bind(this)),Math.abs(Math.abs(this.lat0)-si)<ii?this.mode=this.lat0<0?KV:LV:Math.abs(this.lat0)<ii?this.mode=eV:(this.mode=HV,this.sinph0=Math.sin(this.lat0),this.cosph0=Math.cos(this.lat0)),this.pn1=this.h/this.a,this.pn1<=0||this.pn1>1e10)throw new Error("Invalid height");this.p=1+this.pn1,this.rp=1/this.p,this.h1=1/this.pn1,this.pfact=(this.p+1)*this.h1,this.es=0;var l=this.tilt,d=this.azi;this.cg=Math.cos(d),this.sg=Math.sin(d),this.cw=Math.cos(l),this.sw=Math.sin(l)},forward:function(l){l.x-=this.long0;var d,b,Z,c,m=Math.sin(l.y),X=Math.cos(l.y),u=Math.cos(l.x);switch(this.mode){case HV:b=this.sinph0*m+this.cosph0*X*u;break;case eV:b=X*u;break;case KV:b=-m;break;case LV:b=m}switch(d=(b=this.pn1/(this.p-b))*X*Math.sin(l.x),this.mode){case HV:b*=this.cosph0*m-this.sinph0*X*u;break;case eV:b*=m;break;case LV:b*=-X*u;break;case KV:b*=X*u}return c=1/((Z=b*this.cg+d*this.sg)*this.sw*this.h1+this.cw),d=(d*this.cg-b*this.sg)*this.cw*c,b=Z*c,l.x=d*this.a,l.y=b*this.a,l},inverse:function(l){l.x/=this.a,l.y/=this.a;var d,b,Z,c={x:l.x,y:l.y};Z=1/(this.pn1-l.y*this.sw),d=this.pn1*l.x*Z,b=this.pn1*l.y*this.cw*Z,l.x=d*this.cg+b*this.sg,l.y=b*this.cg-d*this.sg;var m=Wy(l.x,l.y);if(Math.abs(m)<ii)c.x=0,c.y=l.y;else{var X,u;switch(u=1-m*m*this.pfact,u=(this.p-Math.sqrt(u))/(this.pn1/m+m/this.pn1),X=Math.sqrt(1-u*u),this.mode){case HV:c.y=Math.asin(X*this.sinph0+l.y*u*this.cosph0/m),l.y=(X-this.sinph0*Math.sin(c.y))*m,l.x*=u*this.cosph0;break;case eV:c.y=Math.asin(l.y*u/m),l.y=X*m,l.x*=u;break;case LV:c.y=Math.asin(X),l.y=-l.y;break;case KV:c.y=-Math.asin(X)}c.x=Math.atan2(l.x,l.y)}return l.x=c.x+this.long0,l.y=c.y,l},names:["Tilted_Perspective","tpers"]};var YV={init:function(){if(this.flip_axis="x"===this.sweep?1:0,this.h=Number(this.h),this.radius_g_1=this.h/this.a,this.radius_g_1<=0||this.radius_g_1>1e10)throw new Error;if(this.radius_g=1+this.radius_g_1,this.C=this.radius_g*this.radius_g-1,0!==this.es){var l=1-this.es,d=1/l;this.radius_p=Math.sqrt(l),this.radius_p2=l,this.radius_p_inv2=d,this.shape="ellipse"}else this.radius_p=1,this.radius_p2=1,this.radius_p_inv2=1,this.shape="sphere";this.title||(this.title="Geostationary Satellite View")},forward:function(l){var d,b,Z,c,m=l.x,X=l.y;if(m-=this.long0,"ellipse"===this.shape){X=Math.atan(this.radius_p2*Math.tan(X));var u=this.radius_p/Wy(this.radius_p*Math.cos(X),Math.sin(X));if(b=u*Math.cos(m)*Math.cos(X),Z=u*Math.sin(m)*Math.cos(X),c=u*Math.sin(X),(this.radius_g-b)*b-Z*Z-c*c*this.radius_p_inv2<0)return l.x=Number.NaN,l.y=Number.NaN,l;d=this.radius_g-b,this.flip_axis?(l.x=this.radius_g_1*Math.atan(Z/Wy(c,d)),l.y=this.radius_g_1*Math.atan(c/d)):(l.x=this.radius_g_1*Math.atan(Z/d),l.y=this.radius_g_1*Math.atan(c/Wy(Z,d)))}else"sphere"===this.shape&&(d=Math.cos(X),b=Math.cos(m)*d,Z=Math.sin(m)*d,c=Math.sin(X),d=this.radius_g-b,this.flip_axis?(l.x=this.radius_g_1*Math.atan(Z/Wy(c,d)),l.y=this.radius_g_1*Math.atan(c/d)):(l.x=this.radius_g_1*Math.atan(Z/d),l.y=this.radius_g_1*Math.atan(c/Wy(Z,d))));return l.x=l.x*this.a,l.y=l.y*this.a,l},inverse:function(l){var d,b,Z,c,m=-1,X=0,u=0;if(l.x=l.x/this.a,l.y=l.y/this.a,"ellipse"===this.shape){this.flip_axis?(u=Math.tan(l.y/this.radius_g_1),X=Math.tan(l.x/this.radius_g_1)*Wy(1,u)):(X=Math.tan(l.x/this.radius_g_1),u=Math.tan(l.y/this.radius_g_1)*Wy(1,X));var G=u/this.radius_p;if(d=X*X+G*G+m*m,(Z=(b=2*this.radius_g*m)*b-4*d*this.C)<0)return l.x=Number.NaN,l.y=Number.NaN,l;c=(-b-Math.sqrt(Z))/(2*d),m=this.radius_g+c*m,X*=c,u*=c,l.x=Math.atan2(X,m),l.y=Math.atan(u*Math.cos(l.x)/m),l.y=Math.atan(this.radius_p_inv2*Math.tan(l.y))}else if("sphere"===this.shape){if(this.flip_axis?(u=Math.tan(l.y/this.radius_g_1),X=Math.tan(l.x/this.radius_g_1)*Math.sqrt(1+u*u)):(X=Math.tan(l.x/this.radius_g_1),u=Math.tan(l.y/this.radius_g_1)*Math.sqrt(1+X*X)),d=X*X+u*u+m*m,(Z=(b=2*this.radius_g*m)*b-4*d*this.C)<0)return l.x=Number.NaN,l.y=Number.NaN,l;c=(-b-Math.sqrt(Z))/(2*d),m=this.radius_g+c*m,X*=c,u*=c,l.x=Math.atan2(X,m),l.y=Math.atan(u*Math.cos(l.x)/m)}return l.x=l.x+this.long0,l},names:["Geostationary Satellite View","Geostationary_Satellite","geos"]};xp.defaultDatum="WGS84",xp.Proj=tp,xp.WGS84=new xp.Proj("WGS84"),xp.Point=fp,xp.toPoint=op,xp.defs=ri,xp.nadgrid=function(l,d){var b=new DataView(d),Z=function(l){var d=l.getInt32(8,!1);if(11===d)return!1;d=l.getInt32(8,!0),11!==d&&console.warn("Failed to detect nadgrid endian-ness, defaulting to little-endian");return!0}(b),c=function(l,d){return{nFields:l.getInt32(8,d),nSubgridFields:l.getInt32(24,d),nSubgrids:l.getInt32(40,d),shiftType:Xp(l,56,64).trim(),fromSemiMajorAxis:l.getFloat64(120,d),fromSemiMinorAxis:l.getFloat64(136,d),toSemiMajorAxis:l.getFloat64(152,d),toSemiMinorAxis:l.getFloat64(168,d)}}(b,Z);c.nSubgrids>1&&console.log("Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored");var m=function(l,d,b){for(var Z=176,c=[],m=0;m<d.nSubgrids;m++){var X=Gp(l,Z,b),u=Wp(l,Z,X,b),G=Math.round(1+(X.upperLongitude-X.lowerLongitude)/X.longitudeInterval),W=Math.round(1+(X.upperLatitude-X.lowerLatitude)/X.latitudeInterval);c.push({ll:[mp(X.lowerLongitude),mp(X.lowerLatitude)],del:[mp(X.longitudeInterval),mp(X.latitudeInterval)],lim:[G,W],count:X.gridNodeCount,cvs:up(u)})}return c}(b,c,Z),X={header:c,subgrids:m};return Zp[l]=X,X},xp.transform=Lp,xp.mgrs=Cp,xp.version="__VERSION__",function(l){l.Proj.projections.add(uy),l.Proj.projections.add(ny),l.Proj.projections.add(hy),l.Proj.projections.add(yy),l.Proj.projections.add(Vy),l.Proj.projections.add(oy),l.Proj.projections.add(Ly),l.Proj.projections.add(Ky),l.Proj.projections.add(ey),l.Proj.projections.add(My),l.Proj.projections.add(Py),l.Proj.projections.add(By),l.Proj.projections.add(Uy),l.Proj.projections.add(fy),l.Proj.projections.add(jy),l.Proj.projections.add(Qy),l.Proj.projections.add(Ey),l.Proj.projections.add(Oy),l.Proj.projections.add(Dy),l.Proj.projections.add(Ay),l.Proj.projections.add(_y),l.Proj.projections.add(qy),l.Proj.projections.add($y),l.Proj.projections.add(lV),l.Proj.projections.add(tV),l.Proj.projections.add(oV),l.Proj.projections.add(RV),l.Proj.projections.add(SV),l.Proj.projections.add(YV)}(xp),xp.defs([["EPSG:4326","+title=WGS84 +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees +no_defs +type=crs"],["EPSG:3824","+title=TWD97 +proj=longlat +ellps=GRS80 +units=degrees +no_defs +type=crs"],["EPSG:3821","+title=TWD67 +proj=longlat +towgs84=-752,-358,-179,-.0000011698,.0000018398,.0000009822,.00002329 +ellps=aust_SA +units=degrees +no_defs +type=crs"],["EPSG:3826","+title=TWD97 TM2(121) +proj=tmerc +lat_0=0 +lon_0=121 +k=0.9999 +x_0=250000 +y_0=0 +ellps=GRS80 +units=m +no_defs +type=crs"],["EPSG:3825","+title=TWD97 TM2(119) +proj=tmerc +lat_0=0 +lon_0=119 +k=0.9999 +x_0=250000 +y_0=0 +ellps=GRS80 +units=m +no_defs +type=crs"],["EPSG:3828","+title=TWD67 TM2(121) +proj=tmerc +lat_0=0 +lon_0=121 +k=0.9999 +x_0=250000 +y_0=0 +ellps=aust_SA +towgs84=-752,-358,-179,-0.0000011698,0.0000018398,0.0000009822,0.00002329 +units=m +no_defs +type=crs"],["EPSG:3827","+title=TWD67 TM2(119) +proj=tmerc +lat_0=0 +lon_0=119 +k=0.9999 +x_0=250000 +y_0=0 +ellps=aust_SA +units=m +no_defs +type=crs"],["EPSG:3829","+title=UTM TM6(51N) +proj=utm +zone=51 +ellps=intl +towgs84=-637,-549,-203,0,0,0,0 +units=m +no_defs +type=crs"]]);var JV=em;var zV=Ib,vV=function(l,d){var b=[];return JV(l,(function(l,Z,c){d(l,Z,c)&&b.push(l)})),b},TV=ym,MV=G;var FV=function(l,d){return(MV(l)?zV:vV)(l,TV(d))};function CV(l){return!Fd(l)}var IV=kX,gV=du;var kV=function(l,d,b){var Z=null==l?0:l.length;return Z?(d=b||void 0===d?1:gV(d),IV(l,0,(d=Z-d)<0?0:d)):[]};function rV(l){let d=Jd(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},"useAbs");if(nW(d)||(d=!0),!Cd(l))return 0;let b=[];if(LX(l,(l=>{2===uX(l)&&Dd(l[0])&&Dd(l[1])&&b.push([GW(l[0]),GW(l[1])])})),!Cd(b))return 0;let Z,c=-1,m=uX(b),X=b[m-1],u=0;for(;++c<m;)Z=X,X=b[c],u+=Z[1]*X[0]-Z[0]*X[1];let G=u/2;return d&&(G=Math.abs(G)),G}function NV(l){if(!Cd(l))return 0;l=di(l);let d=0;return LX(l,((l,b)=>{let Z=rV(l);0===b?d=Z:d-=Z})),d<0?0:d}function PV(l){let d=GX(l);return 3===d?l=li(li(l)):2===d?l=li(l):1===d||0===d&&(l=[]),lb.multiPoint(l)}var wV=Array.prototype.reverse;var BV=function(l){return null==l?l:wV.call(l)},UV=H,fV=x;var jV=function(l){return"number"==typeof l||fV(l)&&"[object Number]"==UV(l)};let QV="in x-range",EV="out of x-range",OV="order list",DV="reverse order list";function AV(l,d){let b=null,Z=null;return b=l[0].x,Z=l[uX(l)-1].x,d<b?{err:EV,msg:`x[${d}] less than lower limit[${b}]`,data:{ps:l,x:d,xmin:b,xmax:Z}}:d>Z?{err:EV,msg:`x[${d}] greater than upper limit[${Z}]`,data:{ps:l,x:d,xmin:b,xmax:Z}}:QV}function _V(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!zd(l))return{err:"ps is not an array"};{let l=!Dd(d),b=!zd(d);if(l&&b)return{err:"px is not a number or an array"}}let Z=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(uX(l)<=0)return[];let b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyY");Id(Z)||(Z="y");let c=[];return LX(l,(l=>{let d=null,m=null;zd(l)&&uX(l)>=2?(d=Jd(l,0),m=Jd(l,1)):(d=Jd(l,b,null),m=Jd(l,Z,null)),Dd(d)&&Dd(m)&&(d=AX(d),m=AX(m),c.push({x:d,y:m}))})),c}(l,b);if(Jd(Z,"err"))return Jd(Z,"err");if(0===uX(Z))return{err:"ps(length=0) is not an effective array",ps:l,psEff:Z};if(1===uX(Z))return{err:"ps(length=1) is one point only",ps:l,psEff:Z};let c=function(l){let d=!0,b=!0;for(let Z=1;Z<uX(l);Z++){let c=l[Z-1],m=l[Z];if(d&&c.x>m.x&&(d=!1),b&&c.x<m.x&&(b=!1),c.x===m.x)return{err:`x can not be equal: i=${Z}, x=${c.x}`}}return d?OV:b?DV:"no"}(Z);if("no"===c)return{err:"psEff is not increasing or decreasing"};c===DV&&(c=OV,Z=BV(Z));let m=!zd(d);m&&(d=[d]);let X=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(uX(l)<=0)return[];let b=Jd(d,"keyX");Id(b)||(b="x");let Z=[];return LX(l,(l=>{let d=null;d=Dd(l)?AX(l):zd(l)&&uX(l)>=1?Jd(l,0):Jd(l,b,null),Dd(d)&&(d=AX(d),Z.push({x:d}))})),Z}(d,b),u=Jd(b,"mode");"linear"!==u&&"stairs"!==u&&"blocks"!==u&&(u="linear");let G,W=Tm(X,((l,d)=>{let c=Jd(l,"x"),m=null;try{"linear"===u?m=function(l,d){let b=AV(l,d);if(b!==QV)return b;let Z=null;for(let b=1;b<uX(l);b++){let c=l[b-1],m=l[b];if(c.x<=d&&d<=m.x){Z=((d-c.x)*m.y+(m.x-d)*c.y)/(m.x-c.x);break}}return null===Z?{err:EV}:Z}(Z,c):"blocks"===u?m=function(l,d){let b=AV(l,d);if(b!==QV)return b;let Z=null;for(let b=1;b<uX(l);b++){let c=l[b-1],m=l[b],X=c.x,u=m.x;if(X<=d&&d<=u){Z=m.y;break}}return null===Z?{err:EV}:Z}(Z,c):"stairs"===u&&(m=function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},Z=Jd(b,"xMin");if(jV(Z)){if(Z>l[0].x)return{err:`xMin=${Z} > ps[0].x=${l[0].x}`};Z===l[0].x||(l=[{x:Z,y:l[0].y},...l])}let c=Jd(b,"xMax");if(jV(c)){if(c<l[uX(l)-1].x)return{err:`xMax=${c} < ps[size(ps)-1].x=${l[uX(l)-1].x}`};if(c===l[uX(l)-1].x);else{let d={x:c,y:l[uX(l)-1].y};l=[...l,d]}}let m=AV(l,d);if(m!==QV)return m;let X=null;for(let b=0;b<uX(l);b++){let Z=Jd(l,b-1,null),c=Jd(l,b,null),m=Jd(l,b+1,null),u=c.x;Z&&(u=(Z.x+c.x)/2);let G=c.x;if(m&&(G=(m.x+c.x)/2),u<=d&&d<=G){X=c.y;break}}return null===X?{err:EV}:X}(Z,c,b))}catch(l){m={err:l.toString()}}return m}));return G=m?W[0]:W,G}function qV(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(uX(l)<=0)return[];let b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyInd","");Id(Z)||(Z="ind");let c=Jd(d,"returnObjArray");nW(c)||(c=!0);let m=[];return LX(l,((l,d)=>{let c=null;c=Dd(l)?AX(l):zd(l)&&uX(l)>=1?Jd(l,0):Jd(l,b,null),Dd(c)&&(c=AX(c),m.push({x:c,[Z]:d}))})),c||(m=Tm(m,(l=>[l.x,l[Z]]))),m}function $V(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(uX(l)<=0)return[];let b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyY");Id(Z)||(Z="y");let c=Jd(d,"keyInd","");Id(c)||(c="ind");let m=Jd(d,"returnObjArray");nW(m)||(m=!0);let X=[];return LX(l,((l,d)=>{let m=null,u=null;zd(l)&&uX(l)>=2?(m=Jd(l,0),u=Jd(l,1)):(m=Jd(l,b,null),u=Jd(l,Z,null)),Dd(m)&&Dd(u)&&(m=AX(m),u=AX(u),X.push({x:m,y:u,[c]:d}))})),m||(X=Tm(X,(l=>[l.x,l.y,l[c]]))),X}function lo(l,d){var b=Object.keys(l);if(Object.getOwnPropertySymbols){var Z=Object.getOwnPropertySymbols(l);d&&(Z=Z.filter((function(d){return Object.getOwnPropertyDescriptor(l,d).enumerable}))),b.push.apply(b,Z)}return b}function bo(l){for(var d=1;d<arguments.length;d++){var b=null!=arguments[d]?arguments[d]:{};d%2?lo(Object(b),!0).forEach((function(d){SX(l,d,b[d])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(b)):lo(Object(b)).forEach((function(d){Object.defineProperty(l,d,Object.getOwnPropertyDescriptor(b,d))}))}return l}var Zo=function(l,d){for(var b,Z=-1,c=l.length;++Z<c;){var m=d(l[Z]);void 0!==m&&(b=void 0===b?m:b+m)}return b},co=Zo,mo=cm;var Xo=function(l){return l&&l.length?co(l,mo):0},uo=Math.ceil,Go=Math.max;var Wo=function(l,d,b,Z){for(var c=-1,m=Go(uo((d-l)/(b||1)),0),X=Array(m);m--;)X[Z?m:++c]=l,l+=b;return X},to=Wo,so=wt,ao=$X;var no=function(l){return function(d,b,Z){return Z&&"number"!=typeof Z&&so(d,b,Z)&&(b=Z=void 0),d=ao(d),void 0===b?(b=d,d=0):b=ao(b),Z=void 0===Z?d<b?1:-1:ao(Z),to(d,b,Z,l)}},ho=no(),io=Zo;var po=function(l,d){var b=null==l?0:l.length;return b?io(l,d)/b:NaN},yo=cm;var Vo=function(l){return po(l,yo)};function oo(l,d){var b=Object.keys(l);if(Object.getOwnPropertySymbols){var Z=Object.getOwnPropertySymbols(l);d&&(Z=Z.filter((function(d){return Object.getOwnPropertyDescriptor(l,d).enumerable}))),b.push.apply(b,Z)}return b}function Ro(l){if(!Cd(l))return{err:"arr is not an effective array"};let d=Jd(l,0),b=0;Cd(d)&&(b=uX(d));let Z=[];if(0===b?(Z=FV(l,Dd),Z=Tm(Z,GW)):LX(l,(l=>{let d=!0,c=[];LX(ho(b),(b=>{let Z=Jd(l,b);Dd(Z)||(d=!1),c.push(GW(Z))})),d&&Z.push(c)})),0===uX(Z))return{err:"arr has no effective data"};let c=l=>{let d=(l=>{let d=MX(l),b=gX(l);return{min:d,max:b,range:b-d,mid:(b+d)/2,avg:Vo(l)}})(l),b=((l,d,b,Z)=>Tm(l,(l=>(l-d)/Z)))(l,d.min,d.max,d.range);return function(l){for(var d=1;d<arguments.length;d++){var b=null!=arguments[d]?arguments[d]:{};d%2?oo(Object(b),!0).forEach((function(d){SX(l,d,b[d])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(b)):oo(Object(b)).forEach((function(d){Object.defineProperty(l,d,Object.getOwnPropertyDescriptor(b,d))}))}return l}({arr:b},d)},m=null;return m=0===b?c(Z):Tm(ho(b),(l=>{let d=Tm(Z,l);return c(d)})),m}function Lo(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(!Cd(l))return{err:"arr is not an effective array"};if(uX(d)>0){if(!hW(Jd(l,0)))return{err:"arr is not an effective array of objects"};let b=[];LX(l,(l=>{let Z=[];LX(d,(d=>{Z.push(Jd(l,d,""))})),b.push(Z)})),l=b}return Ro(l)}function Ko(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyY");Id(Z)||(Z="y");let c=Jd(d,"keyZ","");Id(c)||(c="z");let m=Jd(d,"keyInd","");Id(m)||(m="ind");let X=Jd(d,"scale");if(Dd(X)||(X=1),X=GW(X),X<=0)throw new Error("scale need >= 0");let u=Lo(Tm(l,b)),G=Lo(Tm(l,Z)),W=Lo(Tm(l,c)),t=Math.max(u.range,G.range),s=t/2,a=[{min:u.mid-s,max:u.mid+s,range:t},{min:G.mid-s,max:G.mid+s,range:t},{min:W.min,max:W.max,range:W.range}],n=(l,d)=>jV(l)?a[d].range<=0?l:(l-a[d].min)/a[d].range*X:null;l=Tm(l,(l=>{let d=n(l[b],0),X=n(l[Z],1),u=n(l[c],2),G=l[m];return{[b]:d,[Z]:X,[c]:u,[m]:G}}));let h=Tm(l,b),i=MX(h),p=gX(h),y=Tm(l,Z),V=MX(y),o=gX(y),R=Tm(l,c);return{ps:l,psMinMax:{xmin:i,xmax:p,ymin:V,ymax:o,zmin:MX(R),zmax:gX(R)},st:a,nv:n,inv:(l,d)=>jV(l)?X<=0?l:l/X*a[d].range+a[d].min:null}}function eo(l,d){let b=Jd(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},"epsilon",1e-12);if(!Cd(l))return null;if(!Cd(d))return null;l=di(l),d=di(d),qh.epsilon(b);let Z=qh.intersect({regions:l},{regions:d});return Jd(Z,"regions",[])}function Ho(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Cd(l))return{err:"psSrc is not an array"};if(!hW(d)&&!Cd(d))return{err:"psTar is not an object or array"};let Z=hW(d);Z&&(d=[d]);let c=Jd(b,"keyX");Id(c)||(c="x");let m=Jd(b,"keyY");Id(m)||(m="y");let X=Jd(b,"keyZ");Id(X)||(X="z");let u=Jd(b,"scale");Dd(u)||(u=1),u=GW(u);let G=Jd(b,"funInterpFragment"),W=uW(G),t=Jd(b,"funInterpFragments"),s=uW(t),a="ind";if(l=Sh(l,{keyX:c,keyY:m,keyZ:X,keyInd:a}),0===uX(l))return{err:"psSrc has no effective data"};if(d=$V(d,{keyX:c,keyY:m,keyInd:a}),0===uX(d))return{err:"psTar has no effective data"};let n=Ko(l,{keyInd:a,scale:u});l=n.ps;let h=n.nv,i=n.inv,p=[...l],y=[...l],V={};LX(l,(l=>{let d=`${l.x}-${l.y}`;V[d]=l.z}));let o,R=Ba.from(y,(l=>l.x),(l=>l.y)),L=[0,0,u,u],K=R.voronoi(L),e=(d,b,Z,c)=>{let m;try{m=((d,b,Z,c)=>{let m=[...l],X={x:b,y:Z,z:0};m.push(X),d.push(X);let u=Ba.from(m,(l=>l.x),(l=>l.y)).voronoi(L),a=m.length-1,n=u.cellPolygon(a),h=NV(n),i=null;if(h>0){let l=[],b=u.delaunay.neighbors(a),Z=b.next();for(;!Z.done;){let d=Z.value;l.push(d),Z=b.next()}let m=Tm(l,(l=>{let d=[n],b=[K.cellPolygon(l)],Z=[];try{Z=eo(d,b)}catch(l){console.log("pgs1",d),console.log("pgs2",b),console.log(l)}let c=0;if(1===uX(Z))try{c=NV(Z[0])}catch(l){console.log("pgsInts",Z),console.log(l)}return{ia:c,idx:l}})),X=[];LX(m,(l=>{let b=l.ia/h,Z=d[l.idx].z,m=b*Z;W&&(Z=G({v:m,area:l.ia,areaTotal:h,areaRatio:b,z:Z,indSrc:l.idx,indTar:c}));let u={v:m,area:l.ia,areaTotal:h,areaRatio:b,z:Z,indSrc:l.idx,indTar:c};X.push(u)}));let p=Xo(Tm(X,"v"));s&&(p=t({ps:X,v:p,indTar:c})),i=p}return d[d.length-1].z=i,i})(d,b,Z,c)}catch(l){console.log(l),m=null,d.pop()}return m},H=(l,d)=>{let b=l.x,Z=h(b,0);if(!jV(Z))throw new Error(`invalid nx[${Z}]`);let u=l.y,G=h(u,1);if(!jV(G))throw new Error(`invalid ny[${G}]`);let W=((l,d,b)=>{let Z=`${l}-${d}`;if(Ad(V,Z))return V[Z];if(l<L[0]||l>L[2]||d<L[1]||d>L[3])return null;let c=e(p,l,d,b);return V[Z]=c,c})(Z,G,d),t=i(W,2);return jV(t)||(t=null),{[c]:b,[m]:u,[X]:t}};if(Z){let l=d[0];o=H(l,0)}else o=[],LX(d,((l,d)=>{o.push(H(l,d))}));return o}let xo={},So=function(l,d){let b=[];for(let Z=0;Z<d;Z++)b.push(l);return b},Yo=function(l,d){let b=So(0,d*d);for(let Z=0;Z<d;Z++)b[Z*d+Z]=l;return b},Jo=function(l,d,b,Z){let c,m,X=Array(b*Z);for(c=0;c<b;c++)for(m=0;m<Z;m++)X[c*Z+m]=l[c*Z+m]+d[c*Z+m];return X},zo=function(l,d,b,Z,c){let m,X,u,G=Array(b*c);for(m=0;m<b;m++)for(X=0;X<c;X++)for(G[m*c+X]=0,u=0;u<Z;u++)G[m*c+X]+=l[m*Z+u]*d[u*c+X];return G},vo=function(l,d){let b,Z,c,m=Array(d);for(b=0;b<d;b++)m[b]=l[b*d+b];for(b=0;b<d;b++){for(Z=0;Z<b;Z++)m[b]-=l[b*d+Z]*l[b*d+Z];if(m[b]<=0)return!1;for(m[b]=Math.sqrt(m[b]),Z=b+1;Z<d;Z++){for(c=0;c<b;c++)l[Z*d+b]-=l[Z*d+c]*l[b*d+c];l[Z*d+b]/=m[b]}}for(b=0;b<d;b++)l[b*d+b]=m[b];return!0},To=function(l,d){let b,Z,c,m;for(b=0;b<d;b++)for(l[b*d+b]=1/l[b*d+b],Z=b+1;Z<d;Z++){for(m=0,c=b;c<Z;c++)m-=l[Z*d+c]*l[c*d+b];l[Z*d+b]=m/l[Z*d+Z]}for(b=0;b<d;b++)for(Z=b+1;Z<d;Z++)l[b*d+Z]=0;for(b=0;b<d;b++){for(l[b*d+b]*=l[b*d+b],c=b+1;c<d;c++)l[b*d+b]+=l[c*d+b]*l[c*d+b];for(Z=b+1;Z<d;Z++)for(c=Z;c<d;c++)l[b*d+Z]+=l[c*d+b]*l[c*d+Z]}for(b=0;b<d;b++)for(Z=0;Z<b;Z++)l[b*d+Z]=l[Z*d+b]},Mo=function(l,d){let b,Z,c,m,X,u,G,W,t,s,a,n=d,h=Array(d*d),i=Array(d),p=Array(d),y=Array(d);for(b=0;b<d;b++)for(m=0;m<d;m++)h[b*d+m]=b===m?1:0;for(m=0;m<d;m++)y[m]=0;for(b=0;b<d;b++){for(W=0,m=0;m<d;m++)if(1!==y[m])for(X=0;X<d;X++)0===y[X]&&Math.abs(l[m*d+X])>=W&&(W=Math.abs(l[m*d+X]),c=m,Z=X);if(++y[Z],c!==Z){for(u=0;u<d;u++)a=l[c*d+u],l[c*d+u]=l[Z*d+u],l[Z*d+u]=a;for(u=0;u<n;u++)a=h[c*d+u],h[c*d+u]=h[Z*d+u],h[Z*d+u]=a}if(p[b]=c,i[b]=Z,0===l[Z*d+Z])return!1;for(s=1/l[Z*d+Z],l[Z*d+Z]=1,u=0;u<d;u++)l[Z*d+u]*=s;for(u=0;u<n;u++)h[Z*d+u]*=s;for(G=0;G<d;G++)if(G!==Z){for(t=l[G*d+Z],l[G*d+Z]=0,u=0;u<d;u++)l[G*d+u]-=l[Z*d+u]*t;for(u=0;u<n;u++)h[G*d+u]-=h[Z*d+u]*t}}for(u=d-1;u>=0;u--)if(p[u]!==i[u])for(X=0;X<d;X++)a=l[X*d+p[u]],l[X*d+p[u]]=l[X*d+i[u]],l[X*d+i[u]]=a;return!0},Fo=function(l,d,b,Z,c){return d+(Z-d)/b*(1-Math.exp(-1/c*Math.pow(l/b,2)))},Co=function(l,d,b,Z,c){return d+(Z-d)/b*(1-Math.exp(-1/c*(l/b)))},Io=function(l,d,b,Z,c){return l>b?d+(Z-d)/b:d+(Z-d)/b*(l/b*1.5-.5*Math.pow(l/b,3))};function go(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Cd(l))return{err:"psSrc is not an array"};if(!hW(d)&&!Cd(d))return{err:"psTar is not an object or array"};let Z=hW(d);Z&&(d=[d]);let c=Jd(b,"keyX");Id(c)||(c="x");let m=Jd(b,"keyY");Id(m)||(m="y");let X=Jd(b,"keyZ");Id(X)||(X="z");let u=Jd(b,"scale");Dd(u)||(u=1),u=GW(u);let G=Jd(b,"model");"exponential"!==G&&"gaussian"!==G&&"spherical"!==G&&(G="exponential");let W=Jd(b,"sigma2");Dd(W)||(W=0),W=GW(W);let t=Jd(b,"alpha");Dd(t)||(t=100),t=GW(t);let s=Jd(b,"returnWithVariogram");if(nW(s)||(s=!1),l=Sh(l,b),0===uX(l))return{err:"psSrc has no effective data"};if(d=$V(d,b),0===uX(d))return{err:"psTar has no effective data"};let a=Ko(l,{scale:u});l=a.ps;let n=a.nv,h=a.inv,i={};LX(l,(l=>{let d=`${l.x}-${l.y}`;i[d]=l.z}));let p=[],y=[],V=[];LX(l,(l=>{p.push(l.x),y.push(l.y),V.push(l.z)}));let o,R=xo.train(V,p,y,G,W,t),L=l=>{let d=l.x,b=n(d,0);if(!jV(b))throw new Error(`invalid nx[${b}]`);let Z=l.y,u=n(Z,1);if(!jV(u))throw new Error(`invalid ny[${u}]`);let G=((l,d)=>{let b=`${l}-${d}`;if(Ad(i,b))return i[b];let Z=xo.predict(l,d,R);return i[b]=Z,Z})(b,u),W=h(G,2);return jV(W)||(W=null),{[c]:d,[m]:Z,[X]:W}};if(Z){let l=d[0];o=L(l)}else o=[],LX(d,(l=>{o.push(L(l))}));return s&&(o={result:o,variogram:R}),o}xo.train=function(l,d,b,Z,c,m){let X,u,G,W,t={t:l,x:d,y:b,nugget:0,range:0,sill:0,A:1/3,n:0};switch(Z){case"gaussian":t.model=Fo;break;case"exponential":t.model=Co;break;case"spherical":t.model=Io}let s=l.length,a=Array((s*s-s)/2);for(X=0,G=0;X<s;X++)for(u=0;u<X;u++,G++)a[G]=Array(2),a[G][0]=Math.pow(Math.pow(d[X]-d[u],2)+Math.pow(b[X]-b[u],2),.5),a[G][1]=Math.abs(l[X]-l[u]);a.sort((function(l,d){return l[0]-d[0]})),t.range=a[(s*s-s)/2-1][0];let n=(s*s-s)/2>30?30:(s*s-s)/2,h=t.range/n,i=So(0,n),p=So(0,n);if(n<30)for(W=0;W<n;W++)i[W]=a[W][0],p[W]=a[W][1];else{for(X=0,u=0,G=0,W=0;X<n&&u<(s*s-s)/2;X++,G=0){for(;a[u][0]<=(X+1)*h&&(i[W]+=a[u][0],p[W]+=a[u][1],u++,G++,!(u>=(s*s-s)/2)););G>0&&(i[W]/=G,p[W]/=G,W++)}if(W<2)return t}let y=[];for(X=0;X<W;X++){let l=i[X],d=p[X];y.push([l,d])}let V={data:a,bars:y};t.svpd=V,s=W,t.range=i[s-1]-i[0];let o=So(1,2*s),R=Array(s),L=t.A;for(X=0;X<s;X++){switch(Z){case"gaussian":o[2*X+1]=1-Math.exp(-1/L*Math.pow(i[X]/t.range,2));break;case"exponential":o[2*X+1]=1-Math.exp(-1/L*i[X]/t.range);break;case"spherical":o[2*X+1]=i[X]/t.range*1.5-.5*Math.pow(i[X]/t.range,3)}R[X]=p[X]}let K=function(l,d,b){let Z,c,m=Array(b*d);for(Z=0;Z<d;Z++)for(c=0;c<b;c++)m[c*d+Z]=l[Z*b+c];return m}(o,s,2),e=zo(K,o,2,s,2);e=Jo(e,Yo(1/m,2),2,2);let H=e.slice(0);vo(e,2)?To(e,2):(Mo(H,2),e=H);let x=zo(zo(e,K,2,2,s),R,2,s,1);t.nugget=x[0],t.sill=x[1]*t.range+t.nugget,t.n=d.length,s=d.length;let S=Array(s*s);for(X=0;X<s;X++){for(u=0;u<X;u++)S[X*s+u]=t.model(Math.pow(Math.pow(d[X]-d[u],2)+Math.pow(b[X]-b[u],2),.5),t.nugget,t.range,t.sill,t.A),S[u*s+X]=S[X*s+u];S[X*s+X]=t.model(0,t.nugget,t.range,t.sill,t.A)}let Y=Jo(S,Yo(c,s),s,s),J=Y.slice(0);vo(Y,s)?To(Y,s):(Mo(J,s),Y=J);let z=Y.slice(0),v=zo(Y,l,s,s,1);return t.K=z,t.M=v,t},xo.predict=function(l,d,b){let Z,c=Array(b.n);for(Z=0;Z<b.n;Z++)c[Z]=b.model(Math.pow(Math.pow(l-b.x[Z],2)+Math.pow(d-b.y[Z],2),.5),b.nugget,b.range,b.sill,b.A);return zo(c,b.M,1,b.n,1)[0]},xo.variance=function(l,d,b){let Z,c=Array(b.n);for(Z=0;Z<b.n;Z++)c[Z]=b.model(Math.pow(Math.pow(l-b.x[Z],2)+Math.pow(d-b.y[Z],2),.5),b.nugget,b.range,b.sill,b.A);return b.model(0,b.nugget,b.range,b.sill,b.A)+zo(zo(c,b.K,1,b.n,b.n),c,1,b.n,1)[0]};var ko,ro={};let No=null;try{let{loadPyodide:l}=(ko||(ko=1,function(l,d){!function(l){var d={exports:{}},b={exports:{}};!function(l,d){l.exports=function(){function l(l){return!isNaN(parseFloat(l))&&isFinite(l)}function d(l){return l.charAt(0).toUpperCase()+l.substring(1)}function b(l){return function(){return this[l]}}var Z=["isConstructor","isEval","isNative","isToplevel"],c=["columnNumber","lineNumber"],m=["fileName","functionName","source"],X=["args"],u=["evalOrigin"],G=Z.concat(c,m,X,u);function W(l){if(l)for(var b=0;b<G.length;b++)void 0!==l[G[b]]&&this["set"+d(G[b])](l[G[b]])}W.prototype={getArgs:function(){return this.args},setArgs:function(l){if("[object Array]"!==Object.prototype.toString.call(l))throw new TypeError("Args must be an Array");this.args=l},getEvalOrigin:function(){return this.evalOrigin},setEvalOrigin:function(l){if(l instanceof W)this.evalOrigin=l;else{if(!(l instanceof Object))throw new TypeError("Eval Origin must be an Object or StackFrame");this.evalOrigin=new W(l)}},toString:function(){var l=this.getFileName()||"",d=this.getLineNumber()||"",b=this.getColumnNumber()||"",Z=this.getFunctionName()||"";return this.getIsEval()?l?"[eval] ("+l+":"+d+":"+b+")":"[eval]:"+d+":"+b:Z?Z+" ("+l+":"+d+":"+b+")":l+":"+d+":"+b}},W.fromString=function(l){var d=l.indexOf("("),b=l.lastIndexOf(")"),Z=l.substring(0,d),c=l.substring(d+1,b).split(","),m=l.substring(b+1);if(0===m.indexOf("@"))var X=/@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(m,""),u=X[1],G=X[2],t=X[3];return new W({functionName:Z,args:c||void 0,fileName:u,lineNumber:G||void 0,columnNumber:t||void 0})};for(var t=0;t<Z.length;t++)W.prototype["get"+d(Z[t])]=b(Z[t]),W.prototype["set"+d(Z[t])]=function(l){return function(d){this[l]=Boolean(d)}}(Z[t]);for(var s=0;s<c.length;s++)W.prototype["get"+d(c[s])]=b(c[s]),W.prototype["set"+d(c[s])]=function(d){return function(b){if(!l(b))throw new TypeError(d+" must be a Number");this[d]=Number(b)}}(c[s]);for(var a=0;a<m.length;a++)W.prototype["get"+d(m[a])]=b(m[a]),W.prototype["set"+d(m[a])]=function(l){return function(d){this[l]=String(d)}}(m[a]);return W}()}(b),function(l,d){var Z,c,m,X;l.exports=(Z=b.exports,c=/(^|@)\S+:\d+/,m=/^\s*at .*(\S+:\d+|\(native\))/m,X=/^(eval@)?(\[native code])?$/,{parse:function(l){if(void 0!==l.stacktrace||void 0!==l["opera#sourceloc"])return this.parseOpera(l);if(l.stack&&l.stack.match(m))return this.parseV8OrIE(l);if(l.stack)return this.parseFFOrSafari(l);throw new Error("Cannot parse given Error object")},extractLocation:function(l){if(-1===l.indexOf(":"))return[l];var d=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(l.replace(/[()]/g,""));return[d[1],d[2]||void 0,d[3]||void 0]},parseV8OrIE:function(l){return l.stack.split("\n").filter((function(l){return!!l.match(m)}),this).map((function(l){l.indexOf("(eval ")>-1&&(l=l.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(,.*$)/g,""));var d=l.replace(/^\s+/,"").replace(/\(eval code/g,"(").replace(/^.*?\s+/,""),b=d.match(/ (\(.+\)$)/);d=b?d.replace(b[0],""):d;var c=this.extractLocation(b?b[1]:d),m=b&&d||void 0,X=["eval","<anonymous>"].indexOf(c[0])>-1?void 0:c[0];return new Z({functionName:m,fileName:X,lineNumber:c[1],columnNumber:c[2],source:l})}),this)},parseFFOrSafari:function(l){return l.stack.split("\n").filter((function(l){return!l.match(X)}),this).map((function(l){if(l.indexOf(" > eval")>-1&&(l=l.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===l.indexOf("@")&&-1===l.indexOf(":"))return new Z({functionName:l});var d=/((.*".+"[^@]*)?[^@]*)(?:@)/,b=l.match(d),c=b&&b[1]?b[1]:void 0,m=this.extractLocation(l.replace(d,""));return new Z({functionName:c,fileName:m[0],lineNumber:m[1],columnNumber:m[2],source:l})}),this)},parseOpera:function(l){return!l.stacktrace||l.message.indexOf("\n")>-1&&l.message.split("\n").length>l.stacktrace.split("\n").length?this.parseOpera9(l):l.stack?this.parseOpera11(l):this.parseOpera10(l)},parseOpera9:function(l){for(var d=/Line (\d+).*script (?:in )?(\S+)/i,b=l.message.split("\n"),c=[],m=2,X=b.length;m<X;m+=2){var u=d.exec(b[m]);u&&c.push(new Z({fileName:u[2],lineNumber:u[1],source:b[m]}))}return c},parseOpera10:function(l){for(var d=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,b=l.stacktrace.split("\n"),c=[],m=0,X=b.length;m<X;m+=2){var u=d.exec(b[m]);u&&c.push(new Z({functionName:u[3]||void 0,fileName:u[2],lineNumber:u[1],source:b[m]}))}return c},parseOpera11:function(l){return l.stack.split("\n").filter((function(l){return!!l.match(c)&&!l.match(/^Error created at/)}),this).map((function(l){var d,b=l.split("@"),c=this.extractLocation(b.pop()),m=b.shift()||"",X=m.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;m.match(/\(([^)]*)\)/)&&(d=m.replace(/^[^(]+\(([^)]*)\)$/,"$1"));var u=void 0===d||"[arguments not available]"===d?void 0:d.split(",");return new Z({functionName:X,args:u,fileName:c[0],lineNumber:c[1],columnNumber:c[2],source:l})}),this)}})}(d);var Z=d.exports;const c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node&&void 0===process.browser;let m,X,u,G,W,t,s,a,n;if(t=c?function(l,d){return u.resolve(d||".",l)}:function(l,d){return void 0===d&&(d=location),new URL(l,d).toString()},c||(s="/"),a=c?async function(l,d){if(l.startsWith("file://")&&(l=l.slice("file://".length)),l.includes("://")){let d=await X(l);if(!d.ok)throw new Error(`Failed to load '${l}': request failed.`);return new Uint8Array(await d.arrayBuffer())}{const d=await W.readFile(l);return new Uint8Array(d.buffer,d.byteOffset,d.byteLength)}}:async function(l,d){const b=new URL(l,location);let Z=d?{integrity:d}:{},c=await fetch(b,Z);if(!c.ok)throw new Error(`Failed to load '${b}': request failed.`);return new Uint8Array(await c.arrayBuffer())},globalThis.document)n=async l=>await import(l);else if(globalThis.importScripts)n=async l=>{try{globalThis.importScripts(l)}catch(d){if(!(d instanceof TypeError))throw d;await import(l)}};else{if(!c)throw new Error("Cannot determine runtime environment");n=async function(l){l.startsWith("file://")&&(l=l.slice("file://".length)),l.includes("://")?G.runInThisContext(await(await X(l)).text()):await import(m.pathToFileURL(l).href)}}function h(l){var d="function"==typeof Symbol&&Symbol.iterator,b=d&&l[d],Z=0;if(b)return b.call(l);if(l&&"number"==typeof l.length)return{next:function(){return l&&Z>=l.length&&(l=void 0),{value:l&&l[Z++],done:!l}}};throw new TypeError(d?"Object is not iterable.":"Symbol.iterator is not defined.")}function i(l){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var d,b=l[Symbol.asyncIterator];return b?b.call(l):(l=h(l),d={},Z("next"),Z("throw"),Z("return"),d[Symbol.asyncIterator]=function(){return this},d);function Z(b){d[b]=l[b]&&function(d){return new Promise((function(Z,c){!function(l,d,b,Z){Promise.resolve(Z).then((function(d){l({value:d,done:b})}),d)}(Z,c,(d=l[b](d)).done,d.value)}))}}}const p=async l=>{const d=[];await async function l(b){var Z,c;try{for(var m,X=i(b.values());!(m=await X.next()).done;){const b=m.value;d.push(b),"directory"===b.kind&&await l(b)}}catch(l){Z={error:l}}finally{try{m&&!m.done&&(c=X.return)&&await c.call(X)}finally{if(Z)throw Z.error}}}(l);const b=new Map;b.set(".",l);for(const Z of d){const d=(await l.resolve(Z)).join("/");b.set(d,Z)}return b};function y(l,d){let b;b=null!=d.stdLibURL?d.stdLibURL:d.indexURL+"python_stdlib.zip",function(l,d){const b=a(d);l.preRun.push((()=>{const d=l._py_version_major(),Z=l._py_version_minor();l.FS.mkdirTree("/lib"),l.FS.mkdirTree(`/lib/python${d}.${Z}/site-packages`),l.addRunDependency("install-stdlib"),b.then((b=>{l.FS.writeFile(`/lib/python${d}${Z}.zip`,b)})).catch((l=>{console.error("Error occurred while installing the standard library:"),console.error(l)})).finally((()=>{l.removeRunDependency("install-stdlib")}))}))}(l,b),function(l,d){l.preRun.push((function(){try{l.FS.mkdirTree(d)}catch(l){console.error(`Error occurred while making a home directory '${d}':`),console.error(l),console.error("Using '/' for a home directory instead"),d="/"}l.ENV.HOME=d,l.FS.chdir(d)}))}(l,d.homedir),function(l,d){l.preRun.push((()=>{for(const b of d)l.FS.mkdirTree(b),l.FS.mount(l.FS.filesystems.NODEFS,{root:b},b)}))}(l,d._node_mounts),l.preRun.push((()=>function(l){const d=l.FS,b=l.FS.filesystems.MEMFS,Z=l.PATH,c={DIR_MODE:16895,FILE_MODE:33279,mount:function(l){if(!l.opts.fileSystemHandle)throw new Error("opts.fileSystemHandle is required");return b.mount.apply(null,arguments)},syncfs:async(l,d,b)=>{try{const Z=c.getLocalSet(l),m=await c.getRemoteSet(l),X=d?m:Z,u=d?Z:m;await c.reconcile(l,X,u),b(null)}catch(l){b(l)}},getLocalSet:l=>{let b=Object.create(null);function c(l){return"."!==l&&".."!==l}function m(l){return d=>Z.join2(l,d)}let X=d.readdir(l.mountpoint).filter(c).map(m(l.mountpoint));for(;X.length;){let l=X.pop(),Z=d.stat(l);d.isDir(Z.mode)&&X.push.apply(X,d.readdir(l).filter(c).map(m(l))),b[l]={timestamp:Z.mtime,mode:Z.mode}}return{type:"local",entries:b}},getRemoteSet:async l=>{const d=Object.create(null),b=await p(l.opts.fileSystemHandle);for(const[m,X]of b)"."!==m&&(d[Z.join2(l.mountpoint,m)]={timestamp:"file"===X.kind?(await X.getFile()).lastModifiedDate:new Date,mode:"file"===X.kind?c.FILE_MODE:c.DIR_MODE});return{type:"remote",entries:d,handles:b}},loadLocalEntry:l=>{const Z=d.lookupPath(l).node,c=d.stat(l);if(d.isDir(c.mode))return{timestamp:c.mtime,mode:c.mode};if(d.isFile(c.mode))return Z.contents=b.getFileDataAsTypedArray(Z),{timestamp:c.mtime,mode:c.mode,contents:Z.contents};throw new Error("node type not supported")},storeLocalEntry:(l,b)=>{if(d.isDir(b.mode))d.mkdirTree(l,b.mode);else{if(!d.isFile(b.mode))throw new Error("node type not supported");d.writeFile(l,b.contents,{canOwn:!0})}d.chmod(l,b.mode),d.utime(l,b.timestamp,b.timestamp)},removeLocalEntry:l=>{var b=d.stat(l);d.isDir(b.mode)?d.rmdir(l):d.isFile(b.mode)&&d.unlink(l)},loadRemoteEntry:async l=>{if("file"===l.kind){const d=await l.getFile();return{contents:new Uint8Array(await d.arrayBuffer()),mode:c.FILE_MODE,timestamp:d.lastModifiedDate}}if("directory"===l.kind)return{mode:c.DIR_MODE,timestamp:new Date};throw new Error("unknown kind: "+l.kind)},storeRemoteEntry:async(l,b,c)=>{const m=l.get(Z.dirname(b)),X=d.isFile(c.mode)?await m.getFileHandle(Z.basename(b),{create:!0}):await m.getDirectoryHandle(Z.basename(b),{create:!0});if("file"===X.kind){const l=await X.createWritable();await l.write(c.contents),await l.close()}l.set(b,X)},removeRemoteEntry:async(l,d)=>{const b=l.get(Z.dirname(d));await b.removeEntry(Z.basename(d)),l.delete(d)},reconcile:async(l,b,m)=>{let X=0;const u=[];Object.keys(b.entries).forEach((function(l){const Z=b.entries[l],c=m.entries[l];(!c||d.isFile(Z.mode)&&Z.timestamp.getTime()>c.timestamp.getTime())&&(u.push(l),X++)})),u.sort();const G=[];if(Object.keys(m.entries).forEach((function(l){b.entries[l]||(G.push(l),X++)})),G.sort().reverse(),!X)return;const W="remote"===b.type?b.handles:m.handles;for(const d of u){const b=Z.normalize(d.replace(l.mountpoint,"/")).substring(1);if("local"===m.type){const l=W.get(b),Z=await c.loadRemoteEntry(l);c.storeLocalEntry(d,Z)}else{const l=c.loadLocalEntry(d);await c.storeRemoteEntry(W,b,l)}}for(const d of G)if("local"===m.type)c.removeLocalEntry(d);else{const b=Z.normalize(d.replace(l.mountpoint,"/")).substring(1);await c.removeRemoteEntry(W,b)}}};l.FS.filesystems.NATIVEFS_ASYNC=c}(l)))}function V(l,d){l.runPythonInternal_dict=l._pyodide._base.eval_code("{}"),l.importlib=l.runPythonInternal("import importlib; importlib");let b=l.importlib.import_module;l.sys=b("sys"),l.sys.path.insert(0,d.homedir),l.os=b("os");let Z=l.runPythonInternal("import __main__; __main__.__dict__"),c=l.runPythonInternal("import builtins; builtins.__dict__");var m;l.globals=(m=c,new Proxy(Z,{get:(l,d)=>"get"===d?d=>{let b=l.get(d);return void 0===b&&(b=m.get(d)),b}:"has"===d?d=>l.has(d)||m.has(d):Reflect.get(l,d)}));let X=l._pyodide._importhook;X.register_js_finder.callKwargs({hook:function(l){"__all__"in l||Object.defineProperty(l,"__all__",{get:()=>u.toPy(Object.getOwnPropertyNames(l).filter((l=>"__all__"!==l))),enumerable:!1,configurable:!0})}}),X.register_js_module("js",d.jsglobals);let u=l.makePublicAPI();return X.register_js_module("pyodide_js",u),l.pyodide_py=b("pyodide"),l.pyodide_code=b("pyodide.code"),l.pyodide_ffi=b("pyodide.ffi"),l.package_loader=b("pyodide._package_loader"),l.sitepackages=l.package_loader.SITE_PACKAGES.__str__(),l.dsodir=l.package_loader.DSO_DIR.__str__(),l.defaultLdLibraryPath=[l.dsodir,l.sitepackages],l.os.environ.__setitem__("LD_LIBRARY_PATH",l.defaultLdLibraryPath.join(":")),u.pyodide_py=l.pyodide_py,u.globals=l.globals,u}async function o(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await async function(){if(!c)return;if(m=(await Promise.resolve().then((function(){return Ud}))).default,W=await Promise.resolve().then((function(){return Ud})),X=globalThis.fetch?fetch:(await Promise.resolve().then((function(){return $o}))).default,G=(await Promise.resolve().then((function(){return Ud}))).default,u=await Promise.resolve().then((function(){return Ud})),s=u.sep,void 0!==Nd)return;const l={fs:await Promise.resolve().then((function(){return Ud})),crypto:await Promise.resolve().then((function(){return Ud})),ws:await Promise.resolve().then((function(){return Ud})),child_process:await Promise.resolve().then((function(){return Ud}))};globalThis.require=function(d){return l[d]}}();let d=l.indexURL||function(){if("string"==typeof __dirname)return __dirname;let l;try{throw new Error}catch(d){l=d}let d=Z.parse(l)[0].fileName;const b=d.lastIndexOf(s);if(-1===b)throw new Error("Could not extract indexURL path from pyodide module location");return d.slice(0,b)}();d=t(d),d.endsWith("/")||(d+="/"),l.indexURL=d;const b={fullStdLib:!1,jsglobals:globalThis,stdin:globalThis.prompt?globalThis.prompt:void 0,homedir:"/home/pyodide",lockFileURL:d+"repodata.json",args:[],_node_mounts:[],packageCacheDir:d},a=Object.assign(b,l),h=function(){let l={noImageDecoding:!0,noAudioDecoding:!0,noWasmDecoding:!1,preRun:[],quit:(d,b)=>{throw l.exited={status:d,toThrow:b},b}};return l}();h.print=a.stdout,h.printErr=a.stderr,h.arguments=a.args;const i={config:a};h.API=i,y(h,a);const p=new Promise((l=>h.postRun=l));if(h.locateFile=l=>a.indexURL+l,"function"!=typeof _createPyodideModule){const l=`${a.indexURL}pyodide.asm.js`;await n(l)}if(await _createPyodideModule(h),await p,h.exited)throw h.exited.toThrow;if("0.23.4"!==i.version)throw new Error(`Pyodide version does not match: '0.23.4' <==> '${i.version}'. If you updated the Pyodide version, make sure you also updated the 'indexURL' parameter passed to loadPyodide.`);h.locateFile=l=>{throw new Error("Didn't expect to load any more file_packager files!")};let[o,R]=i.rawRun("import _pyodide_core");o&&h.API.fatal_loading_error("Failed to import _pyodide_core\n",R);const L=V(i,a);if(L.version.includes("dev")||i.setCdnUrl(`https://cdn.jsdelivr.net/pyodide/v${L.version}/full/`),await i.packageIndexReady,i._pyodide._importhook.register_module_not_found_hook(i._import_name_to_package_name,i.repodata_unvendored_stdlibs_and_test),"0.23.4"!==i.repodata_info.version)throw new Error("Lock file version doesn't match Pyodide version");return i.package_loader.init_loaded_packages(),a.fullStdLib&&await L.loadPackage(i.repodata_unvendored_stdlibs),i.initializeStreams(a.stdin,a.stdout,a.stderr),L}globalThis.loadPyodide=o,l.loadPyodide=o,l.version="0.23.4",Object.defineProperty(l,"__esModule",{value:!0})}(d)}(0,ro)),ro);No=l}catch(l){}var Po=No;async function wo(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},b=null,Z=function(){let l,d,b=new Promise((function(){l=arguments[0],d=arguments[1]}));return b.resolve=l,b.reject=d,b}();if(!uW(l))return Z.reject("waitfunction需輸入函數f"),Z;let c=async()=>{let d=l();return function(l){let d,b=Object.prototype.toString.call(l);if(d="[object Promise]"===b,d)return!0;if("[object Function]"!==b)return!1;try{d="function"!=typeof l.subscribe&&"function"==typeof l.then}catch(l){}return d}(d)&&(d=await d),d};if(b=await c(),!0===b)return Z.resolve(),Z;let m=Jd(d,"attemptNum",null);Xs(m)||(m=200);let X=Jd(d,"timeInterval",null);Xs(X)||(X=1e3);let u=0,G=setInterval((async()=>{u+=1,b=await c(),!0===b&&(clearInterval(G),Z.resolve()),u>m&&(clearInterval(G),Z.reject(`exceeded attemptNum[${m}]`))}),X);return Z}var Bo={};!function(l){var d=Object.prototype.hasOwnProperty,b="~";function Z(){}function c(l,d,b){this.fn=l,this.context=d,this.once=b||!1}function m(l,d,Z,m,X){if("function"!=typeof Z)throw new TypeError("The listener must be a function");var u=new c(Z,m||l,X),G=b?b+d:d;return l._events[G]?l._events[G].fn?l._events[G]=[l._events[G],u]:l._events[G].push(u):(l._events[G]=u,l._eventsCount++),l}function X(l,d){0==--l._eventsCount?l._events=new Z:delete l._events[d]}function u(){this._events=new Z,this._eventsCount=0}Object.create&&(Z.prototype=Object.create(null),(new Z).__proto__||(b=!1)),u.prototype.eventNames=function(){var l,Z,c=[];if(0===this._eventsCount)return c;for(Z in l=this._events)d.call(l,Z)&&c.push(b?Z.slice(1):Z);return Object.getOwnPropertySymbols?c.concat(Object.getOwnPropertySymbols(l)):c},u.prototype.listeners=function(l){var d=b?b+l:l,Z=this._events[d];if(!Z)return[];if(Z.fn)return[Z.fn];for(var c=0,m=Z.length,X=new Array(m);c<m;c++)X[c]=Z[c].fn;return X},u.prototype.listenerCount=function(l){var d=b?b+l:l,Z=this._events[d];return Z?Z.fn?1:Z.length:0},u.prototype.emit=function(l,d,Z,c,m,X){var u=b?b+l:l;if(!this._events[u])return!1;var G,W,t=this._events[u],s=arguments.length;if(t.fn){switch(t.once&&this.removeListener(l,t.fn,void 0,!0),s){case 1:return t.fn.call(t.context),!0;case 2:return t.fn.call(t.context,d),!0;case 3:return t.fn.call(t.context,d,Z),!0;case 4:return t.fn.call(t.context,d,Z,c),!0;case 5:return t.fn.call(t.context,d,Z,c,m),!0;case 6:return t.fn.call(t.context,d,Z,c,m,X),!0}for(W=1,G=new Array(s-1);W<s;W++)G[W-1]=arguments[W];t.fn.apply(t.context,G)}else{var a,n=t.length;for(W=0;W<n;W++)switch(t[W].once&&this.removeListener(l,t[W].fn,void 0,!0),s){case 1:t[W].fn.call(t[W].context);break;case 2:t[W].fn.call(t[W].context,d);break;case 3:t[W].fn.call(t[W].context,d,Z);break;case 4:t[W].fn.call(t[W].context,d,Z,c);break;default:if(!G)for(a=1,G=new Array(s-1);a<s;a++)G[a-1]=arguments[a];t[W].fn.apply(t[W].context,G)}}return!0},u.prototype.on=function(l,d,b){return m(this,l,d,b,!1)},u.prototype.once=function(l,d,b){return m(this,l,d,b,!0)},u.prototype.removeListener=function(l,d,Z,c){var m=b?b+l:l;if(!this._events[m])return this;if(!d)return X(this,m),this;var u=this._events[m];if(u.fn)u.fn!==d||c&&!u.once||Z&&u.context!==Z||X(this,m);else{for(var G=0,W=[],t=u.length;G<t;G++)(u[G].fn!==d||c&&!u[G].once||Z&&u[G].context!==Z)&&W.push(u[G]);W.length?this._events[m]=1===W.length?W[0]:W:X(this,m)}return this},u.prototype.removeAllListeners=function(l){var d;return l?(d=b?b+l:l,this._events[d]&&X(this,d)):(this._events=new Z,this._eventsCount=0),this},u.prototype.off=u.prototype.removeListener,u.prototype.addListener=u.prototype.on,u.prefixed=b,u.EventEmitter=u,l.exports=u}({get exports(){return Bo},set exports(l){Bo=l}});var Uo=Bo;let fo="",jo=null,Qo=null;async function Eo(){if("done"===fo)return;if("loading"===fo)return void await wo((()=>null!==jo));fo="loading";let l=function(){let l=_d();return Po||l.loadPyodide}(),d=await l();await d.loadPackage("micropip");let b=d.pyimport("micropip");jo=d,Qo=b,fo="done"}let Oo=null,Do={};Oo=function(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,d=0,b=[];var Z;qt(Z=l)&&$t(Z)<0&&(l=0),l=$t(l);let c=new Uo;return c.get=function(){return b.length>0?(d+=1,b.splice(0,1)[0]):null},c.cb=function(){d-=1,d<0&&(d=0),b.length>0&&c.emit("message",b)},c.push=function(Z){b.push(Z),(l<=0||d<l)&&c.emit("message",b)},c.clear=function(){d=0,b=[]},c}(1),Oo.on("message",(function(l){let d=Oo.get();d&&async function(){Ad(Do,d)||(Do[d]="loading"),await Qo.install(d),await jo.loadPackage(d),Do[d]="done",Oo.cb()}().catch((l=>{console.log(l)}))}));async function Ao(l){LX(l,(l=>{!function(l){Oo.push(l)}(l)})),await async function(l){await wo((()=>{let d=!0;return LX(l,(l=>{if("done"!==Jd(Do,l))return d=!1,!1})),d}))}(l)}function _o(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(uX(l)<=0)return[];let b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyY");Id(Z)||(Z="y");let c=Jd(d,"keyZ","");Id(c)||(c="z");let m=Jd(d,"keyV");Id(m)||(m="v");let X=Jd(d,"keyInd","");Id(X)||(X="ind");let u=Jd(d,"returnObjArray");nW(u)||(u=!0);let G=[];return LX(l,((l,d)=>{let u=null,W=null,t=null,s=null;zd(l)&&uX(l)>=4?(u=Jd(l,0),W=Jd(l,1),t=Jd(l,2),s=Jd(l,3)):(u=Jd(l,b,null),W=Jd(l,Z,null),t=Jd(l,c,null),s=Jd(l,m,null)),Dd(u)&&Dd(W)&&Dd(t)&&Dd(s)&&(u=AX(u),W=AX(W),t=AX(t),s=AX(s),G.push({x:u,y:W,z:t,v:s,[X]:d}))})),u||(G=Tm(G,(l=>[l.x,l.y,l.z,l.v,l[X]]))),G}var qo={};!function(l,d){var b=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==m)return m;throw new Error("unable to locate global object")}();l.exports=d=b.fetch,b.fetch&&(d.default=b.fetch.bind(b)),d.Headers=b.Headers,d.Request=b.Request,d.Response=b.Response}({get exports(){return qo},set exports(l){qo=l}},qo);var $o=Z({__proto__:null,default:qo},[qo]);l.bufferMultiPolygon=function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Cd(l))return null;let Z=Jd(b,"units","");return Id(Z)||(Z="degrees"),l=aX(l=WX(l,b)),l=lb.helpers.multiPolygon(l),eX(lb.buffer(l,d,{units:Z}))},l.calcContours=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Cd(l))return{err:"points is not an array"};let b=Jd(d,"keyX");Id(b)||(b="x");let Z=Jd(d,"keyY");Id(Z)||(Z="y");let c=Jd(d,"keyZ");Id(c)||(c="z");let m=Jd(d,"withStyle");nW(m)||(m=!1);let X=Jd(d,"returnGeojson");nW(X)||(X=!1);let u=Jd(d,"inverseCoordinate");nW(u)||(u=!1),l=Sh(l,Ch(Ch({},d),{},{returnObjArray:!1}));let G=Jd(d,"containInner",null),W=Jd(d,"clipInner",null),t=Jd(d,"clipOuter",null),s=Jd(d,"thresholds",null),a=Cd(s),n=l[0][2],h=l[0][2];for(let d=1;d<uX(l);d++){let b=l[d][2];n>b&&(n=b),h<b&&(h=b)}let i=Ih(l,s);if(!Cd(i))return[];let p=Tm(i,((l,d)=>({sepZone:Jd(l,"sepZone",""),latLngs:l.coordinates,level:l.value,effectArea:Yh(l.coordinates),effectAreaCentroid:Jh(l.coordinates)})));if(!a){let l=Tm(p,"level"),d=MX(l),b=gX(l);if(b<h&&(console.log("非預期: pmax < valueMax",b<h,b,h),p.push({mode:"virtualEnd",sepZone:"",latLngs:[],level:h,effectArea:0,effectAreaCentroid:null})),d>n){console.log("非預期: pmin > valueMin",d>n,d,n),p=[{mode:"virtualStart",sepZone:"",latLngs:[],level:n,effectArea:0,effectAreaCentroid:null},...p]}}a||LX(p,((l,d)=>{l.level=Math.min(l.level,h),l.level=Math.max(l.level,n)}));let y=[];for(let l=0;l<=p.length-2;l++){let d=p[l],b=p[l+1],Z=d.latLngs,c=b.latLngs,m={text:`${p[l].level} - ${p[l+1].level}`,low:p[l].level,up:p[l+1].level},X=[];X=zh(Z,c),X="virtualStart"===d.mode?c:"top"===b.sepZone?Z:zh(Z,c);let u=XW(d);delete u.level;let G=Ch(Ch({},u),{},{sepZone:Jd(b,"sepZone",""),latLngs:X,range:m});y.push(G)}{let l=[];LX(y,((d,b)=>{let Z=null;Z=Cd(G)?vh(d.latLngs,G):d.latLngs,uX(Z)>0&&l.push(Ch(Ch({},d),{},{latLngs:Z}))})),y=l}{let l=[];LX(y,((d,b)=>{let Z=null;Z=Cd(W)?zh(d.latLngs,W):d.latLngs,uX(Z)>0&&l.push(Ch(Ch({},d),{},{latLngs:Z}))})),y=l}{let l=[];LX(y,(d=>{let b=null;b=Cd(t)?vh(d.latLngs,t):d.latLngs,uX(b)>0&&l.push(Ch(Ch({},d),{},{latLngs:b}))})),y=l}{let l=0,d=null,b=null;if(LX(y,((Z,c)=>{l<Z.effectArea&&(d=c,l=Z.effectArea,b=Z.effectAreaCentroid)})),null===d)return[];LX(y,((l,d)=>{y[d].center=b}))}if(m||X){let l=Jd(d,"kpGradientColor",null);hW(l)||(l={0:"rgb(255, 255, 255)",.2:"rgb(254, 178, 76)",.4:"rgb(252, 78, 42)",.6:"rgb(220, 58, 38)",.8:"rgb(200, 40, 23)",1:"rgb(180, 30, 60)"});let b=Jd(d,"funGetFillColor",null);if(!uW(b)){let d=ta.interp(l);b=(l,b)=>{let Z="";return Z=d(b>0?l/b:1),Z}}let Z=Jd(d,"fillOpacity",null);WW(Z)||(Z=.2),Z=GW(Z);let c=Jd(d,"lineColor",null);Id(c)||(c="");let m=Jd(d,"funGetLineColor",null),X=Jd(d,"lineOpacity",null);WW(X)||(X=1),X=GW(X);let u=Jd(d,"lineWidth",null);WW(u)||(u=1),u=GW(u);let G=y.length-1;y=Tm(y,((l,d)=>{let W=b(d,G),t="";t=uW(m)?m(d,G):Id(c)?c:W;let s={color:t,weight:u,fillColor:W,fillOpacity:Z,stroke:t,"stroke-width":u,"stroke-opacity":X,fill:W,"fill-opacity":Z};return Ch(Ch({},l),{},{style:s})}))}let V=y;if(X){V={type:"FeatureCollection",features:Tm(y,(l=>{let d=l.latLngs;return u&&(d=Mh(l.latLngs)),{type:"Feature",properties:{style:l.style},geometry:{type:"MultiPolygon",coordinates:d}}}))}}return V},l.clipMultiPolygon=zh,l.clipPolygon=function(l,d){let b=Jd(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},"epsilon",1e-12);if(!Cd(l))return null;if(!Cd(d))return null;l=di(l),d=di(d),qh.epsilon(b);let Z=qh.difference({regions:l},{regions:d});return Jd(Z,"regions",[])},l.convertCoordinate=function(l,d,b){if(!Cd(b)&&2!==uX(b))throw new Error("ps is not an array(length=2)");let Z={TWD97:"EPSG:3824",TWD97TM2:"EPSG:3826",TWD67:"EPSG:3821",TWD67TM2:"EPSG:3828","TWD97:121":"EPSG:3824","TWD97TM2:121":"EPSG:3826","TWD67:121":"EPSG:3821","TWD67TM2:121":"EPSG:3828","TWD97TM2:119":"EPSG:3825","TWD67TM2:119":"EPSG:3827",UTMTM6:"EPSG:3829","UTMTM6:51N":"EPSG:3829",WGS84:"EPSG:4326"};Ad(Z,l)&&(l=Z[l]),Ad(Z,d)&&(d=Z[d]);let c=new xp.Proj(l),m=new xp.Proj(d);return xp(c,m,b)},l.distilMultiPolygon=eX,l.fixCloseMultiPolygon=aX,l.fixGeometryMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},b=Jd(d,"w","");Dd(b)||(b=.001),b=GW(b);let Z=Jd(d,"units","");Id(Z)||(Z="degrees"),l=XW(l);let c=[];return LX(l,(l=>{let d=function(l){let d=lb.polygon(l);return eX(lb.buffer(d,b,{units:Z}))}(l);LX(d,(l=>{c.push(l)}))})),c=FV(c,CV),c},l.fixNoCloseMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cd(l)?(l=WX(l,d),l=Tm(l,(l=>l=Tm(l,(l=>{let d=uX(l)-1,b=l[0],Z=l[d];return sX(b,Z)&&(l=kV(l)),l}))))):null},l.getAreaMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Cd(l))return null;l=WX(l,d);let b=0;return LX(l,(l=>{b+=NV(l)})),b},l.getAreaMultiPolygonSm=Yh,l.getAreaPolygon=NV,l.getAreaRingString=rV,l.getBoxPolygon=function(l){let d=PV(l);return lb.bbox(d)},l.getCenterOfMassMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Cd(l))return null;l=WX(l,d),l=lb.helpers.multiPolygon(l);let b=lb.centerOfMass(l);return Jd(b,"geometry.coordinates",[])},l.getCentroidMultiPolygon=Jh,l.getPointDepth=GX,l.importTurf=lb,l.interp1=function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Cd(l))return{err:"psSrc is not an array"};if(!Dd(d)&&!hW(d)&&!Cd(d))return{err:"psTar is not a number or an object or an array"};let Z=Dd(d)||hW(d);Dd(d)?d=[GW(d)]:hW(d)&&(d=[d]);let c=Jd(b,"keyX");Id(c)||(c="x");let m=Jd(b,"keyY");Id(m)||(m="y");let X=Jd(b,"method");"linear"!==X&&"stairs"!==X&&"blocks"!==X&&(X="linear");let u=Jd(b,"useSync");if(nW(u)||(u=!1),l=$V(l,{keyX:c,keyY:m,keyInd:"ind"}),0===uX(l))return{err:"psSrc has no effective data"};if(l=jt(l,"x"),d=qV(d,{keyX:c,keyInd:"ind"}),0===uX(d))return{err:"psTar has no effective data"};let G=()=>{let u,G=_V(l,d,bo(bo({},b),{},{mode:X,keyX:"x",keyY:"y"})),W=[];return LX(d,((l,d)=>{let b=G[d];b=Dd(b)?GW(b):null;let Z={[c]:l.x,[m]:b};W.push(Z)})),u=Z?W[0]:W,u};return u?G():(async()=>{let l=null;try{l=G();let d=Jd(l,"err");return Id(d)?Promise.reject(d):l}catch(l){return console.log(l),Promise.reject(l.toString())}})()},l.interp2=function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},Z=Jd(b,"method");"naturalNeighbor"!==Z&&"kriging"!==Z&&(Z="naturalNeighbor");let c=Jd(b,"useSync");nW(c)||(c=!1);let m=()=>{let c=null;try{"naturalNeighbor"===Z?c=Ho(l,d,b):"kriging"===Z&&(c=go(l,d,b))}catch(l){c={err:l.toString()}}return c};return c?m():(async()=>{let l=null;try{l=m();let d=Jd(l,"err");return Id(d)?Promise.reject(d):l}catch(l){return console.log(l),Promise.reject(l.toString())}})()},l.interp2Kriging=go,l.interp2NaturalNeighbor=Ho,l.interp2Normalize=Ko,l.interp3=async function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Cd(l))return{err:"psSrc is not an array"};if(!hW(d)&&!Cd(d))return{err:"psTar is not an object or array"};let Z=hW(d);Z&&(d=[d]);let c=Jd(b,"keyX");Id(c)||(c="x");let m=Jd(b,"keyY");Id(m)||(m="y");let X=Jd(b,"keyZ");Id(X)||(X="z");let u=Jd(b,"keyV");if(Id(u)||(u="v"),l=_o(l,{keyX:c,keyY:m,keyZ:X,keyV:u,keyInd:"ind"}),0===uX(l))return{err:"psSrc has no effective data"};if(d=Sh(d,{keyX:c,keyY:m,keyZ:X,keyInd:"ind"}),0===uX(d))return{err:"psTar has no effective data"};let G=[],W=[];for(let d=0;d<l.length;d++){let b=l[d];G.push([b.x,b.y,b.z]),W.push(b.v)}let t=[];for(let l=0;l<d.length;l++){let b=d[l];t.push([b.x,b.y,b.z])}let s,a=[G,W,t],n=await async function(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},d=Jd(l,"pkgs",[]);zd(d)||(d=[]);let b=Jd(l,"imps",[]);zd(b)||(b=[]);let Z=Jd(l,"inps",[]);zd(Z)||(Z=[]);let c=Jd(l,"content","");await Eo(),await Ao(d);let m="";LX(b,(l=>{m+=l+"\n"}));let X="";LX(Z,((l,d)=>{X+=`rIn${d+1} = ${JSON.stringify(l)}\n`}));let u=`\n${m}\n\n${X}\n\nret = ''\n\n${c}\n\n# print(ret)\n    `;return await jo.runPython(u),jo.globals.get("ret").toJs()}({pkgs:["scipy"],imps:["from scipy.interpolate import griddata"],inps:a,content:"\nret = griddata(rIn1, rIn2, rIn3, method='linear')\n    "}),h=[];return LX(d,((l,d)=>{let b=n[d];b=Dd(b)?GW(b):null;let Z={[c]:l.x,[m]:l.y,[X]:l.z,[u]:b};h.push(Z)})),s=Z?h[0]:h,s},l.intersectMultiPolygon=vh,l.intersectPolygon=eo,l.invCoordMultiPolygon=Mh,l.invCoordPolygon=Th,l.isPointInPolygon=function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Cd(l)&&Cd(d)?(d=WX(d,b),d=lb.helpers.multiPolygon(d),lb.booleanPointInPolygon(l,d)):null},l.kriging=xo,l.maskMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Cd(l)?(l=WX(l,d),l=lb.helpers.multiPolygon(l),eX(lb.mask(l))):null},l.normalizeArray=Lo,l.parseGeometryCollection=KX,l.ptsXYZVtoArr=_o,l.ptsXYZtoArr=Sh,l.ptsXYtoArr=$V,l.ptsXtoArr=qV,l.simplifyMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Cd(l))return null;let b=Jd(d,"tolerance");Dd(b)||(b=.005),b=GW(b);let Z=Jd(d,"highQuality");nW(Z)||(Z=!0),l=WX(l,d),l=lb.helpers.multiPolygon(l);let c=lb.simplify(l,{tolerance:b,highQuality:Z});return c=Jd(c,"geometry.coordinates",[]),c},l.splineMultiPolygon=function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return l=XW(l),l=Tm(l,(l=>function(l){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return l=XW(l),Tm(l,((l,b)=>{let Z=lb.helpers.lineString(l),c=lb.bezierSpline(Z,d);return Jd(c,"geometry.coordinates")}))}(l,d))),l},l.toMultiPoint=PV,l.toMultiPolygon=WX,l.toPolygon=di,l.unionMultiPolygon=function(l,d){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Cd(l)&&Cd(d)?(l=WX(l,b),d=WX(d,b),l=lb.helpers.multiPolygon(l),d=lb.helpers.multiPolygon(d),eX(lb.union(l,d))):null},l.unionPolygon=function(l,d){let b=Jd(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},"epsilon",1e-12);if(!Cd(l))return null;if(!Cd(d))return null;l=di(l),d=di(d),qh.epsilon(b);let Z=qh.union({regions:l},{regions:d});return Jd(Z,"regions",[])}}));
//# sourceMappingURL=w-gis.umd.js.map
